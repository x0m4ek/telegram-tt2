{"version":3,"file":"9451.c8b03041f1c8de328a10.js","mappings":"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AkC8X,IACpExwE,eAAgB58D,MAAyB68D,EAAAA,EAAAA,KAA+B7tF,GACxE4+J,uBACA79B,mBACA0+B,wBAAwBC,EAAAA,EAAAA,KAA6B1/J,EAAQ7M,EAAQsK,QACrEw5I,gBACA4e,gBAAiBmJ,KAAmBG,GACpCrJ,kBAAmBkJ,KAAmBG,GACtCQ,oBAAqBX,GACrBv+B,uBAAuBzjC,EAAAA,EAAAA,KAA4Bh9F,GACnDy0J,sBAAsBmL,EAAAA,EAAAA,KAA2B5/J,GACjDq2J,qBACAhyI,YACA65I,iBACA7gE,mBAAoB9+C,GAAc++C,wBAClCo3D,QACA3jI,SACA+mI,eACAC,WACD,GArKeh4J,EAvjBoC8/J,EACtDj/J,WACAyxC,qBACAqqD,eACAa,sBACA3gG,SACA8E,kBACAvO,UACAyrK,sBACA79B,kBACA++B,QACApL,OACA3jI,QACA+6C,SACA+oF,aACAmI,YACAlI,aACA0K,cACAzK,gBACAC,WACAI,SACAW,oBACAV,WACAl0J,YACA80J,wBACAz1J,OACAkqG,YACAwrD,sBACAhB,UACAP,mBACAC,iBACAzlH,YACAne,uBACA0Q,aACAksD,gBACA0nE,iBACAC,mBACAC,UACAvtH,cACAwtH,YACAvjI,cACAwjI,aACAC,YACAC,eACAn1B,wBACA0zB,kBACAD,uBACAnzJ,mBACAo0J,aACAa,iBACAyJ,0BACAxoB,gBACA0oB,uBACA9J,mBACAC,qBACArB,wBACA4B,qBACA6H,kBACA7gE,sBACAvgG,WACAC,uBACA+6J,gBACAC,eAEA,MAAM,WACJ3wC,GAAU,qBACV24C,GAAoB,aACpBC,GAAY,WACZznD,GAAU,gBACV5xF,GAAe,cACfs5I,GAAa,YACbC,GAAW,cACXC,GAAa,uBACbC,GAAsB,sBACtBC,GAAqB,kBACrBC,GAAiB,cACjB99J,GAAa,oBACbC,GAAmB,WACnB89J,GAAU,gBACVC,GAAe,qBACfC,GAAoB,aACpB99D,GAAY,aACZia,GAAY,kBACZ8jD,GAAiB,QACjBC,GAAO,aACP7jF,GAAY,eACZ8jF,GAAc,UACdC,GAAS,eACTC,GAAc,0BACdzhD,GAAyB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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/common/ReportAvatarModal.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/pickers/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/hooks/useDraggable.ts","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.module.scss?a30f","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.module.scss?b350","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.tsx","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.module.scss?8058","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.module.scss?c843","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/common/pickers/ItemPicker.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayChannelPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayUserPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.module.scss?9dc8","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.module.scss?77cd","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.module.scss?5f0b","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.tsx","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.module.scss?b66d","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.module.scss?2ca6","webpack://telegram-t/./src/components/common/AboutMonetizationModal.tsx","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.module.scss?bb6b","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.tsx","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.module.scss?4803","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.module.scss?843e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.module.scss?3c2e","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/BotAppResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/main/FolderPickerMenu.tsx","webpack://telegram-t/./src/components/left/main/FolderPickerMenu.module.scss?4d7c","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.module.scss?6993","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://telegram-t/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.module.scss?f0ab","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.module.scss?725f","webpack://telegram-t/./src/components/middle/search/MiddleSearch.tsx","webpack://telegram-t/./src/hooks/events/useOutsideClick.ts","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/visibility/isFullyVisible.ts","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/main/WebAppsCloseConfirmationModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/common/PeerBadge.module.scss?732c","webpack://telegram-t/./src/components/common/PeerBadge.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx"],"sourcesContent":["import type {\n  ApiMessage, ApiPeer, ApiPeerPhotos, ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  profilePhotos: ApiPeerPhotos;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n} | {\n  type: 'sponsoredMessage';\n  message: ApiSponsoredMessage;\n  mediaIndex?: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, profilePhotos, standaloneMedia, mediaIndex, sponsoredMessage,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  standaloneMedia?: MediaViewerMedia[];\n  sponsoredMessage?: ApiSponsoredMessage;\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner && profilePhotos) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      profilePhotos,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  if (sponsoredMessage) {\n    return {\n      type: 'sponsoredMessage',\n      message: sponsoredMessage,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.photo) {\n    return {\n      media: action.photo,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo, document: webPageDocument } = webPage;\n    const isDocumentMedia = webPageDocument && (isDocumentPhoto(webPageDocument) || isDocumentVideo(webPageDocument));\n    const mediaDocument = isDocumentMedia ? webPageDocument : undefined;\n    const media = webPageVideo || mediaDocument || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport getOffsetToContainer from '../../../util/visibility/getOffsetToContainer';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [\n      MediaViewerOrigin.Inline,\n      MediaViewerOrigin.ScheduledInline,\n      MediaViewerOrigin.Album,\n      MediaViewerOrigin.ScheduledAlbum,\n    ].includes(origin)\n    && !isMessageImageFullyVisible(toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n\n  const { top } = getOffsetToContainer(imageEl, messageListElement);\n\n  return top > messageListElement.scrollTop\n    && top + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.PreviewMedia:\n      containerSelector = `#preview-media${index}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.SponsoredMessage:\n      containerSelector = '.Transition_slide-active > .MessageList .sponsored-media-preview';\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n    case MediaViewerOrigin.PreviewMedia:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  peerId?: string;\n  photo?: ApiPhoto;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportAvatarModal: FC<OwnProps> = ({\n  isOpen,\n  peerId,\n  photo,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { reportProfilePhoto } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    reportProfilePhoto({\n      chatId: peerId, photo, reason: selectedReason, description,\n    });\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (!peerId || !photo) {\n    return undefined;\n  }\n\n  const title = lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAvatarModal);\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useUnmountCleanup(() => {\n    setZoomChange(1);\n  });\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ActiveDownloads, MediaViewerOrigin, MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow, selectCurrentChat,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  chat?: ApiChat;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReportAvatar?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReportAvatar: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  chat,\n  isChatProtected,\n  isProtected,\n  canReportAvatar,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReportAvatar: onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      const message = item?.type === 'message' ? item.message : undefined;\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, profilePhotos, mediaIndex } = item;\n    const avatarPhoto = profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.profilePhotos.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return item?.type !== 'sponsoredMessage' && (isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <Icon name=\"download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <Icon name=\"download\" />\n      </Button>\n    ));\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message' && chat) {\n      openDeleteMessageModal({\n        chatId: chat?.id,\n        messageIds: [item.message.id],\n        isSchedule: messageListType === 'scheduled',\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReportAvatar) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon as IconName}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <Icon name=\"zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <Icon name=\"zoom-in\" />\n      </Button>\n      {canReportAvatar && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <Icon name=\"flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <Icon name=\"copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = item?.type === 'avatar' && item.profilePhotos.photos[item.mediaIndex];\n\n    const chat = selectCurrentChat(global);\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      chat,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  buttonText?: string;\n  onClick: () => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', buttonText, isForVideo, onClick, handleSponsoredClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const onButtonClick = useLastCallback(() => {\n    handleSponsoredClick();\n  });\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n      {Boolean(buttonText) && (\n        <Button\n          className={buildClassName('media-viewer-footer-content', 'media-viewer-button')}\n          size=\"default\"\n          color=\"primary\"\n          isRectangular\n          onClick={onButtonClick}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useUnmountCleanup } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useUnmountCleanup(() => {\n    setCurrentTime(0);\n  });\n\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useUnmountCleanup(() => {\n    setIsVideoWaiting(false);\n  });\n\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon: IconName = useMemo(() => {\n    if (volume === 0 || isMuted) return 'muted';\n    if (volume < 0.3) return 'volume-1';\n    if (volume < 0.6) return 'volume-2';\n    return 'volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <Icon name={isPlaying ? 'pause' : 'play'} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <Icon name={volumeIcon} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <Icon name=\"pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <Icon name={isFullscreen ? 'smallscreen' : 'fullscreen'} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  isClickDisabled?: boolean;\n  isSponsoredMessage?: boolean;\n  handleSponsoredClick?: (isFromMedia?: boolean) => void;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  onClose,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n  isSponsoredMessage,\n  handleSponsoredClick,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(\n    !isBuffered && !isUnsupported, undefined, undefined, 'slow',\n  );\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransitionDeprecated(\n    IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow',\n  );\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isSponsoredMessage) {\n      handleSponsoredClick?.(true);\n      onClose(e);\n    }\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, bufferingHandlers);\n\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <Icon name=\"play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isSponsoredMessage && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiSponsoredMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  selectIsMessageProtected, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: () => void;\n  handleSponsoredClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage | ApiSponsoredMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}: OwnProps & StateProps) => {\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const isSponsoredMessage = item.type === 'sponsoredMessage';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n            isSponsoredMessage={isSponsoredMessage}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({ message: textMessage, forcePlayback: true, isForMediaViewer: true }));\n  const buttonText = textMessage && 'buttonText' in textMessage ? textMessage.buttonText : undefined;\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n          isSponsoredMessage={isSponsoredMessage}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          buttonText={buttonText}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n    } = selectTabState(global).mediaViewer;\n    const message = item.type === 'message' ? item.message : undefined;\n    const sponsoredMessage = item.type === 'sponsoredMessage' ? item.message : undefined;\n    const textMessage = message || sponsoredMessage;\n\n    return {\n      origin,\n      textMessage,\n      isProtected: message && selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: () => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getPeerTitle, isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const profilePhotos = item.type === 'avatar' ? item.profilePhotos : undefined;\n    const avatar = profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === profilePhotos?.fallbackPhoto?.id;\n    const isPersonalAvatar = avatar?.id === profilePhotos?.personalPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = profilePhotos?.count\n      && (profilePhotos.count + (profilePhotos?.fallbackPhoto ? 1 : 0));\n    const currentIndex = item.mediaIndex! + 1 + (profilePhotos?.personalPhoto ? -1 : 0);\n    const countText = count && lang('Of', [currentIndex, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isPersonalAvatar ? 'lng_mediaview_profile_photo_by_you'\n          : isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n            : isChannel ? 'lng_mediaview_channel_photo'\n              : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText && !isPersonalAvatar && !isFallbackAvatar) {\n      parts.push(countText);\n    }\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getPeerTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPeer,\n  ApiPeerPhotos,\n  ApiPhoto,\n  ApiSponsoredMessage,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPeerPhotos,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage, selectSponsoredMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Icon from '../common/icons/Icon';\nimport ReportAvatarModal from '../common/ReportAvatarModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  chatMessages?: Record<number, ApiMessage>;\n  sponsoredMessage?: ApiSponsoredMessage;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  profilePhotos,\n  chatMessages,\n  sponsoredMessage,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n    clickSponsoredMessage,\n    openUrl,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia || sponsoredMessage);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id || message?.chatId;\n  const prevSenderId = usePreviousDeprecated<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportAvatarModalOpen, openReportAvatarModal, closeReportAvatarModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, profilePhotos, mediaIndex, sponsoredMessage,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReportAvatar = (() => {\n    if (isChatWithSelf) return false;\n    if (currentItem?.type !== 'avatar' || !avatarOwner) return false;\n    const info = currentItem.profilePhotos;\n    if (media === info.personalPhoto) return false;\n    return true;\n  })();\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      requestMutation(() => {\n        document.body.classList.toggle('is-media-viewer-open', isOpen);\n      });\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePreviousDeprecated<ApiMessage | undefined>(message);\n  const prevIsHidden = usePreviousDeprecated<boolean | undefined>(isHidden);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const prevItem = usePreviousDeprecated(currentItem);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback(() => {\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleSponsoredClick = useLastCallback((isFromMedia?: boolean) => {\n    if (!sponsoredMessage || !chatId) return;\n\n    clickSponsoredMessage({ isMedia: isFromMedia, isFullscreen: true, peerId: chatId });\n    openUrl({ url: sponsoredMessage!.url });\n    closeMediaViewer();\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.profilePhotos.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, profilePhotos: fromProfilePhotos, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromProfilePhotos && nextIndex < fromProfilePhotos.photos.length) {\n        return {\n          type: 'avatar',\n          avatarOwner: fromAvatarOwner,\n          profilePhotos: fromProfilePhotos,\n          mediaIndex: nextIndex,\n        };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'sponsoredMessage') {\n      const { message: fromSponsoredMessage, mediaIndex: fromSponsoredMessageIndex } = from;\n      const nextIndex = fromSponsoredMessageIndex! + direction;\n      if (nextIndex >= 0 && fromSponsoredMessage) {\n        return { type: 'sponsoredMessage', message: fromSponsoredMessage, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReportAvatar={canReportAvatar}\n          onBeforeDelete={handleBeforeDelete}\n          onReportAvatar={openReportAvatarModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportAvatarModal\n          isOpen={isReportAvatarModalOpen}\n          onClose={closeReportAvatarModal}\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n        handleSponsoredClick={handleSponsoredClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n      isSponsoredMessage,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = selectPeerPhotos(global, chatId!);\n\n      return {\n        profilePhotos,\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let sponsoredMessage: ApiSponsoredMessage | undefined;\n    if (isSponsoredMessage && chatId) {\n      if (origin === MediaViewerOrigin.SponsoredMessage) {\n        sponsoredMessage = selectSponsoredMessage(global, chatId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      sponsoredMessage,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch--container';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <Icon name=\"eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-past\" className={styles.icon} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-future\" className={styles.icon} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...selectedIds || [], ...contactIds], query: searchQuery, type: 'user' }));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds]);\n\n  return (\n    <PeerPicker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      withDefaultPadding\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n      allowMultiple\n      withStatus\n      itemInputType=\"checkbox\"\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...closeFriendIds, ...contactIds], query: searchQuery, type: 'user' }));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <PeerPicker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        withDefaultPadding\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        withStatus\n        itemInputType=\"checkbox\"\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPrivacySettings, ApiStory, ApiUser, PrivacyVisibility,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getHours } from '../../util/dates/units';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getPeerTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? getHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <Icon name={option.icon} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <Icon name=\"next\" />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getPeerTitle,\n  isUserId,\n} from '../../../global/helpers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransitionDeprecated(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport {\n  getReactionKey, getStoryKey, isSameReaction, isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && isSameReaction(sentReaction, HEART_REACTION);\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={getReactionKey(sentReaction)}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getPeerTitle, isChatChannel, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_SAFARI } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransitionDeprecated(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransitionDeprecated(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransitionDeprecated(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransitionDeprecated(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleLongPressStart,\n    onEnd: handleLongPressEnd,\n  });\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getPeerTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon: IconName = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <Icon name={privacyIcon} />\n        {isOut && <Icon name=\"next\" />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getPeerTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getPeerTitle(lang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <Icon name={(isMuted || noSound) ? 'speaker-muted-story' : 'speaker-story'} />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {lang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {lang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>\n                {lang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay\n            key={`area-overlay-${storyId}-${peerId}`}\n            story={story}\n            isActive\n            isStoryPlaying={isDropdownMenuOpen}\n          />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getPeerTitle(lang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n    reportModal,\n    giftInfoModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || reportModal || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal || giftInfoModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n  };\n})(Story));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getPeerTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePreviousDeprecated(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <Icon name={areReactionsFirst ? 'heart-outline' : 'recent'} className={styles.iconSort} />\n        <Icon name=\"down\" className={styles.iconDown} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  beginHeavyAnimation,\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor, reportStory } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePreviousDeprecated(isOpen);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const prevPeerId = usePreviousDeprecated(peerId);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useLastCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  });\n\n  const handleCloseDeleteModal = useLastCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  });\n\n  const openMessageReport = useLastCallback(() => {\n    if (!storyId) return;\n    reportStory({ storyId, peerId });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openMessageReport}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\n\nimport { PEER_PICKER_ITEM_HEIGHT_PX } from '../../../config';\nimport {\n  getCanPostInChat, getGroupStatus, getUserStatus, isUserOnline,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectTopics, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport TopicIcon from '../TopicIcon';\nimport PickerItem from './PickerItem';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\nconst ITEM_CLASS_NAME = 'ChatOrUserPicker-item';\nconst TOPIC_ITEM_HEIGHT_PX = 56;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const selectTopicsById = useLastCallback((global: GlobalState) => {\n    if (!forumId) {\n      return undefined;\n    }\n\n    return selectTopics(global, forumId);\n  });\n\n  const forumTopicsById = useSelector(selectTopicsById);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chat = chatsById[forumId!];\n\n    if (!chat || !forumTopicsById) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = forumTopicsById\n      ? Object.values(forumTopicsById).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chat, topic, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : forumTopicsById;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch, forumTopicsById]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!forumTopicsById) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleClick = useLastCallback((chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!forumTopicsById) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const renderChatItem = useCallback((id: string, index: number) => {\n    const global = getGlobal();\n    const peer = selectPeer(global, id);\n    if (!peer) {\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? peer.isSelf : undefined;\n\n    function getSubtitle() {\n      if (!peer) return undefined;\n      if (peer.id === currentUserId) return [lang('SavedMessagesInfo')];\n      if (isApiPeerChat(peer)) {\n        return [getGroupStatus(lang, peer)];\n      }\n\n      const userStatus = selectUserStatus(global, peer.id);\n      return [\n        getUserStatus(lang, peer, userStatus),\n        buildClassName(isUserOnline(peer, userStatus, true) && 'online'),\n      ];\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={ITEM_CLASS_NAME}\n        title={<FullNameTitle peer={peer} isSavedMessages={isSelf} />}\n        avatarElement={(\n          <Avatar\n            peer={peer}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        ripple\n        style={`top: ${(viewportOffset + index) * PEER_PICKER_ITEM_HEIGHT_PX}px;`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleClick(id)}\n      />\n    );\n  }, [currentUserId, lang, viewportOffset]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={(topicIds?.length || 0) * TOPIC_ITEM_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {!topicIds && <Loading />}\n          {topicIds?.map((topicId, i) => (\n            <PickerItem\n              key={`${forumId}_${topicId}`}\n              className={ITEM_CLASS_NAME}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(forumId!, topicId)}\n              style={`top: ${(viewportOffset + i) * TOPIC_ITEM_HEIGHT_PX}px;`}\n              avatarElement={(\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n              )}\n              title={renderText(topics[topicId].title)}\n            />\n          ))}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            itemSelector={`.${ITEM_CLASS_NAME}`}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * PEER_PICKER_ITEM_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map(renderChatItem)}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterPeersByQuery } from '../../global/helpers/peers';\nimport {\n  filterChatIdsByType, selectChat, selectChatFullInfo, selectUser,\n} from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport ChatOrUserPicker from './pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n\n    const peerIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = selectChat(global, id);\n      const user = selectUser(global, id);\n      if (user && !isDeletedUser(user)) return true;\n\n      const chatFullInfo = selectChatFullInfo(global, id);\n\n      return chat && chatFullInfo && getCanPostInChat(chat, undefined, undefined, chatFullInfo);\n    });\n\n    const sorted = sortChatIds(\n      filterPeersByQuery({\n        ids: unique([\n          ...(currentUserId ? [currentUserId] : []),\n          ...peerIds,\n          ...(contactIds || []),\n        ]),\n        query: search,\n      }),\n      undefined,\n      priorityIds,\n      currentUserId,\n    );\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      currentUserId={currentUserId}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePreviousDeprecated(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError,\n} from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    sendMessage,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiContact) => {\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map((notification) => (\n        <Notification notification={notification} />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    window.open(ensureProtocol(url), '_blank', 'noopener');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlAlert2', renderingUrl), ['links'])}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else {\n      window.open(ensureProtocol(currentAuth?.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { OldLangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <Icon name=\"previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <Icon name=\"next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: OldLangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.getTime() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text NewContactModal__help-text__negative\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import type { RefObject } from 'react';\nimport {\n  useEffect, useSignal, useState,\n} from '../lib/teact/teact';\n\nimport type { Point, Size } from '../types';\n\nimport { RESIZE_HANDLE_SELECTOR } from '../config';\nimport buildStyle from '../util/buildStyle';\nimport { captureEvents } from '../util/captureEvents';\nimport useFlag from './useFlag';\nimport useLastCallback from './useLastCallback';\n\nexport enum ResizeHandleType {\n  Top,\n  Bottom,\n  Left,\n  Right,\n  TopLeft,\n  TopRight,\n  BottomLeft,\n  BottomRight,\n}\n\ntype ResizeHandleSelectorType = 'top' | 'bottom' | 'left'\n| 'right' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\nconst resizeHandleSelectorsMap: Record<ResizeHandleSelectorType, ResizeHandleType> = {\n  top: ResizeHandleType.Top,\n  bottom: ResizeHandleType.Bottom,\n  left: ResizeHandleType.Left,\n  right: ResizeHandleType.Right,\n  topLeft: ResizeHandleType.TopLeft,\n  topRight: ResizeHandleType.TopRight,\n  bottomLeft: ResizeHandleType.BottomLeft,\n  bottomRight: ResizeHandleType.BottomRight,\n};\n\nconst resizeHandleSelectors = Object.keys(resizeHandleSelectorsMap) as ResizeHandleSelectorType[];\n\nlet resizeTimeout: number | undefined;\nconst FULLSCREEN_POSITION = { x: 0, y: 0 };\n\nexport default function useDraggable(\n  ref: RefObject<HTMLElement>,\n  dragHandleElementRef: RefObject<HTMLElement>,\n  isDragEnabled: boolean = true,\n  originalSize: Size,\n  isFullscreen: boolean = false,\n  minimumSize: Size = { width: 0, height: 0 },\n  cachedPosition?: Point,\n) {\n  const [elementCurrentPosition, setElementCurrentPosition] = useState<Point | undefined>(cachedPosition);\n  const [elementCurrentSize, setElementCurrentSize] = useState<Size | undefined>(undefined);\n\n  const [getElementPositionOnStartTransform, setElementPositionOnStartTransform] = useSignal({ x: 0, y: 0 });\n  const [getElementSizeOnStartTransform, setElementSizeOnStartTransform] = useSignal({ width: 0, height: 0 });\n  const [getTransformStartPoint, setTransformStartPoint] = useSignal({ x: 0, y: 0 });\n\n  const elementPositionOnStartTransform = getElementPositionOnStartTransform();\n  const transformStartPoint = getTransformStartPoint();\n\n  const element = ref.current;\n  const dragHandleElement = dragHandleElementRef.current;\n\n  const [isInitiated, setIsInitiated] = useFlag(false);\n  const [wasElementShown, setWasElementShown] = useFlag(false);\n  const [isDragging, startDragging, stopDragging] = useFlag(false);\n  const [isResizing, startResizing, stopResizing] = useFlag(false);\n  const [isWindowsResizing, startWindowResizing, stopWindowResizing] = useFlag(false);\n\n  const [hitResizeHandle, setHitResizeHandle] = useState<ResizeHandleType | undefined>(undefined);\n\n  function getVisibleArea() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  const updateCurrentPosition = useLastCallback((position: Point) => {\n    if (!isFullscreen) setElementCurrentPosition({ x: position.x, y: position.y });\n  });\n\n  const getActualPosition = useLastCallback(() => {\n    return isFullscreen ? FULLSCREEN_POSITION : elementCurrentPosition;\n  });\n\n  const getCenteredPosition = useLastCallback(() => {\n    if (!elementCurrentSize) return undefined;\n    const { width, height } = elementCurrentSize;\n\n    const visibleArea = getVisibleArea();\n    const viewportWidth = visibleArea.width;\n    const viewportHeight = visibleArea.height;\n\n    const centeredX = (viewportWidth - width) / 2;\n    const centeredY = (viewportHeight - height) / 2;\n\n    return { x: centeredX, y: centeredY };\n  });\n\n  useEffect(() => {\n    if (element) setWasElementShown();\n  }, [element]);\n\n  useEffect(() => {\n    if (!isInitiated && elementCurrentSize) {\n      const centeredPosition = getCenteredPosition();\n      if (!centeredPosition) return;\n\n      updateCurrentPosition(centeredPosition);\n      setIsInitiated();\n    }\n  }, [elementCurrentSize, isInitiated, element]);\n\n  const handleStartDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (targetElement.closest('.no-drag') || !element) {\n      return;\n    }\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const { left, top } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startDragging();\n  });\n\n  function getResizeHandleFromTarget(targetElement: HTMLElement) {\n    const closest = (selector: string) => targetElement.closest(selector);\n\n    if (!closest(RESIZE_HANDLE_SELECTOR)) return undefined;\n    for (const selector of resizeHandleSelectors) {\n      if (closest(`.${selector}`)) { return resizeHandleSelectorsMap[selector]; }\n    }\n    return undefined;\n  }\n\n  const handleStartResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (!element || !targetElement) {\n      return;\n    }\n    const resizeHandle = getResizeHandleFromTarget(targetElement);\n\n    if (resizeHandle === undefined) return;\n    setHitResizeHandle(resizeHandle);\n\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const {\n      left, right, top, bottom,\n    } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setElementSizeOnStartTransform({ width: right - left, height: bottom - top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startResizing();\n  });\n\n  const handleDragRelease = useLastCallback(() => {\n    stopDragging();\n  });\n\n  const handleResizeRelease = useLastCallback(() => {\n    stopResizing();\n  });\n\n  useEffect(() => {\n    if (!isDragEnabled) {\n      stopDragging();\n    }\n  }, [isDragEnabled]);\n\n  const ensurePositionInVisibleArea = (x: number, y: number) => {\n    const visibleArea = getVisibleArea();\n\n    const visibleAreaWidth = visibleArea.width;\n    const visibleAreaHeight = visibleArea.height;\n\n    const componentWidth = elementCurrentSize!.width;\n    const componentHeight = elementCurrentSize!.height;\n\n    let newX = x;\n    let newY = y;\n\n    if (newX < 0) newX = 0;\n    if (newY < 0) newY = 0;\n    if (newX + componentWidth > visibleAreaWidth) newX = visibleAreaWidth - componentWidth;\n    if (newY + componentHeight > visibleAreaHeight) newY = visibleAreaHeight - componentHeight;\n\n    return { x: newX, y: newY };\n  };\n\n  const adjustPositionWithinBounds = useLastCallback(() => {\n    if (isFullscreen) return;\n    const position = !wasElementShown && !cachedPosition ? getCenteredPosition() : elementCurrentPosition;\n    if (!elementCurrentSize || !position) return;\n    const newPosition = ensurePositionInVisibleArea(position.x, position.y);\n    updateCurrentPosition(newPosition);\n  });\n\n  const ensureSizeInVisibleArea = useLastCallback((sizeForCheck: Size) => {\n    const newSize = sizeForCheck;\n\n    const visibleArea = getVisibleArea();\n\n    const originalWidth = originalSize.width;\n    const originalHeight = originalSize.height;\n    newSize.width = Math.min(visibleArea.width, Math.max(originalWidth, newSize.width));\n    newSize.height = Math.min(visibleArea.height, Math.max(originalHeight, newSize.height));\n\n    return newSize;\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    const newSize = ensureSizeInVisibleArea({ width: originalSize.width, height: originalSize.height });\n    if (newSize) setElementCurrentSize(newSize);\n  }, [originalSize, isResizing]);\n\n  const adjustSizeWithinBounds = useLastCallback(() => {\n    if (!elementCurrentSize || isResizing) return;\n    const newSize = ensureSizeInVisibleArea(elementCurrentSize);\n    if (newSize) setElementCurrentSize(newSize);\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    adjustPositionWithinBounds();\n  }, [elementCurrentSize, isResizing]);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      startWindowResizing();\n      adjustSizeWithinBounds();\n      adjustPositionWithinBounds();\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = undefined;\n      }\n      resizeTimeout = window.setTimeout(() => {\n        resizeTimeout = undefined;\n        stopWindowResizing();\n      }, 250);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = undefined;\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [adjustPositionWithinBounds]);\n\n  const handleDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isDragging || !element) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const offsetX = pageX - transformStartPoint.x;\n    const offsetY = pageY - transformStartPoint.y;\n\n    const newX = elementPositionOnStartTransform.x + offsetX;\n    const newY = elementPositionOnStartTransform.y + offsetY;\n\n    if (elementCurrentSize) setElementCurrentPosition(ensurePositionInVisibleArea(newX, newY));\n  });\n\n  const handleResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isResizing || !element || hitResizeHandle === undefined) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n    const sizeOnStartTransform = getElementSizeOnStartTransform();\n\n    const pageVisibleX = Math.min(Math.max(0, pageX), getVisibleArea().width);\n    const pageVisibleY = Math.min(Math.max(0, pageY), getVisibleArea().height);\n\n    const offsetX = pageVisibleX - transformStartPoint.x;\n    const offsetY = pageVisibleY - transformStartPoint.y;\n\n    const maxX = elementPositionOnStartTransform.x + sizeOnStartTransform.width - minimumSize.width;\n    const maxY = elementPositionOnStartTransform.y + sizeOnStartTransform.height - minimumSize.height;\n\n    const originalBounds = {\n      x: elementPositionOnStartTransform.x,\n      y: elementPositionOnStartTransform.y,\n      width: sizeOnStartTransform.width,\n      height: sizeOnStartTransform.height,\n    };\n\n    const newBounds = { ...originalBounds };\n\n    if (hitResizeHandle === ResizeHandleType.Left\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width - offsetX, minimumSize.width);\n      newBounds.x = Math.min(newBounds.x + offsetX, maxX);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Right\n    || hitResizeHandle === ResizeHandleType.TopRight\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width + offsetX, minimumSize.width);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Top\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.TopRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height - offsetY, minimumSize.height);\n      newBounds.y = Math.min(newBounds.y + offsetY, maxY);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Bottom\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height + offsetY, minimumSize.height);\n    }\n\n    setElementCurrentSize({ width: newBounds.width, height: newBounds.height });\n    setElementCurrentPosition({ x: newBounds.x, y: newBounds.y });\n  });\n\n  useEffect(() => {\n    let cleanup: NoneToVoidFunction | undefined;\n    if (dragHandleElement && isDragEnabled) {\n      cleanup = captureEvents(dragHandleElement, {\n        onCapture: handleStartDrag,\n        onDrag: handleDrag,\n        onRelease: handleDragRelease,\n        onClick: handleDragRelease,\n        onDoubleClick: handleDragRelease,\n      });\n    }\n    return cleanup;\n  }, [isDragEnabled, dragHandleElement]);\n\n  useEffect(() => {\n    const cleanups: NoneToVoidFunction[] = [];\n    if (element && isDragEnabled) {\n      for (const selector of resizeHandleSelectors) {\n        const resizeHandler = element.querySelector(`.resizeHandle.${selector}`) as HTMLElement;\n\n        if (resizeHandler) {\n          const cleanup = captureEvents(resizeHandler, {\n            onCapture: handleStartResize,\n            onDrag: handleResize,\n            onRelease: handleResizeRelease,\n            onClick: handleResizeRelease,\n            onDoubleClick: handleResizeRelease,\n          });\n\n          if (cleanup) {\n            cleanups.push(cleanup);\n          }\n        }\n      }\n    }\n\n    return () => {\n      cleanups.forEach((cleanup) => cleanup());\n    };\n  }, [isDragEnabled, element]);\n\n  const cursorStyle = isDragging ? 'cursor: grabbing !important; ' : '';\n\n  const actualPosition = getActualPosition();\n\n  if (!isInitiated || !elementCurrentSize || !actualPosition) {\n    return {\n      isDragging: false,\n      style: cursorStyle,\n    };\n  }\n\n  const style = buildStyle(\n    `left: ${actualPosition.x}px;`,\n    `top: ${actualPosition.y}px;`,\n    !isFullscreen && `max-width: ${elementCurrentSize.width}px;`,\n    !isFullscreen && `max-height: ${elementCurrentSize.height}px;`,\n    'position: fixed;',\n    (isDragging || isResizing || isWindowsResizing) && 'transition: none !important;',\n    cursorStyle,\n  );\n\n  return {\n    position: elementCurrentPosition,\n    size: elementCurrentSize,\n    isDragging,\n    isResizing,\n    style,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kUZmBlnN\",\"window-state-button\":\"Rax9j_TK\",\"windowStateButton\":\"Rax9j_TK\",\"button\":\"SMRJmUuE\",\"avatars\":\"GP17QhNN\",\"state-icon\":\"sdbTXCxq\",\"stateIcon\":\"sdbTXCxq\",\"icon\":\"P0P4gW6a\",\"title\":\"TZFjRaG4\"};","import React, {\n  memo, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { WebApp } from '../../../types/webapp';\n\nimport { selectActiveWebApp, selectTabState, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MinimizedWebAppModal.module.scss';\n\ntype StateProps = {\n  activeTabBot?: ApiUser;\n  isMinimizedState?: boolean;\n  openedWebApps?: Record<string, WebApp>;\n};\n\nconst MinimizedWebAppModal = ({\n  activeTabBot, isMinimizedState, openedWebApps,\n}: StateProps) => {\n  const {\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const openedWebAppsValues = useMemo(() => {\n    return openedWebApps && Object.values(openedWebApps);\n  }, [openedWebApps]);\n\n  const openedTabsCount = openedWebAppsValues?.length;\n\n  const peers = useMemo(() => {\n    if (!openedTabsCount) return [];\n\n    const global = getGlobal();\n    const activeTabBotId = activeTabBot?.id;\n    const openedApps = unique([activeTabBotId, ...openedWebAppsValues.map((app) => app.botId)]);\n    const bots = openedApps.map((id) => id && selectUser(global, id)).filter(Boolean).slice(0, 3);\n    return bots;\n  }, [openedTabsCount, activeTabBot, openedWebAppsValues]);\n\n  const handleCloseClick = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleExpandClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  });\n\n  if (!isMinimizedState) return undefined;\n\n  function renderTitle() {\n    const activeTabName = peers.length > 0 && peers[0]?.firstName;\n    const title = openedTabsCount && activeTabName && openedTabsCount > 1\n      ? `${lang('MiniAppsMoreTabs',\n        {\n          botName: activeTabName,\n          count: openedTabsCount - 1,\n        },\n        {\n          pluralValue: openedTabsCount - 1,\n        })}`\n      : activeTabName;\n\n    return (\n      <div className={styles.title}>\n        {title}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n      )}\n    >\n      <Button\n        className={styles.button}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        ariaLabel={oldLang('Close')}\n        onClick={handleCloseClick}\n      >\n        <Icon className={styles.icon} name=\"close\" />\n      </Button>\n      <AvatarList className={styles.avatars} size=\"mini\" peers={peers} />\n      {renderTitle()}\n      <Button\n        className={buildClassName(\n          styles.windowStateButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleExpandClick}\n      >\n        <Icon className={styles.stateIcon} name=\"expand-modal\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const webApps = tabState.webApps;\n\n    const { botId } = selectActiveWebApp(global) || {};\n    const { modalState, openedWebApps } = webApps || {};\n    const isMinimizedState = modalState === 'minimized';\n    const activeTabBot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      activeTabBot,\n      isMinimizedState,\n      openedWebApps,\n    };\n  },\n)(MinimizedWebAppModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RFg0Ey2I\",\"user-count-badge\":\"UZtJ6ZXb\",\"userCountBadge\":\"UZtJ6ZXb\",\"user-badge-icon\":\"pTiZFhsG\",\"userBadgeIcon\":\"pTiZFhsG\",\"name\":\"TzA5nqCC\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport PeerBadge from '../../common/PeerBadge';\n\nimport styles from './WebAppGridItem.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  chatId: string;\n  isPopularApp?: boolean;\n};\n\nexport type StateProps = {\n  user?: ApiUser;\n};\n\nfunction WebAppGridItem({ user, isPopularApp }: OwnProps & StateProps) {\n  const {\n    requestMainWebView,\n  } = getActions();\n\n  const handleClick = useLastCallback(() => {\n    if (!user) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n    });\n  });\n\n  if (!user) return undefined;\n\n  // eslint-disable-next-line no-null/no-null\n\n  const title = user?.firstName;\n  const activeUserCount = user?.botActiveUsers;\n  const badgeText = activeUserCount && isPopularApp ? formatIntegerCompact(activeUserCount) : undefined;\n\n  return (\n    <div\n      className={styles.container}\n      onClick={handleClick}\n    >\n      <PeerBadge\n        className={buildClassName(styles.avatarContainer, isPopularApp && 'PopularAppGridItem')}\n        textClassName={styles.name}\n        badgeClassName={styles.userCountBadge}\n        badgeIconClassName={styles.userBadgeIcon}\n        peer={user}\n        text={title}\n        badgeText={badgeText}\n        badgeIcon=\"user-filled\"\n      />\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const user = selectUser(global, chatId);\n\n    return {\n      user,\n    };\n  },\n)(WebAppGridItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BJV09FsC\",\"search\":\"bdi8G7GR\",\"section-title\":\"ex3kxgWX\",\"sectionTitle\":\"ex3kxgWX\",\"section-content\":\"uIZzLhEh\",\"sectionContent\":\"uIZzLhEh\",\"showMoreLink\":\"h_Zs9ypA\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport WebAppGridItem from './WebAppGridItem';\n\nimport styles from './MoreAppsTabContent.module.scss';\n\nconst POPULAR_APPS_SLICE = 30;\n\nexport type OwnProps = {\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\nconst LESS_GRID_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MoreAppsTabContent: FC<OwnProps & StateProps> = ({\n  foundIds,\n  recentBotIds,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n  const {\n    searchPopularBotApps,\n  } = getActions();\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n\n    return filterPeersByQuery({ ids: foundIds, query: searchQuery, type: 'user' });\n  }, [foundIds, searchQuery]);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleSearchInputReset = useCallback(() => {\n    setSearchQuery('');\n  }, []);\n\n  return (\n    <InfiniteScroll\n      className={buildClassName(styles.root, 'custom-scroll')}\n      items={filteredFoundIds}\n      onLoadMore={handleLoadMore}\n      itemSelector=\".PopularAppGridItem\"\n      noFastList\n      preloadBackwards={POPULAR_APPS_SLICE}\n    >\n      <SearchInput\n        className={styles.search}\n        value={searchQuery}\n        onChange={setSearchQuery}\n        onReset={handleSearchInputReset}\n        placeholder={lang('SearchApps')}\n      />\n      {recentBotIds && !searchQuery && (\n        <div className={styles.section}>\n          <div className={styles.sectionTitle}>\n            <span>{oldLang('SearchAppsMine')}</span>\n            <span className={styles.showMoreLink} onClick={handleToggleShowMoreMine}>\n              {oldLang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n            </span>\n          </div>\n          <div className={styles.sectionContent}>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_GRID_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <WebAppGridItem\n                  chatId={id}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n      <div className={styles.section}>\n        <div className={styles.sectionTitle}>\n          {searchQuery ? lang('Apps') : lang('PopularApps')}\n        </div>\n        <div className={styles.sectionContent}>\n          {filteredFoundIds && filteredFoundIds.map((id) => {\n            return (\n              <WebAppGridItem\n                chatId={id}\n                isPopularApp={!searchQuery}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(MoreAppsTabContent));\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebApp, WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { getWebAppKey } from '../../../../global/helpers';\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\nconst FULLSCREEN_BUTTONS_AREA_HEIGHT = 3.675 * REM;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isFullscreen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  webApp?: WebApp,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n    openSuggestedStatusModal,\n    updateWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const sendFullScreenChanged = useCallback((value: boolean) => {\n    sendEvent({\n      eventType: 'fullscreen_changed',\n      eventData: {\n        is_fullscreen: value,\n      },\n    });\n  }, [sendEvent]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendSafeArea = useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n    sendEvent({\n      eventType: 'safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n      },\n    });\n\n    sendEvent({\n      eventType: 'content_safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: isFullscreen ? FULLSCREEN_BUTTONS_AREA_HEIGHT : 0,\n        bottom: 0,\n      },\n    });\n  }, [sendEvent, isFullscreen, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n    const contentWindow = ref.current?.contentWindow;\n    const sourceWindow = event.source as Window;\n\n    if (contentWindow !== sourceWindow) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        if (webApp) {\n          const key = getWebAppKey(webApp);\n          closeWebApp({ key, skipClosingConfirmation: true });\n        }\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_content_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_set_emoji_status') {\n        const { custom_emoji_id, duration } = eventData;\n\n        if (!custom_emoji_id || typeof custom_emoji_id !== 'string') {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'SUGGESTED_EMOJI_INVALID',\n            },\n          });\n          return;\n        }\n\n        if (duration) {\n          try {\n            BigInt(duration);\n          } catch (e) {\n            sendEvent({\n              eventType: 'emoji_status_failed',\n              eventData: {\n                error: 'DURATION_INVALID',\n              },\n            });\n            return;\n          }\n        }\n\n        if (!webApp) {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'UNKNOWN_ERROR',\n            },\n          });\n          return;\n        }\n\n        openSuggestedStatusModal({\n          webAppKey: getWebAppKey(webApp),\n          customEmojiId: custom_emoji_id,\n          duration: Number(duration),\n          botId: webApp.botId,\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [\n    isSimpleView, sendEvent, onEvent, sendCustomStyle, webApp,\n    sendTheme, sendViewport, sendSafeArea, onLoad, windowSize.isResizing,\n    ref,\n  ]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, sendSafeArea, windowSize]);\n\n  useEffect(() => {\n    if (!webApp?.plannedEvents?.length) return;\n    const events = webApp.plannedEvents;\n    events.forEach((event) => {\n      sendEvent(event);\n    });\n\n    updateWebApp({\n      key: getWebAppKey(webApp),\n      update: {\n        plannedEvents: [],\n      },\n    });\n  }, [sendEvent, webApp]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage, ref]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      sendSafeArea();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, isFullscreen, sendViewport, sendSafeArea, ref]);\n\n  return {\n    sendEvent, sendFullScreenChanged, reloadFrame, sendViewport, sendSafeArea, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LeeJZdwH\",\"multi-tab\":\"ESsGT5OD\",\"multiTab\":\"ESsGT5OD\",\"loadingPlaceholder\":\"jEAibDyh\",\"placeholderPath\":\"Gx1BIECZ\",\"fadeOpacityBreath\":\"N5Blieah\",\"defaultPlaceholderGrid\":\"Ig_t1R7i\",\"placeholderSquare\":\"ablUg8HU\",\"hide\":\"Wrl63uWL\",\"frame\":\"OmY14FFl\",\"with-button\":\"liDRl1xT\",\"withButton\":\"liDRl1xT\",\"hidden\":\"vOFiAq3l\",\"secondary-button\":\"ypxiUCFQ\",\"secondaryButton\":\"ypxiUCFQ\",\"main-button\":\"U_ggDKn1\",\"mainButton\":\"U_ggDKn1\",\"visible\":\"KwI4XdkC\",\"buttons-container\":\"mR_hsBdT\",\"buttonsContainer\":\"mR_hsBdT\",\"one-row\":\"YfQO314y\",\"oneRow\":\"YfQO314y\",\"two-rows\":\"gUldkEoy\",\"twoRows\":\"gUldkEoy\",\"left-to-right\":\"ntESqwQ_\",\"leftToRight\":\"ntESqwQ_\",\"right-to-left\":\"q6IUFEL0\",\"rightToLeft\":\"q6IUFEL0\",\"top-to-bottom\":\"gb4iHJ9H\",\"topToBottom\":\"gb4iHJ9H\",\"bottom-to-top\":\"R_bh3GF8\",\"bottomToTop\":\"R_bh3GF8\",\"hide-horizontal\":\"oYaRA7u4\",\"hideHorizontal\":\"oYaRA7u4\",\"secondary-button-spinner\":\"NYV0yA2J\",\"secondaryButtonSpinner\":\"NYV0yA2J\",\"main-button-spinner\":\"oq6HKJur\",\"mainButtonSpinner\":\"oq6HKJur\",\"web-app-popup\":\"YEOURXza\",\"webAppPopup\":\"YEOURXza\",\"without-title\":\"gvljUzY9\",\"withoutTitle\":\"gvljUzY9\",\"closeIcon\":\"BvNtfigU\",\"state-back\":\"rC2wkMIk\",\"stateBack\":\"rC2wkMIk\",\"backIconContainer\":\"JXsuZ01s\",\"moreIcon\":\"T58ozRyW\",\"headerPanel\":\"eYrhewMy\",\"icon\":\"a0AI_he5\",\"headerSplitButton\":\"Tl4_05AQ\",\"headerButton\":\"MvCwTbk_\",\"left\":\"emOpAMBm\",\"right\":\"z4C5VD5o\",\"buttonCaptionContainer\":\"dpZR3YT7\",\"backButtonCaption\":\"dWDprnWa\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachBot, ApiBotAppSettings, ApiUser,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { BotAppPermissions, ThemeKey } from '../../../types';\nimport type {\n  PopupOptions,\n  WebApp,\n  WebAppInboundEvent,\n  WebAppModalStateType,\n  WebAppOutboundEvent,\n} from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectBotAppPermissions,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n  selectWebApp,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport download from '../../../util/download';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { getGeolocationStatus, IS_GEOLOCATION_SUPPORTED } from '../../../util/windowEnvironment';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport { getIsWebAppsFullscreenSupported } from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useFullscreen, { checkIfFullscreen } from '../../../hooks/window/useFullscreen';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\nimport Transition from '../../ui/Transition';\n\nimport styles from './WebAppModalTabContent.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n  position?: 'left' | 'right' | 'top' | 'bottom';\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n  webApp?: WebApp;\n  registerSendEventCallback: (callback: (event: WebAppOutboundEvent) => void) => void;\n  registerReloadFrameCallback: (callback: (url: string) => void) => void;\n  onContextMenuButtonClick: (e: React.MouseEvent) => void;\n  isTransforming?: boolean;\n  isMultiTabSupported? : boolean;\n  modalHeight: number;\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n  botAppSettings?: ApiBotAppSettings;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n  isPremium?: boolean;\n  modalState?: WebAppModalStateType;\n  botAppPermissions?: BotAppPermissions;\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst ANIMATION_WAIT = 400;\nconst COLLAPSING_WAIT = 350;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst APP_NAME_DISPLAY_DURATION = 3800;\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModalTabContent: FC<OwnProps & StateProps> = ({\n  modal,\n  webApp,\n  bot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n  registerSendEventCallback,\n  registerReloadFrameCallback,\n  isTransforming,\n  modalState,\n  isMultiTabSupported,\n  onContextMenuButtonClick,\n  botAppPermissions,\n  botAppSettings,\n  modalHeight,\n}) => {\n  const {\n    closeActiveWebApp,\n    sendWebViewData,\n    toggleAttachBot,\n    openTelegramLink,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n    updateWebApp,\n    resetPaymentStatus,\n    openChatWithInfo,\n    showNotification,\n    openEmojiStatusAccessModal,\n    openLocationAccessModal,\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [secondaryButton, setSecondaryButton] = useState<WebAppButton | undefined>();\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequestingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const [requestedFileDownload, setRequestedFileDownload] = useState<{ url: string; fileName: string } | undefined>();\n  const [bottomBarColor, setBottomBarColor] = useState<string | undefined>();\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonCaptionRef = useRef<HTMLDivElement>(null);\n\n  const isFullscreen = modalState === 'fullScreen';\n  const isMinimizedState = modalState === 'minimized';\n\n  const exitFullScreenCallback = useLastCallback(() => {\n    setTimeout(() => { changeWebAppModalState({ state: 'maximized' }); }, COLLAPSING_WAIT);\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const fullscreenElementRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    fullscreenElementRef.current = document.querySelector('#portals') as HTMLElement;\n  }, []);\n\n  const [, setFullscreen, exitFullscreen] = useFullscreen(fullscreenElementRef, exitFullScreenCallback);\n\n  const activeWebApp = modal?.activeWebAppKey ? modal.openedWebApps[modal.activeWebAppKey] : undefined;\n  const activeWebAppName = activeWebApp?.appName;\n  const {\n    url, buttonText, isBackButtonVisible,\n  } = webApp || {};\n\n  const {\n    placeholderPath,\n  } = botAppSettings || {};\n\n  const isCloseModalOpen = Boolean(webApp?.isCloseModalOpen);\n  const isRemoveModalOpen = Boolean(webApp?.isRemoveModalOpen);\n\n  const webAppKey = webApp && getWebAppKey(webApp);\n  const activeWebAppKey = activeWebApp && getWebAppKey(activeWebApp);\n\n  const isActive = (activeWebApp && webApp) && activeWebAppKey === webAppKey;\n\n  const isAvailable = IS_GEOLOCATION_SUPPORTED;\n  const isAccessRequested = botAppPermissions?.geolocation !== undefined;\n  const isAccessGranted = Boolean(botAppPermissions?.geolocation);\n\n  const updateCurrentWebApp = useLastCallback((updatedPartialWebApp: Partial<WebApp>) => {\n    if (!webAppKey) return;\n    updateWebApp({ key: webAppKey, update: updatedPartialWebApp });\n  });\n\n  const themeParams = useMemo(() => {\n    return extractCurrentThemeParams();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [theme]);\n\n  useEffect(() => {\n    setBottomBarColor(themeParams.secondary_bg_color);\n  }, [themeParams]);\n\n  const themeBackgroundColor = themeParams.bg_color;\n  const [backgroundColorFromEvent, setBackgroundColorFromEvent] = useState<string | undefined>();\n  const backgroundColorFromSettings = theme === 'light' ? botAppSettings?.backgroundColor\n    : botAppSettings?.backgroundDarkColor;\n\n  useEffect(() => {\n    const color = backgroundColorFromEvent || backgroundColorFromSettings || themeBackgroundColor;\n\n    updateCurrentWebApp({ backgroundColor: color });\n  }, [themeBackgroundColor, backgroundColorFromEvent, backgroundColorFromSettings]);\n\n  const themeHeaderColor = themeParams.bg_color;\n  const [headerColorFromEvent, setHeaderColorFromEvent] = useState<string | undefined>();\n  const headerColorFromSettings = theme === 'light' ? botAppSettings?.headerColor\n    : botAppSettings?.headerDarkColor;\n\n  useEffect(() => {\n    const color = headerColorFromEvent || headerColorFromSettings || themeHeaderColor;\n\n    updateCurrentWebApp({ headerColor: color });\n  }, [themeHeaderColor, headerColorFromEvent, headerColorFromSettings]);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isOpen = modal?.isModalOpen || false;\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendFullScreenChanged, sendViewport, sendSafeArea, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isFullscreen, isSimple, handleEvent, webApp, markLoaded);\n\n  useEffect(() => {\n    if (isActive) registerSendEventCallback(sendEvent);\n  }, [sendEvent, registerSendEventCallback, isActive]);\n\n  useEffect(() => {\n    if (isActive) registerReloadFrameCallback(reloadFrame);\n  }, [reloadFrame, registerReloadFrameCallback, isActive]);\n\n  const isMainButtonVisible = isLoaded && mainButton?.isVisible && mainButton.text.trim().length > 0;\n  const isSecondaryButtonVisible = isLoaded && secondaryButton?.isVisible && secondaryButton.text.trim().length > 0;\n\n  const handleHideCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ isCloseModalOpen: false });\n  });\n  const handleConfirmCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ shouldConfirmClosing: false, isCloseModalOpen: false });\n    setTimeout(() => {\n      closeActiveWebApp();\n    }, ANIMATION_WAIT);\n  });\n\n  const handleHideRemoveModal = useLastCallback(() => {\n    updateCurrentWebApp({ isRemoveModalOpen: false });\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSecondaryButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'secondary_button_pressed',\n    });\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  const sendThemeCallback = useLastCallback(() => {\n    sendTheme();\n  });\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendThemeCallback();\n    }, ANIMATION_WAIT);\n  }, [theme]);\n\n  const setFullscreenCallback = useLastCallback(() => {\n    if (!checkIfFullscreen() && isActive) {\n      setFullscreen?.();\n    }\n  });\n\n  const exitIfFullscreenCallback = useLastCallback(() => {\n    if (checkIfFullscreen() && isActive) {\n      exitFullscreen?.();\n    }\n  });\n\n  const sendFullScreenChangedCallback = useLastCallback(\n    (value: boolean) => { if (isActive) sendFullScreenChanged(value); },\n  );\n\n  useEffect(() => {\n    if (isFullscreen) {\n      setFullscreenCallback();\n      sendFullScreenChangedCallback(true);\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChangedCallback(false);\n    }\n  }, [isFullscreen]);\n\n  const visibilityChangedCallBack = useLastCallback((visibility: boolean) => {\n    sendEvent({\n      eventType: 'visibility_changed',\n      eventData: {\n        is_visible: visibility,\n      },\n    });\n  });\n\n  useEffect(() => {\n    if (isLoaded) {\n      visibilityChangedCallBack(Boolean(isActive));\n    }\n  }, [isActive, isLoaded]);\n\n  useEffectWithPrevDeps(([prevModalState]) => {\n    if (modalState === 'minimized') {\n      visibilityChangedCallBack(false);\n    }\n    if (modalState && prevModalState === 'minimized') {\n      visibilityChangedCallBack(true);\n    }\n  }, [modalState]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n      resetPaymentStatus();\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, webApp?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeActiveWebApp();\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectFileDownload = useLastCallback((shouldCloseActive?: boolean) => {\n    if (shouldCloseActive) {\n      setRequestedFileDownload(undefined);\n      handlePopupClosed();\n    }\n\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    if (!bot) return;\n    const result = await callApi('allowBotSendMessages', { bot });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    if (!bot) return;\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleCheckDownloadFile(fileUrl: string, fileName: string) {\n    const canDownload = await callApi('checkBotDownloadFileParams', {\n      bot: bot!,\n      url: fileUrl,\n      fileName,\n    });\n\n    if (!canDownload) {\n      sendEvent({\n        eventType: 'file_download_requested',\n        eventData: {\n          status: 'cancelled',\n        },\n      });\n      return;\n    }\n\n    setRequestedFileDownload({ url: fileUrl, fileName });\n    handlePopupOpened();\n  }\n\n  const handleDownloadFile = useLastCallback(() => {\n    if (!requestedFileDownload) return;\n    setRequestedFileDownload(undefined);\n    handlePopupClosed();\n\n    download(requestedFileDownload.url, requestedFileDownload.fileName);\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'downloading',\n      },\n    });\n  });\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  useEffect(() => {\n    if (!isOpen) {\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setSecondaryButton(undefined);\n      updateCurrentWebApp({\n        isSettingsButtonVisible: false,\n        shouldConfirmClosing: false,\n        isBackButtonVisible: false,\n        isCloseModalOpen: false,\n        isRemoveModalOpen: false,\n      });\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChatWithInfo({ id: bot!.id });\n  });\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n\n    if (eventType === 'web_app_request_fullscreen') {\n      if (getIsWebAppsFullscreenSupported()) {\n        changeWebAppModalState({ state: 'fullScreen' });\n      } else {\n        sendEvent({\n          eventType: 'fullscreen_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n    }\n\n    if (eventType === 'web_app_exit_fullscreen') {\n      exitIfFullscreenCallback();\n    }\n\n    if (eventType === 'web_app_open_tg_link') {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl, shouldIgnoreCache: eventData.force_request });\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      updateCurrentWebApp({ isBackButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      updateCurrentWebApp({ isSettingsButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      setBackgroundColorFromEvent(validateHexColor(eventData.color) ? eventData.color : undefined);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      const key = eventData.color_key;\n      setHeaderColorFromEvent(eventData.color || (key ? themeParams[key] : undefined));\n    }\n\n    if (eventType === 'web_app_set_bottom_bar_color') {\n      setBottomBarColor(eventData.color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeActiveWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_secondary_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setSecondaryButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n        position: eventData.position,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      updateCurrentWebApp({ shouldConfirmClosing: true });\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n        || eventData.buttons.length > 3 || isRequestingPhone || isRequestingWriteAccess\n        || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequestingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n\n    if (eventType === 'web_app_request_file_download') {\n      if (requestedFileDownload || unlockPopupsAt > Date.now()) {\n        handleRejectFileDownload();\n        return;\n      }\n      handleCheckDownloadFile(eventData.url, eventData.file_name);\n    }\n\n    if (eventType === 'web_app_request_emoji_status_access') {\n      if (!bot) return;\n      openEmojiStatusAccessModal({ bot, webAppKey });\n    }\n\n    if (eventType === 'web_app_check_location') {\n      const handleGeolocationCheck = () => {\n        sendEvent({\n          eventType: 'location_checked',\n          eventData: {\n            available: isAvailable,\n            access_requested: isAccessRequested,\n            access_granted: isAccessGranted,\n          },\n        });\n      };\n\n      handleGeolocationCheck();\n    }\n\n    if (eventType === 'web_app_request_location') {\n      const handleRequestLocation = async () => {\n        const geolocationData = await getGeolocationStatus();\n        const { accessRequested, accessGranted, geolocation } = geolocationData;\n\n        if (!accessGranted || !accessRequested) {\n          sendEvent({\n            eventType: 'location_requested',\n            eventData: {\n              available: false,\n            },\n          });\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n          return;\n        }\n\n        if (isAvailable) {\n          if (isAccessRequested) {\n            sendEvent({\n              eventType: 'location_requested',\n              eventData: {\n                available: botAppPermissions?.geolocation!,\n                latitude: geolocation?.latitude,\n                longitude: geolocation?.longitude,\n                altitude: geolocation?.altitude,\n                course: geolocation?.heading,\n                speed: geolocation?.speed,\n                horizontal_accuracy: geolocation?.accuracy,\n                vertical_accuracy: geolocation?.accuracy,\n              },\n            });\n          } else {\n            openLocationAccessModal({ bot, webAppKey });\n          }\n        } else {\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n        }\n      };\n\n      handleRequestLocation();\n    }\n\n    if (eventType === 'web_app_open_location_settings') {\n      handleOpenChat();\n    }\n  }\n\n  const mainButtonCurrentColor = useCurrentOrPrev(mainButton?.color, true);\n  const mainButtonCurrentTextColor = useCurrentOrPrev(mainButton?.textColor, true);\n  const mainButtonCurrentIsActive = useCurrentOrPrev(mainButton && Boolean(mainButton.isActive), true);\n  const mainButtonCurrentText = useCurrentOrPrev(mainButton?.text, true);\n\n  const secondaryButtonCurrentPosition = useCurrentOrPrev(secondaryButton?.position, true);\n  const secondaryButtonCurrentColor = useCurrentOrPrev(secondaryButton?.color, true);\n  const secondaryButtonCurrentTextColor = useCurrentOrPrev(secondaryButton?.textColor, true);\n  const secondaryButtonCurrentIsActive = useCurrentOrPrev(secondaryButton && Boolean(secondaryButton.isActive), true);\n  const secondaryButtonCurrentText = useCurrentOrPrev(secondaryButton?.text, true);\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideMainButton, setShouldHideMainButton] = useState(true);\n  const [shouldHideSecondaryButton, setShouldHideSecondaryButton] = useState(true);\n  const [shouldShowMainButton, setShouldShowMainButton] = useState(false);\n  const [shouldShowSecondaryButton, setShouldShowSecondaryButton] = useState(false);\n\n  const [shouldShowAppNameInFullscreen, setShouldShowAppNameInFullscreen] = useState(false);\n\n  const [backButtonTextWidth, setBackButtonTextWidth] = useState(0);\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n      sendSafeArea();\n    }, isTransforming ? 0 : ANIMATION_WAIT);\n  }, [shouldShowSecondaryButton, shouldHideSecondaryButton,\n    shouldShowMainButton, shouldShowMainButton,\n    secondaryButton?.position, sendViewport, isTransforming, modalHeight,\n    sendSafeArea]);\n\n  const isVerticalLayout = secondaryButtonCurrentPosition === 'top' || secondaryButtonCurrentPosition === 'bottom';\n  const isHorizontalLayout = !isVerticalLayout;\n\n  const rowsCount = (isVerticalLayout && shouldShowMainButton && shouldShowSecondaryButton) ? 2\n    : shouldShowMainButton || shouldShowSecondaryButton ? 1 : 0;\n\n  const hideDirection = (isHorizontalLayout\n    && (!shouldHideMainButton && !shouldHideSecondaryButton)) ? 'horizontal' : 'vertical';\n\n  const mainButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const mainButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const appNameDisplayTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (isFullscreen && isOpen && Boolean(activeWebAppName)) {\n      setShouldShowAppNameInFullscreen(true);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n\n      appNameDisplayTimeout.current = setTimeout(() => {\n        setShouldShowAppNameInFullscreen(false);\n        appNameDisplayTimeout.current = undefined;\n      }, APP_NAME_DISPLAY_DURATION);\n    } else {\n      setShouldShowAppNameInFullscreen(false);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n        appNameDisplayTimeout.current = undefined;\n      }\n    }\n\n    return () => {\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n    };\n  }, [isFullscreen, isOpen, activeWebAppName]);\n\n  useEffect(() => {\n    if (mainButtonChangeTimeout.current) clearTimeout(mainButtonChangeTimeout.current);\n    if (mainButtonFastTimeout.current) clearTimeout(mainButtonFastTimeout.current);\n\n    if (isMainButtonVisible) {\n      mainButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowMainButton(true);\n      }, 35);\n      setShouldHideMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isMainButtonVisible) {\n      setShouldShowMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideMainButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isMainButtonVisible]);\n\n  useEffect(() => {\n    if (secondaryButtonChangeTimeout.current) clearTimeout(secondaryButtonChangeTimeout.current);\n    if (secondaryButtonFastTimeout.current) clearTimeout(secondaryButtonFastTimeout.current);\n\n    if (isSecondaryButtonVisible) {\n      secondaryButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowSecondaryButton(true);\n      }, 35);\n      setShouldHideSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isSecondaryButtonVisible) {\n      setShouldShowSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideSecondaryButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isSecondaryButtonVisible]);\n\n  useEffect(() => {\n    if (!shouldShowSecondaryButton && !shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowSecondaryButton, shouldShowMainButton]);\n\n  const frameStyle = isTransforming ? 'pointer-events: none;' : '';\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChanged(false);\n      changeWebAppModalState({ state: 'maximized' });\n      closeWebAppModal();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    exitIfFullscreenCallback();\n  });\n\n  const handleShowContextMenu = useLastCallback((e: React.MouseEvent) => {\n    onContextMenuButtonClick(e);\n  });\n\n  const backIconClass = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n  const backButtonCaption = shouldShowAppNameInFullscreen ? activeWebAppName\n    : oldLang(isBackButtonVisible ? 'Back' : 'Close');\n\n  const hasHeaderElement = headerButtonCaptionRef?.current;\n\n  useEffect(() => {\n    const width = headerButtonCaptionRef?.current?.clientWidth || 0;\n    setBackButtonTextWidth(width);\n  }, [backButtonCaption, hasHeaderElement]);\n\n  function getBackButtonActiveKey() {\n    if (shouldShowAppNameInFullscreen) return 0;\n    return isBackButtonVisible ? 1 : 2;\n  }\n\n  function renderFullscreenBackButtonCaption() {\n    return (\n      <span\n        className={styles.buttonCaptionContainer}\n        style={\n          `width: ${backButtonTextWidth}px;`\n        }\n      >\n        <Transition\n          activeKey={getBackButtonActiveKey()}\n          name=\"slideFade\"\n        >\n          <div\n            ref={headerButtonCaptionRef}\n            className={styles.backButtonCaption}\n          >\n            {backButtonCaption}\n          </div>\n        </Transition>\n      </span>\n    );\n  }\n\n  function renderFullscreenHeaderPanel() {\n    return (\n      <div className={styles.headerPanel}>\n        <div ref={headerButtonRef} className={styles.headerButton} onClick={handleBackClick}>\n          <div className={styles.backIconContainer}>\n            <div className={backIconClass} />\n          </div>\n          {renderFullscreenBackButtonCaption()}\n        </div>\n        <div className={styles.headerSplitButton}>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.left,\n            )}\n          >\n            <Icon\n              name=\"down\"\n              className={buildClassName(\n                styles.icon,\n                styles.collapseIcon,\n              )}\n              onClick={handleCollapseClick}\n            />\n          </div>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.right,\n            )}\n          >\n            <Icon\n              name=\"more\"\n              className={buildClassName(\n                styles.icon,\n                styles.moreIcon,\n              )}\n              onClick={handleShowContextMenu}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderDefaultPlaceholder() {\n    const className = buildClassName(styles.loadingPlaceholder, styles.defaultPlaceholderGrid, isLoaded && styles.hide);\n    return (\n      <div className={className}>\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n      </div>\n    );\n  }\n\n  function renderPlaceholder() {\n    if (!placeholderPath) {\n      return renderDefaultPlaceholder();\n    }\n    return (\n      <svg\n        className={buildClassName(styles.loadingPlaceholder, isLoaded && styles.hide)}\n        viewBox=\"0 0 512 512\"\n      >\n        <path className={styles.placeholderPath} d={placeholderPath} />\n      </svg>\n    );\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(\n        styles.root,\n        !isActive && styles.hidden,\n        isMultiTabSupported && styles.multiTab,\n      )}\n    >\n      {isFullscreen && getIsWebAppsFullscreenSupported() && renderFullscreenHeaderPanel()}\n      {!isMinimizedState && renderPlaceholder()}\n      <iframe\n        className={buildClassName(\n          styles.frame,\n          shouldDecreaseWebFrameSize && styles.withButton,\n          !isLoaded && styles.hide,\n        )}\n        style={frameStyle}\n        src={url}\n        title={`${bot?.firstName} Web App`}\n        sandbox={SANDBOX_ATTRIBUTES}\n        allow=\"camera; microphone; geolocation;\"\n        allowFullScreen\n        ref={frameRef}\n      />\n      {!isMinimizedState && (\n        <div\n          style={`background-color: ${bottomBarColor};`}\n          className={buildClassName(\n            styles.buttonsContainer,\n            secondaryButtonCurrentPosition === 'left' && styles.leftToRight,\n            secondaryButtonCurrentPosition === 'right' && styles.rightToLeft,\n            secondaryButtonCurrentPosition === 'top' && styles.topToBottom,\n            secondaryButtonCurrentPosition === 'bottom' && styles.bottomToTop,\n            hideDirection === 'horizontal' && styles.hideHorizontal,\n            rowsCount === 1 && styles.oneRow,\n            rowsCount === 2 && styles.twoRows,\n          )}\n        >\n          <Button\n            className={buildClassName(\n              styles.secondaryButton,\n              shouldShowSecondaryButton && !shouldHideSecondaryButton && styles.visible,\n              shouldHideSecondaryButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${secondaryButtonCurrentColor}; color: ${secondaryButtonCurrentTextColor}`}\n            disabled={!secondaryButtonCurrentIsActive && !secondaryButton?.isProgressVisible}\n            nonInteractive={secondaryButton?.isProgressVisible}\n            onClick={handleSecondaryButtonClick}\n            size=\"smaller\"\n          >\n            {!secondaryButton?.isProgressVisible && secondaryButtonCurrentText}\n            {secondaryButton?.isProgressVisible\n              && <Spinner className={styles.mainButtonSpinner} color=\"blue\" />}\n          </Button>\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && !shouldHideMainButton && styles.visible,\n              shouldHideMainButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive && !mainButton?.isProgressVisible}\n            nonInteractive={mainButton?.isProgressVisible}\n            onClick={handleMainButtonClick}\n            size=\"smaller\"\n          >\n            {!mainButton?.isProgressVisible && mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </div>\n      ) }\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || oldLang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={oldLang('ShareYouPhoneNumberTitle')}\n        text={oldLang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={oldLang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequestingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={oldLang('lng_bot_allow_write_title')}\n        text={oldLang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={oldLang('lng_bot_allow_write_confirm')}\n      />\n      <ConfirmDialog\n        isOpen={Boolean(requestedFileDownload)}\n        title={oldLang('BotDownloadFileTitle')}\n        textParts={lang('BotDownloadFileDescription', {\n          bot: bot?.firstName,\n          filename: requestedFileDownload?.fileName,\n        }, {\n          withNodes: true,\n          withMarkdown: true,\n        })}\n        confirmLabel={oldLang('BotDownloadFileButton')}\n        onClose={handleRejectFileDownload}\n        confirmHandler={handleDownloadFile}\n      />\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={handleHideCloseModal}\n        title={oldLang('lng_bot_close_warning_title')}\n        text={oldLang('lng_bot_close_warning')}\n        confirmHandler={handleConfirmCloseModal}\n        confirmIsDestructive\n        confirmLabel={oldLang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={handleHideRemoveModal}\n        title={oldLang('BotRemoveFromMenuTitle')}\n        textParts={renderText(oldLang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n    const modalState = modal?.modalState;\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const userFullInfo = activeBotId ? selectUserFullInfo(global, activeBotId) : undefined;\n    const botAppSettings = userFullInfo?.botInfo?.appSettings;\n    const currentUser = global.currentUserId ? selectUser(global, global.currentUserId) : undefined;\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status: regularPaymentStatus } = selectTabState(global).payment;\n    const { status: starsPaymentStatus, inputInvoice: starsInputInvoice } = selectTabState(global).starsPayment;\n    const botAppPermissions = bot ? selectBotAppPermissions(global, bot.id) : undefined;\n\n    const paymentStatus = starsPaymentStatus || regularPaymentStatus;\n\n    return {\n      attachBot,\n      bot,\n      currentUser,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || Boolean(starsInputInvoice),\n      paymentStatus,\n      modalState,\n      botAppPermissions,\n      botAppSettings,\n    };\n  },\n)(WebAppModalTabContent));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"multi-tab\":\"gBVR7Hec\",\"multiTab\":\"gBVR7Hec\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"minimized\":\"dJ1Ld_PX\",\"fullScreen\":\"ciSTWz16\",\"tabs\":\"X18WbDa5\",\"tool-bar\":\"qK4q0Sat\",\"toolBar\":\"qK4q0Sat\",\"tab-button-wrapper\":\"oHX2d8Or\",\"tabButtonWrapper\":\"oHX2d8Or\",\"tab-button\":\"O4NxErFX\",\"tabButton\":\"O4NxErFX\",\"tab-right-mask\":\"dgdyQDsZ\",\"tabRightMask\":\"dgdyQDsZ\",\"tab-close-button\":\"xGefqS93\",\"tabCloseButton\":\"xGefqS93\",\"tab-button-curve-path\":\"bOuMHiVw\",\"tabButtonCurvePath\":\"bOuMHiVw\",\"tab-button-left-curve\":\"f7EicoVH\",\"tabButtonLeftCurve\":\"f7EicoVH\",\"tab-button-right-curve\":\"s6pBIYMI\",\"tabButtonRightCurve\":\"s6pBIYMI\",\"more-apps-tab-icon\":\"Obu3ui67\",\"moreAppsTabIcon\":\"Obu3ui67\",\"avatar-container\":\"z39ojrWc\",\"avatarContainer\":\"z39ojrWc\",\"web-app-tab-more-menu\":\"txS0KiU0\",\"webAppTabMoreMenu\":\"txS0KiU0\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"tab-more-button\":\"gkji2_RB\",\"tabMoreButton\":\"gkji2_RB\",\"more-apps-button\":\"cEuW1_hJ\",\"moreAppsButton\":\"cEuW1_hJ\",\"window-state-button\":\"XpHR_yo0\",\"windowStateButton\":\"XpHR_yo0\",\"header-button\":\"GE5AkJOU\",\"headerButton\":\"GE5AkJOU\",\"fullscreenButton\":\"otlJULGy\",\"tab-close-icon\":\"DoeOewUR\",\"tabCloseIcon\":\"DoeOewUR\",\"state-icon\":\"YRMGpqUS\",\"stateIcon\":\"YRMGpqUS\",\"icon\":\"b13oE9uA\",\"tab-avatar\":\"tI6TE6HP\",\"tabAvatar\":\"tI6TE6HP\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef,\n  useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { Point, Size, ThemeKey } from '../../../types';\nimport type { WebApp, WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { RESIZE_HANDLE_CLASS_NAME } from '../../../config';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTheme, selectUser,\n  selectWebApp,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport windowSize from '../../../util/windowSize';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDraggable from '../../../hooks/useDraggable';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport MinimizedWebAppModal from './MinimizedWebAppModal';\nimport MoreAppsTabContent from './MoreAppsTabContent';\nimport WebAppModalTabContent from './WebAppModalTabContent';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppModalTab = {\n  bot?: ApiUser;\n  webApp: WebApp;\n  isOpen: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  cachedSize?: Size;\n  cachedPosition?: Point;\n};\n\nconst PROLONG_INTERVAL = 45000; // 45s\nconst LUMA_THRESHOLD = 128;\n\nconst MINIMIZED_STATE_SIZE = { width: 300, height: 40 };\nconst DEFAULT_MAXIMIZED_STATE_SIZE = { width: 420, height: 730 };\nconst MAXIMIZED_STATE_MINIMUM_SIZE = { width: 300, height: 300 };\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  cachedSize,\n  cachedPosition,\n}) => {\n  const {\n    closeActiveWebApp,\n    closeWebAppModal,\n    prolongWebView,\n    toggleAttachBot,\n    openChat,\n    changeWebAppModalState,\n    openWebAppTab,\n    updateWebApp,\n    openMoreAppsTab,\n    closeMoreAppsTab,\n    updateMiniAppCachedPosition,\n    updateMiniAppCachedSize,\n  } = getActions();\n\n  const [getMaximizedStateSize, setMaximizedStateSize] = useSignal(cachedSize || DEFAULT_MAXIMIZED_STATE_SIZE);\n\n  function getSize() {\n    if (modal?.modalState === 'fullScreen') return windowSize.get();\n    if (modal?.modalState === 'maximized') return getMaximizedStateSize();\n    return MINIMIZED_STATE_SIZE;\n  }\n  function getMinimumSize() {\n    if (modal?.modalState === 'maximized') return MAXIMIZED_STATE_MINIMUM_SIZE;\n    return undefined;\n  }\n\n  const {\n    openedWebApps, activeWebAppKey, openedOrderedKeys, sessionKeys, isMoreAppsTabActive,\n  } = modal || {};\n  const activeWebApp = activeWebAppKey ? openedWebApps?.[activeWebAppKey] : undefined;\n  const {\n    isBackButtonVisible, headerColor, backgroundColor, isSettingsButtonVisible,\n  } = activeWebApp || {};\n\n  const tabs = useMemo(() => {\n    return openedOrderedKeys?.map((key) => {\n      const webApp = openedWebApps![key];\n      return {\n        bot: getGlobal().users.byId[webApp.botId],\n        webApp,\n        isOpen: Boolean(activeWebApp && (key === getWebAppKey(activeWebApp))),\n      };\n    });\n  }, [openedOrderedKeys, openedWebApps, activeWebApp]);\n\n  const { isMobile } = useAppLayout();\n  const isOpen = modal?.isModalOpen || false;\n  const isMaximizedState = modal?.modalState === 'maximized';\n  const isMinimizedState = modal?.modalState === 'minimized';\n  const isFullScreen = modal?.modalState === 'fullScreen';\n\n  const supportMultiTabMode = !isMobile;\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const getTriggerElement = useLastCallback(() => ref.current!);\n\n  const getRootElement = useLastCallback(\n    () => ref.current!,\n  );\n\n  const getMenuElement = useLastCallback(\n    () => menuRef.current!,\n  );\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const [isDraggingEnabled, setIsDraggingEnabled] = useState(false);\n\n  const headerElement = headerRef.current;\n  const containerElement = ref.current;\n\n  useEffect(() => {\n    setIsDraggingEnabled(Boolean(supportMultiTabMode && headerElement && containerElement && !isFullScreen));\n  }, [supportMultiTabMode, headerElement, containerElement, isFullScreen]);\n\n  useEffect(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  }, [supportMultiTabMode]);\n\n  const {\n    isDragging,\n    isResizing,\n    style: draggableStyle,\n    size,\n    position,\n  } = useDraggable(\n    ref,\n    headerRef,\n    isDraggingEnabled,\n    getSize(),\n    isFullScreen,\n    getMinimumSize(),\n    cachedPosition,\n  );\n\n  const x = position?.x;\n  const y = position?.y;\n  useEffect(() => {\n    if (!isDragging && x !== undefined && y !== undefined) {\n      updateMiniAppCachedPosition({ position: { x, y } });\n    }\n  }, [isDragging, x, y]);\n\n  useEffect(() => {\n    if (!isDragging && size && isMaximizedState) { updateMiniAppCachedSize({ size }); }\n  }, [isDragging, isMaximizedState, size]);\n\n  const currentSize = size || getSize();\n\n  const currentWidth = currentSize.width;\n  const currentHeight = currentSize.height;\n\n  useEffect(() => {\n    if (isResizing) {\n      setMaximizedStateSize({ width: currentWidth, height: currentHeight });\n    }\n  }, [currentHeight, currentWidth, isResizing, setMaximizedStateSize]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    queryId,\n  } = activeWebApp || {};\n\n  const openTabsCount = openedWebApps ? Object.values(openedWebApps).length : 0;\n\n  useInterval(() => {\n    if (!openedWebApps) return;\n    Object.keys(openedWebApps).forEach((key) => {\n      const webApp = openedWebApps[key];\n      if (webApp.queryId) {\n        prolongWebView({\n          botId: webApp.botId,\n          queryId: webApp.queryId,\n          peerId: webApp.peerId || chat!.id,\n          replyInfo: webApp.replyInfo,\n        });\n      }\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  // eslint-disable-next-line no-null/no-null\n  const sendEventCallback = useRef<((event: WebAppOutboundEvent) => void) | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const reloadFrameCallback = useRef<((url: string) => void) | null>(null);\n\n  const registerSendEventCallback = useLastCallback((callback: (event: WebAppOutboundEvent) => void) => {\n    sendEventCallback.current = callback;\n  });\n\n  const sendEvent = useLastCallback((event: WebAppOutboundEvent) => {\n    if (sendEventCallback.current) {\n      sendEventCallback.current(event);\n    }\n  });\n\n  const registerReloadFrameCallback = useLastCallback((callback: (url: string) => void) => {\n    reloadFrameCallback.current = callback;\n  });\n\n  const reloadFrame = useLastCallback((url: string) => {\n    if (reloadFrameCallback.current) {\n      reloadFrameCallback.current(url);\n    }\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(activeWebApp!.url);\n  });\n\n  const handleModalClose = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleCloseMoreAppsTab = useLastCallback(() => {\n    closeMoreAppsTab();\n  });\n\n  const handleTabClose = useLastCallback(() => {\n    if (openTabsCount > 1) {\n      closeActiveWebApp();\n    } else {\n      closeWebAppModal();\n    }\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      const key = getWebAppKey(activeWebApp!);\n      updateWebApp({\n        key,\n        update: {\n          isRemoveModalOpen: true,\n        },\n      });\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleModalClose();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'minimized' });\n  });\n\n  const handleFullscreenClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'fullScreen' });\n  });\n\n  const handleOpenMoreAppsTabClick = useLastCallback(() => {\n    openMoreAppsTab();\n  });\n\n  const handleTabClick = useLastCallback((tab: WebAppModalTab) => {\n    openWebAppTab({ webApp: tab.webApp });\n  });\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n  });\n\n  const MoreMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        className={\n          buildClassName(\n            supportMultiTabMode ? styles.tabMoreButton : styles.moreButton,\n            isMenuOpen && 'active',\n          )\n        }\n        round\n        ripple={!isMobile}\n        size={supportMultiTabMode ? 'tiny' : 'smaller'}\n        color=\"translucent\"\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, supportMultiTabMode]);\n\n  function renderMenuItems() {\n    return (\n      <>\n        {chat && bot && chat.id !== bot.id && (\n          <MenuItem icon=\"bots\" onClick={openBotChat}>{oldLang('BotWebViewOpenBot')}</MenuItem>\n        )}\n        <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{oldLang('WebApp.ReloadPage')}</MenuItem>\n        {isSettingsButtonVisible && (\n          <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n            {oldLang('Settings')}\n          </MenuItem>\n        )}\n        {bot?.isAttachBot && (\n          <MenuItem\n            icon={attachBot ? 'stop' : 'install'}\n            onClick={handleToggleClick}\n            destructive={Boolean(attachBot)}\n          >\n            {oldLang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n          </MenuItem>\n        )}\n      </>\n    );\n  }\n\n  function renderMoreMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        ref={menuRef}\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        getTriggerElement={getTriggerElement}\n        getMenuElement={getMenuElement}\n        getRootElement={getRootElement}\n        autoClose\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n      >\n        {renderMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderDropdownMoreMenu() {\n    return (\n      <DropdownMenu\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        trigger={MoreMenuButton}\n        positionX={supportMultiTabMode ? 'left' : 'right'}\n      >\n        {renderMenuItems()}\n      </DropdownMenu>\n    );\n  }\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (isMoreAppsTabActive) return 'color-text';\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme, isMoreAppsTabActive]);\n\n  function renderTabCurveBorder(className: string) {\n    return (\n      <svg\n        className={className}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n      >\n        <path\n          className={styles.tabButtonCurvePath}\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M16 16V0C16 12 12 16 0 16H16Z\"\n        />\n      </svg>\n    );\n  }\n\n  function renderActiveTab() {\n    const style = buildStyle(\n      headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n      headerColor && `--active-tab-background: ${headerColor}`,\n    );\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n        style={style}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.avatarContainer}>\n            <Avatar\n              size=\"mini\"\n              peer={bot}\n            />\n            <MoreMenuButton onTrigger={handleContextMenu} isOpen={isContextMenuOpen} />\n          </div>\n          {attachBot?.shortName ?? bot?.firstName}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleTabClose}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsTab() {\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.moreAppsTabIcon}>\n            <Icon className={styles.icon} name=\"add\" />\n          </div>\n          {lang('OpenApp')}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleCloseMoreAppsTab}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsButton() {\n    return (\n      <Button\n        className={buildClassName(\n          styles.moreAppsButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleOpenMoreAppsTabClick}\n      >\n        <Icon className={styles.icon} name=\"add\" />\n      </Button>\n    );\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  useHorizontalScroll(containerRef, !isOpen || isMinimizedState || !(containerRef.current));\n\n  function renderTabs() {\n    return (\n      <div\n        className={styles.tabs}\n        ref={containerRef}\n      >\n        {tabs?.map((tab) => (\n          tab.isOpen ? (\n            renderActiveTab()\n          ) : (\n            <Avatar\n              className={styles.tabAvatar}\n              size=\"mini\"\n              peer={tab.bot}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleTabClick(tab)}\n            />\n          )\n        ))}\n        {isMoreAppsTabActive && renderMoreAppsTab()}\n      </div>\n    );\n  }\n\n  function renderHeader() {\n    return (\n      <div\n        ref={headerRef}\n      >\n        {!supportMultiTabMode\n          ? renderSinglePageModeHeader()\n          : (isMaximizedState ? renderMultiTabHeader() : <MinimizedWebAppModal />)}\n      </div>\n    );\n  }\n\n  function renderMultiTabHeader() {\n    return (\n      <div\n        className={buildClassName(\n          'modal-header',\n          'multiTab',\n        )}\n        style={buildStyle(\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          className={styles.headerButton}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        {renderTabs()}\n        {renderMoreMenu()}\n\n        <div className={styles.toolBar}>\n          {!isMoreAppsTabActive && renderMoreAppsButton()}\n\n          {!isMoreAppsTabActive && (\n            <Button\n              className={buildClassName(\n                styles.windowStateButton,\n                styles.fullscreenButton,\n                'no-drag',\n              )}\n              round\n              color=\"translucent\"\n              size=\"tiny\"\n              onClick={handleFullscreenClick}\n            >\n              <Icon className={styles.stateIcon} name=\"expand-modal\" />\n            </Button>\n          )}\n\n          <Button\n            className={buildClassName(\n              styles.windowStateButton,\n              'no-drag',\n            )}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            onClick={handleCollapseClick}\n          >\n            <Icon className={styles.stateIcon} name=\"collapse-modal\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSinglePageModeHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        {!isMoreAppsTabActive && renderDropdownMoreMenu()}\n      </div>\n    );\n  }\n\n  function buildResizeHandleClass(handleClassName: string) {\n    return buildClassName(RESIZE_HANDLE_CLASS_NAME, handleClassName);\n  }\n\n  function renderResizeHandles() {\n    return (\n      <>\n        <div className={buildResizeHandleClass('top')} />\n        <div className={buildResizeHandleClass('bottom')} />\n        <div className={buildResizeHandleClass('left')} />\n        <div className={buildResizeHandleClass('right')} />\n        <div className={buildResizeHandleClass('topLeft')} />\n        <div className={buildResizeHandleClass('topRight')} />\n        <div className={buildResizeHandleClass('bottomLeft')} />\n        <div className={buildResizeHandleClass('bottomRight')} />\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={ref}\n      className={buildClassName(\n        styles.root,\n        supportMultiTabMode && styles.multiTab,\n        isMinimizedState && styles.minimized,\n        isFullScreen && styles.fullScreen,\n      )}\n      dialogStyle={supportMultiTabMode ? draggableStyle : undefined}\n      dialogContent={isDraggingEnabled ? renderResizeHandles() : undefined}\n      isOpen={isOpen}\n      isLowStackPriority\n      onClose={handleModalClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor || 'var(--color-background)'}`}\n      noBackdrop\n      noBackdropClose\n    >\n      {isFullScreen && renderMoreMenu()}\n      {openedWebApps && sessionKeys?.map((key) => (\n        <WebAppModalTabContent\n          key={key}\n          modal={modal}\n          registerSendEventCallback={registerSendEventCallback}\n          registerReloadFrameCallback={registerReloadFrameCallback}\n          webApp={openedWebApps[key]}\n          isTransforming={isDragging || isResizing}\n          onContextMenuButtonClick={handleContextMenu}\n          isMultiTabSupported={supportMultiTabMode}\n          modalHeight={currentHeight}\n        />\n      ))}\n      { isMoreAppsTabActive && (<MoreAppsTabContent />)}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const cachedPosition = global.settings.miniAppsCachedPosition;\n    const cachedSize = global.settings.miniAppsCachedSize;\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      cachedPosition,\n      cachedSize,\n    };\n  },\n)(WebAppModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n} & ({\n  icon: IconName;\n  isFontIcon: true;\n} | {\n  icon: string;\n  isFontIcon?: false;\n});\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <Icon name={icon} className={styles.fontIcon} style={`--item-color: rgb(${r},${g},${b})`} />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <Icon name=\"previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <Icon name=\"next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar, { AVATAR_SIZES } from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS: Record<string, IconName> = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = AVATAR_SIZES.giant + 0.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type {\n  ApiLimitTypeForPromo,\n  ApiPremiumPromo,\n  ApiPremiumSection,\n  ApiPremiumSubscriptionOption,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePreviousDeprecated(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium ? lang('OK') : lang('SubscribeToPremium', formatCurrency(perMonthPrice, currency, lang.code));\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={lang('Back')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {lang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={lang(LIMITS_TITLES[limit])}\n                        description={lang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {lang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {lang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(lang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumGiftOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const lang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={lang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {lang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrency(amount, currency, lang.code)} x ${users!}`\n            : lang('PricePerMonth', formatCurrency(perMonth, currency, lang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrency(amount, currency, lang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSection, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      perMonthPrice,\n      currency,\n      lang.code,\n    );\n  }, [selectedSubscriptionOption, lang.code]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return renderText(\n        fromUser?.id === currentUserId\n          ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n          : lang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]),\n        ['simple_markdown', 'emoji'],\n      );\n    }\n\n    if (fromUserStatusSet && fromUser) {\n      const template = lang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n      const [first, second] = template.split('{link}');\n\n      const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n        <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n      ) : undefined;\n      const link = (\n        <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n          {emoji}{renderText(fromUserStatusSet.title)}\n        </span>\n      );\n      return [renderText(first), link, renderText(second)];\n    }\n\n    return renderText(\n      fromUser\n        ? lang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n        : lang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium'),\n      ['simple_markdown', 'emoji'],\n    );\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? lang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : lang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return lang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? lang('TelegramPremiumUserDialogSubtitle')\n      : lang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={lang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={lang('Close')}\n            >\n              <Icon name=\"close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {getHeaderText()}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {lang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={lang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? lang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : lang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(lang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(lang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {lang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\nexport type ItemPickerOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  value: string;\n};\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedValue?: string;\n  selectedValues?: never; // Help TS to throw an error if this is passed\n  onSelectedValueChange?: (value: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedValue?: never;\n  selectedValues: string[];\n  lockedSelectedValues?: string[];\n  lockedUnselectedValues?: string[];\n  onSelectedValuesChange?: (values: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  isSearchable?: boolean;\n  searchInputId?: string;\n  items: ItemPickerOption[];\n  itemClassName?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isViewOnly?: boolean;\n  withDefaultPadding?: boolean;\n  forceRenderAllItems?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (value: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst ITEM_CLASS_NAME = 'ItemPickerItem';\n\nconst ItemPicker = ({\n  className,\n  isSearchable,\n  searchInputId,\n  items,\n  filterValue,\n  notFoundText,\n  isLoading,\n  noScrollRestore,\n  filterPlaceholder,\n  isViewOnly,\n  itemInputType,\n  itemClassName,\n  withDefaultPadding,\n  forceRenderAllItems,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedValues = allowMultiple ? optionalProps.lockedSelectedValues : undefined;\n  const lockedUnselectedValues = allowMultiple ? optionalProps.lockedUnselectedValues : undefined;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const selectedValues = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedValues;\n    }\n\n    return optionalProps.selectedValue ? [optionalProps.selectedValue] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedValue, optionalProps.selectedValues]);\n\n  const lockedSelectedValuesSet = useMemo(() => new Set(lockedSelectedValues), [lockedSelectedValues]);\n  const lockedUnselectedValuesSet = useMemo(() => new Set(lockedUnselectedValues), [lockedUnselectedValues]);\n\n  const sortedItemValuesList = useMemo(() => {\n    if (filterValue) {\n      return items.map((item) => item.value);\n    }\n\n    const lockedSelectedBucket: ItemPickerOption[] = [];\n    const unlockedBucket: ItemPickerOption[] = [];\n    const lockedUnselectableBucket: ItemPickerOption[] = [];\n\n    items.forEach((item) => {\n      if (lockedSelectedValuesSet.has(item.value)) {\n        lockedSelectedBucket.push(item);\n      } else if (lockedUnselectedValuesSet.has(item.value)) {\n        lockedUnselectableBucket.push(item);\n      } else {\n        unlockedBucket.push(item);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket).map((item) => item.value);\n  }, [filterValue, items, lockedSelectedValuesSet, lockedUnselectedValuesSet]);\n\n  const handleItemClick = useLastCallback((value: string) => {\n    if (allowMultiple) {\n      const newSelectedValues = selectedValues.slice();\n      const index = newSelectedValues.indexOf(value);\n      if (index >= 0) {\n        newSelectedValues.splice(index, 1);\n      } else {\n        newSelectedValues.push(value);\n      }\n\n      optionalProps.onSelectedValuesChange?.(newSelectedValues);\n      return;\n    }\n\n    optionalProps.onSelectedValueChange?.(value);\n  });\n\n  const [viewportValuesList, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemValuesList, Boolean(forceRenderAllItems || filterValue),\n  );\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const renderItem = useCallback((value: string) => {\n    const item = items.find((itemOption) => itemOption.value === value);\n    if (!item) return undefined;\n\n    const { label, subLabel, isLoading: isItemLoading } = item;\n    const isAlwaysUnselected = lockedUnselectedValuesSet.has(value);\n    const isAlwaysSelected = lockedSelectedValuesSet.has(value);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = selectedValues.includes(value);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      return undefined;\n    }\n\n    return (\n      <PickerItem\n        key={value}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={label}\n        subtitle={subLabel}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(value)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(value, isAlwaysSelected))}\n      />\n    );\n  }, [\n    items, lockedUnselectedValuesSet, lockedSelectedValuesSet, selectedValues, isViewOnly, onDisabledClick,\n    itemInputType, itemClassName,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('Search')}\n          />\n        </div>\n      )}\n\n      {viewportValuesList?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportValuesList}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportValuesList.map((value) => renderItem(value))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportValuesList && !viewportValuesList.length ? (\n        <p className={styles.noResults}>{notFoundText || lang('SearchEmptyViewTitle')}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ItemPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport ItemPicker from './pickers/ItemPicker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePreviousDeprecated(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList.filter((country) => !country.isHidden && country.iso2 !== 'FT')\n      .map(({\n        iso2, defaultName,\n      }) => ({\n        value: iso2,\n        label: defaultName,\n      }));\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedIds}\n          selectedValues={selectedCountryIds}\n          onSelectedValuesChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport {\n  isChatChannel, isChatPublic, isChatSuperGroup,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\nconst GiveawayChannelPickerModal = ({\n  isOpen,\n  giveawayChatId,\n  selectionLimit,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const channelIds = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const { active, archived } = global.chats.listIds;\n    const ids = (active || []).concat(archived || []);\n\n    return unique(ids).map((id) => chatsById[id])\n      .filter((chat) => (\n        chat && (\n          isChatChannel(chat) || isChatSuperGroup(chat)\n        ) && chat.id !== giveawayChatId\n      )).map((chat) => chat.id);\n  }, [giveawayChatId]);\n\n  const displayedChannelIds = useMemo(() => {\n    const foundChannelIds = channelIds ? filterPeersByQuery({ ids: channelIds, query: searchQuery, type: 'chat' }) : [];\n\n    return sortChatIds(foundChannelIds,\n      false,\n      selectedIds);\n  }, [channelIds, searchQuery, selectedIds]);\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds(unique([...selectedIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('RequestPeer.ChooseChannelTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedChannelIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedChannelIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(GiveawayChannelPickerModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link} onClick={handleClick}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember } from '../../../api/types';\n\nimport {\n  isUserBot,\n  sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst GiveawayUserPickerModal = ({\n  isOpen,\n  selectionLimit,\n  members,\n  adminMembersById,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps & StateProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const memberIds = useMemo(() => {\n    const global = getGlobal();\n    const { byId, statusesById } = global.users;\n    if (!members?.length) {\n      return [];\n    }\n\n    const adminIdsSet = adminMembersById && new Set(Object.keys(adminMembersById));\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      byId,\n      statusesById,\n    );\n\n    return adminIdsSet ? userIds.filter((userId) => !adminIdsSet.has(userId)) : userIds;\n  }, [adminMembersById, members]);\n\n  const displayedMemberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredUserIds = memberIds\n      ? filterPeersByQuery({ ids: memberIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(unique(filteredUserIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('BoostingAwardSpecificUsers')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedMemberIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedMemberIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { giveawayChatId }): StateProps => {\n  const chatFullInfo = giveawayChatId ? selectChatFullInfo(global, giveawayChatId) : undefined;\n  if (!chatFullInfo) {\n    return {};\n  }\n\n  return {\n    members: chatFullInfo.members,\n    adminMembersById: chatFullInfo.adminMembersById,\n  };\n})(GiveawayUserPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"starSubscription\":\"bzRAETfR\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"removeChannel\":\"UZdErfVI\",\"starOptions\":\"cLhNkYPB\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry,\n  ApiPremiumGiftCodeOption,\n  ApiPrepaidGiveaway,\n  ApiPrepaidStarsGiveaway,\n  ApiStarGiveawayOption,\n  ApiTypePrepaidGiveaway,\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { unique } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport GiveawayChannelPickerModal from './GiveawayChannelPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport GiveawayUserPickerModal from './GiveawayUserPickerModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiftStar from '../../../assets/premium/GiftStar.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiTypePrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n  isStarsGiftEnabled?: boolean;\n  starsGiftOptions?: ApiStarGiveawayOption[] | undefined;\n};\n\ntype GiveawayAction = 'createPremiumGiveaway' | 'createStarsGiveaway';\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n  isStarsGiftEnabled,\n  starsGiftOptions,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway, launchPrepaidStarsGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isUserPickerModalOpen, openUserPickerModal, closeUserPickerModal] = useFlag();\n  const [isChannelPickerModalOpen, openChannelPickerModal, closeChannelPickerModal] = useFlag();\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'Premium.Title',\n    text: 'BoostingWinnersRandomly',\n    value: 'premium_giveaway',\n    img: GiftBlueRound,\n    actions: 'createPremiumGiveaway',\n    isLink: true,\n    onClickAction: () => {\n      openUserPickerModal();\n    },\n  }];\n\n  if (isStarsGiftEnabled) {\n    TYPE_OPTIONS.push({\n      name: 'TelegramStars',\n      text: 'BoostingWinnersRandomly',\n      value: 'stars_giveaway',\n      img: GiftStar,\n      actions: 'createStarsGiveaway',\n      isLink: false,\n    });\n  }\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedRandomUserCount, setSelectedRandomUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedStarOption, setSelectedStarOption] = useState<ApiStarGiveawayOption | undefined>();\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const [\n    dataStarsPrepaidGiveaway, setDataStarsPrepaidGiveaway,\n  ] = useState<ApiPrepaidStarsGiveaway | undefined>(undefined);\n\n  const isPremiumGiveaway = selectedGiveawayOption === 'premium_giveaway';\n  const isStarsGiveaway = selectedGiveawayOption === 'stars_giveaway';\n  const selectedUserCount = isPremiumGiveaway\n  && !selectedUserIds.length ? selectedRandomUserCount : selectedUserIds.length;\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const boostStarsQuantity = selectedStarOption?.yearlyBoosts;\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountryIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n  const isStarsPrepaidGiveaway = prepaidGiveaway?.type === 'starsGiveaway';\n  const isPremiumPrepaidGiveaway = prepaidGiveaway?.type === 'giveaway';\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const selectedStarsGift = useMemo(() => {\n    return starsGiftOptions?.find((gift) => {\n      return isStarsPrepaidGiveaway && gift.stars === (dataStarsPrepaidGiveaway?.stars);\n    });\n  }, [dataStarsPrepaidGiveaway, starsGiftOptions, isStarsPrepaidGiveaway]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users === selectedUserCount);\n  }, [gifts, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const basicGift = filteredGifts?.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    }, filteredGifts[0]);\n\n    return basicGift && Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    return unique((gifts?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [gifts]);\n\n  const winnerCountOptions = useMemo(() => {\n    return unique((selectedStarOption?.winners?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [selectedStarOption]);\n\n  useEffect(() => {\n    if (isOpen && gifts?.length && !isStarsPrepaidGiveaway) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [isOpen, gifts, isStarsPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && starsGiftOptions?.length && !isPremiumPrepaidGiveaway) {\n      setSelectedStarOption(starsGiftOptions?.[0]);\n    }\n  }, [isOpen, starsGiftOptions, isPremiumPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isStarsPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataStarsPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [isOpen, isStarsPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isPremiumPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n      setSelectedMonthOption(prepaidGiveaway.months);\n    }\n  }, [isOpen, isPremiumPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    setDataStarsPrepaidGiveaway(undefined);\n    setDataPrepaidGiveaway(undefined);\n    setSelectedStarOption(undefined);\n    setSelectedMonthOption(undefined);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n    closeGiveawayModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isPremiumGiveaway) {\n      if (selectedUserIds?.length) {\n        openInvoice({\n          type: 'giftcode',\n          boostChannelId: chatId!,\n          userIds: selectedUserIds,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      } else {\n        openInvoice({\n          type: 'giveaway',\n          chatId: chatId!,\n          additionalChannelIds: selectedChannelIds,\n          isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n          countries: selectedCountryIds,\n          areWinnersVisible: shouldShowWinners,\n          prizeDescription,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      }\n    } else {\n      openInvoice({\n        type: 'starsgiveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountryIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedStarOption!.currency,\n        amount: selectedStarOption!.amount,\n        stars: selectedStarOption!.stars,\n        users: selectedRandomUserCount,\n      });\n    }\n\n    handleClose();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    if (isStarsPrepaidGiveaway) {\n      launchPrepaidStarsGiveaway({\n        chatId: chatId!,\n        giveawayId: dataStarsPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          stars: dataStarsPrepaidGiveaway!.stars,\n          currency: selectedStarsGift!.currency,\n          amount: selectedStarsGift!.amount,\n          users: dataStarsPrepaidGiveaway!.quantity,\n        },\n      });\n    } else {\n      launchPrepaidGiveaway({\n        chatId: chatId!,\n        giveawayId: dataPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n        },\n      });\n    }\n\n    closeConfirmModal();\n    handleClose();\n  });\n\n  const handleRandomUserCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handleWinnerCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountryIds(value);\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedUserIds(newSelectedIds);\n    if (!newSelectedIds.length) {\n      setGiveawayOption('premium_giveaway');\n    }\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedChannelIds(newSelectedIds);\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  const handleStarClick = useLastCallback((option) => {\n    setSelectedStarOption(option);\n  });\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        className={styles.starOptions}\n        options={starsGiftOptions}\n        selectedStarCount={selectedRandomUserCount}\n        selectedStarOption={selectedStarOption}\n        onClick={handleStarClick}\n      />\n    );\n  }\n\n  function renderGiveawayOptionList() {\n    return (\n      <>\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingChannelsGroupsIncludedGiveaway')}\n          </h2>\n\n          <ListItem\n            inactive\n            className=\"chat-item-clickable contact-list-item\"\n          >\n            <GroupChatInfo\n              chatId={chatId!}\n              status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                : 'BoostingGroupWillReceiveBoost', boostQuantity || boostStarsQuantity, 'i')}\n            />\n          </ListItem>\n\n          {selectedChannelIds?.map((channelId) => {\n            return (\n              <ListItem\n                ripple\n                key={channelId}\n                className=\"chat-item-clickable contact-list-item\"\n                /* eslint-disable-next-line react/jsx-no-bind */\n                onClick={() => deleteParticipantsHandler(channelId)}\n                rightElement={(<Icon name=\"close\" className={styles.removeChannel} />)}\n              >\n                <GroupChatInfo\n                  chatId={channelId.toString()}\n                />\n              </ListItem>\n            );\n          })}\n\n          {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n            <ListItem\n              icon=\"add\"\n              ripple\n              onClick={openChannelPickerModal}\n              className={styles.addButton}\n              iconClassName={styles.addChannel}\n            >\n              {lang('BoostingAddChannelOrGroup')}\n            </ListItem>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingEligibleUsers')}\n          </h2>\n\n          {renderSubscribersOptions()}\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayAdditionalPrizes')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowPrizes}\n              onChange={handleShouldShowPrizesChange}\n            />\n          </div>\n\n          {shouldShowPrizes && (\n            <div className={styles.prizesSection}>\n              <h2 className={styles.title}>\n                {selectedRandomUserCount}\n              </h2>\n              <InputText\n                className={styles.prizesInput}\n                value={prizeDescription}\n                onChange={handlePrizeDescriptionChange}\n                label={lang('BoostingGiveawayEnterYourPrize')}\n              />\n            </div>\n          )}\n        </div>\n\n        {shouldShowPrizes ? (\n          !isStarsGiveaway && !isStarsPrepaidGiveaway ? (\n            <div className={styles.subscription}>\n              {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                  : [selectedUserCount, prizeDescription, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                  : [selectedUserCount, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown'])}\n            </div>\n          ) : undefined\n        ) : (\n          <div className={styles.subscription}>\n            {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n          </div>\n        )}\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayShowWinners')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowWinners}\n              onChange={handleShouldShowWinnersChange}\n            />\n          </div>\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n        </div>\n\n        <div className={buildClassName(styles.section,\n          (dataPrepaidGiveaway || dataStarsPrepaidGiveaway || isStarsGiveaway) && styles.subscriptionFooter)}\n        >\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingDateWhenGiveawayEnds')}\n          </h2>\n\n          <Button\n            ariaLabel={lang('BoostGift.DateEnds')}\n            className={buildClassName(styles.dateButton, 'expire-limit')}\n            isText\n            onClick={openCalendar}\n          >\n            <h3 className={styles.title}>\n              {lang('BoostGift.DateEnds')}\n            </h3>\n            {formatDateTimeToString(customExpireDate, lang.code)}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n      onEnter={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n    >\n      <div className={styles.main} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? (\n          <div className={styles.status}>\n            <div>\n              {dataStarsPrepaidGiveaway ? (\n                <img className={styles.prepaidImg} src={GiftStar} alt=\"\" />\n              ) : (\n                <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway!.months]} alt=\"\" />\n              )}\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Title', dataStarsPrepaidGiveaway?.stars)\n                  : lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway!.quantity)}\n              </h3>\n              <p className={styles.month}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Desc', dataStarsPrepaidGiveaway?.quantity)\n                  : lang('PrepaidGiveawayMonths', dataPrepaidGiveaway?.months)}\n              </p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataStarsPrepaidGiveaway ? dataStarsPrepaidGiveaway?.boosts\n                    : dataPrepaidGiveaway!.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isPremiumGiveaway && !selectedUserIds?.length && (\n          <>\n            {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleRandomUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {isStarsGiveaway && (\n          <>\n            {!dataStarsPrepaidGiveaway && !dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingStarsOptions')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostStarsQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  {renderStarOptionList()}\n                </div>\n\n                <div className={buildClassName(styles.subscription, styles.starSubscription)}>\n                  {renderText(lang('BoostGift.Stars.Info'))}\n                </div>\n\n                <div className={styles.section}>\n                  <h2 className={styles.giveawayTitle}>\n                    {lang('BoostingStarsQuantityPrizes')}\n                  </h2>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedRandomUserCount}\n                    marks={winnerCountOptions}\n                    onChange={handleWinnerCountChange}\n                  />\n\n                  <div className={styles.subscription}>\n                    {renderText(lang('BoostingStarsQuantityPrizesInfo'))}\n                  </div>\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && isPremiumGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button\n              className={styles.button}\n              onClick={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n            >\n              {lang('BoostingStartGiveaway')}\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <GiveawayUserPickerModal\n        isOpen={isUserPickerModalOpen}\n        onClose={closeUserPickerModal}\n        onSelectedIdsConfirmed={handleSelectedUserIdsChange}\n        initialSelectedIds={selectedUserIds}\n        selectionLimit={userSelectionLimit}\n        giveawayChatId={chatId}\n      />\n      <GiveawayChannelPickerModal\n        isOpen={isChannelPickerModalOpen}\n        onClose={closeChannelPickerModal}\n        initialSelectedIds={selectedChannelIds}\n        onSelectedIdsConfirmed={handleSelectedChannelIdsChange}\n        selectionLimit={GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n        giveawayChatId={chatId}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    isStarsGiftEnabled: global.appConfig?.isStarsGiftEnabled,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n    starsGiftOptions: giveawayModal?.starOptions,\n  };\n})(GiveawayModal));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: OldLangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: OldLangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll({\n        container: containerRef.current!,\n        element: stickerSetEl,\n        position: 'start',\n        margin: FOCUS_MARGIN,\n        maxDistance: isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      });\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const hasOnlyStaticThumb = hasStaticThumb && !hasVideoThumb && !hasAnimatedThumb && !thumbCustomEmojiId;\n\n  const shouldFallbackToStatic = hasOnlyStaticThumb || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb);\n  const staticHash = shouldFallbackToStatic && getStickerMediaHash(stickerSet.stickers![0], 'preview');\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransitionDeprecated(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport Sparkles from './Sparkles';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\nimport { emojiToIconMap } from '../../util/FolderEmojis';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n  withSparkles?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n  withSparkles,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: { type: 'regular', documentId: sticker.id, until: getServerTime() + duration },\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n  const isFolderEmoji = Boolean(\n    sticker.isCustomEmoji && \n    sticker.emoji && \n    // @ts-ignore\n    sticker.stickerSetInfo?.shortName === 'folder_emojis' && \n    emojiToIconMap[sticker.emoji]\n  );\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    isFolderEmoji && 'folder-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {withSparkles && <Sparkles preset=\"button\" /> }\n     {isFolderEmoji && sticker.emoji ? (\n \n          <Icon \n            name={emojiToIconMap[sticker.emoji]} \n            className=\"folder-icon\"\n          />\n      \n\n      ) : isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          noVideoOnMobile\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AVrrYEbM\",\"selected\":\"QkdO_lz1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReactionWithPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIconWithPreview from '../AnimatedIconWithPreview';\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionWithPaid;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReactionWithPaid) => void;\n  onContextMenu?: (reaction: ApiReactionWithPaid) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n  onContextMenu,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = reaction.type === 'custom';\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenu?.(reaction);\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onContextMenu, handleContextMenuHide, isContextMenuOpen, reaction]);\n\n  const tgsUrl = reaction.type === 'paid' ? LOCAL_TGS_URLS.StarReaction : mediaData;\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={tgsUrl}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiEmojiStatusType, ApiReactionWithPaid, ApiSticker,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  FOLDER_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './reactions/ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\nimport { emojiToIconMap } from '../../util/FolderEmojis';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  collectibleStatuses?: ApiEmojiStatusType[];\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps & StateProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onReactionContext,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  collectibleStatuses,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransitionDeprecated(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isStatusCollectible = stickerSet.id === COLLECTIBLE_STATUS_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const collectibleEmojiIdsSet = useMemo(() => (\n    collectibleStatuses ? new Set(collectibleStatuses.map(({ documentId }) => documentId)) : undefined\n  ), [collectibleStatuses]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && !isStatusCollectible\n   && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              onContextMenu={onReactionContext}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            const withSparkles = sticker.id === COLLECTIBLE_STATUS_SET_ID\n            || collectibleEmojiIdsSet?.has(sticker.id);\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n                withSparkles={withSparkles}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return { collectibleStatuses };\n  },\n)(StickerSet));\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiEmojiStatusType,\n  ApiReaction, ApiReactionWithPaid, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique, uniqueByField } from '../../util/iteratees';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport { FOLDER_SYMBOL_SET_ID } from '../../config';\nimport { createFolderEmojiSet } from '../../util/FolderEmojis';\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isFolderPicker?: boolean;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  collectibleStatuses?: ApiEmojiStatusType[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  isWithPaidReaction?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  collectibleStatuses,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  isWithPaidReaction,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onReactionContext,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isFolderPicker,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    if (isFolderPicker) return [];\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const collectibleStatusEmojis = useMemo(() => {\n    const collectibleStatusEmojiIds = collectibleStatuses?.map((status) => status.documentId);\n    return customEmojisById && collectibleStatusEmojiIds?.map((id) => customEmojisById[id]).filter(Boolean);\n  }, [customEmojisById, collectibleStatuses]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const canLoadAndPlay = usePrevDuringAnimation(loadAndPlay || undefined, SLIDE_TRANSITION_DURATION);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n    if (isFolderPicker) {\n      defaultSets.push(createFolderEmojiSet());\n    }\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice: ApiReactionWithPaid[] = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (isWithPaidReaction) {\n        topReactionsSlice.unshift({ type: 'paid' });\n      }\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = uniqueByField(defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []), 'id');\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n          isEmoji: true,\n        });\n      }\n      if (collectibleStatusEmojis?.length) {\n        defaultSets.push({\n          id: COLLECTIBLE_STATUS_SET_ID,\n          accessHash: '',\n          count: collectibleStatusEmojis.length,\n          stickers: collectibleStatusEmojis,\n          title: lang('CollectibleStatusesCategory'),\n          isEmoji: true,\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: oldLang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, oldLang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n    isWithPaidReaction, collectibleStatusEmojis, lang,isFolderPicker\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n    if (stickerSet.id === FOLDER_SYMBOL_SET_ID) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          color=\"translucent\"\n          onClick={() => selectStickerSet(index)}\n        >\n          <Icon name=\"folder\" />\n        </Button>\n      );\n    }\n\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !canLoadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !canLoadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{oldLang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && canLoadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={onReactionSelect}\n              onReactionContext={onReactionContext}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return {\n      customEmojisById,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      collectibleStatuses: isStatusPicker ? collectibleStatuses : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      isWithPaidReaction: isReactionPicker && chatFullInfo?.isPaidReactionAvailable,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"C9sWDINB\",\"topEmoji\":\"gdG3oY21\",\"description\":\"p7S4AH8A\",\"title\":\"KVpsce1g\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SuggestedStatusModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['suggestedStatusModal'];\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n};\n\nconst CUSTOM_EMOJI_SIZE = 6 * REM;\n\nconst SuggestedStatusModal = ({ modal, currentUser, bot }: OwnProps & StateProps) => {\n  const { setEmojiStatus, closeSuggestedStatusModal, sendWebAppEvent } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !renderingModal) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: renderingModal.customEmojiId,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, renderingModal]);\n\n  const description = useMemo(() => {\n    if (!renderingModal || !bot) return undefined;\n\n    const botName = getUserFullName(bot);\n\n    if (renderingModal.duration) {\n      return lang('BotSuggestedStatusFor', {\n        bot: botName,\n        duration: formatShortDuration(lang, renderingModal.duration),\n      }, {\n        withNodes: true,\n        withMarkdown: true,\n      });\n    }\n\n    return lang('BotSuggestedStatus', { bot: botName }, { withNodes: true, withMarkdown: true });\n  }, [bot, lang, renderingModal]);\n\n  const handleClose = useLastCallback(() => {\n    const webAppKey = renderingModal?.webAppKey;\n\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'emoji_status_failed',\n          eventData: {\n            error: 'USER_DECLINED',\n          },\n        },\n      });\n    }\n\n    closeSuggestedStatusModal();\n  });\n\n  const handleSetStatus = useLastCallback(() => {\n    if (!renderingModal) return;\n\n    const expires = renderingModal.duration ? getServerTime() + renderingModal.duration : undefined;\n\n    setEmojiStatus({\n      referrerWebAppKey: renderingModal.webAppKey,\n      emojiStatus: { type: 'regular', documentId: renderingModal.customEmojiId, until: expires },\n    });\n    closeSuggestedStatusModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      {renderingModal && (\n        <CustomEmoji\n          className={styles.topEmoji}\n          documentId={renderingModal.customEmojiId}\n          size={CUSTOM_EMOJI_SIZE}\n          loopLimit={1}\n          forceAlways\n        />\n      )}\n      <div>\n        <h3 className={styles.title}>{lang('BotSuggestedStatusTitle')}</h3>\n        <p className={styles.description}>{description}</p>\n      </div>\n      {mockPeerWithStatus && (\n        <PeerChip\n          mockPeer={mockPeerWithStatus}\n          withEmojiStatus\n        />\n      )}\n      <Button size=\"smaller\" onClick={handleSetStatus}>\n        {lang('GeneralConfirm')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const bot = modal?.botId ? selectUser(global, modal.botId) : undefined;\n\n    return {\n      currentUser,\n      bot,\n    };\n  },\n)(SuggestedStatusModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, chat);\n  }, [chat, oldLang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, prevBoostedChat);\n  }, [prevBoostedChat, oldLang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: oldLang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = oldLang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? oldLang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = oldLang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? oldLang('BoostChannel') : oldLang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = oldLang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = oldLang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = oldLang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = oldLang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, oldLang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {oldLang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {oldLang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : oldLang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {oldLang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(\n              oldLang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {oldLang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {oldLang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={oldLang('OK')}\n          title={oldLang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            oldLang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatShortDuration(lang, boost!.cooldownUntil - getServerTime()),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={oldLang('Common.Yes')}\n          title={oldLang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(oldLang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\",\"logo\":\"Mtx4SWww\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <img src={PremiumLogo} alt=\"\" className={styles.logo} />\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const isNew = invite.alreadyPeerIds.length === 0;\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = isNew ? lang('FolderLinkSubtitleNew')\n    : newChatsCount ? lang('FolderLinkSubtitleAdd', {\n      chats: lang('FolderLinkSubtitleAddCount', { count: newChatsCount }, { pluralValue: newChatsCount }),\n      title: renderTextWithEntities({\n        text: folder.title.text,\n        entities: folder.title.entities,\n        noCustomEmojiPlayback: folder.noTitleAnimations,\n      }),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    }) : lang('FolderLinkSubtitleAlready');\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {oldLang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length\n                  ? oldLang('DeselectAll') : oldLang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && oldLang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {oldLang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>([]);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {lang('FolderLinkSubtitleNew')}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? oldLang('DeselectAll') : oldLang('SelectAll')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkAddFolder')}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePreviousDeprecated(modal) || modal;\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) {\n      return renderTextWithEntities({\n        text: renderingFolder.title.text,\n        entities: renderingFolder.title.entities,\n        noCustomEmojiPlayback: renderingFolder.noTitleAnimations,\n      });\n    }\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) {\n      return renderTextWithEntities({\n        text: renderingInfo.invite.title.text,\n        entities: renderingInfo.invite.title.entities,\n        noCustomEmojiPlayback: renderingInfo.invite.noTitleAnimations,\n      });\n    }\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: TeactNode) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab\n            className={styles.folder}\n            isActive\n            badgeCount={folderTabNumber}\n            isBadgeActive\n            title={folderTitle}\n          />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MZ0RCecx\",\"title\":\"ar8XeydN\",\"participantCount\":\"un00TXYY\",\"participants\":\"YvkZ6c2D\",\"participant\":\"DHJSBDeE\",\"buttons\":\"KFtrPtNr\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getCustomPeerFromInvite, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport PeerBadge from '../../common/PeerBadge';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './ChatInviteModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['chatInviteModal'];\n};\n\nconst ChatInviteModal = ({ modal }: OwnProps) => {\n  const { acceptChatInvite, closeChatInviteModal, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const participantsRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const prevModal = usePrevious(modal);\n  const { hash, inviteInfo } = modal || prevModal || {};\n  const {\n    about, isBroadcast, participantIds, participantsCount, photo, isRequestNeeded,\n  } = inviteInfo || {};\n\n  const handleClose = useLastCallback(() => {\n    closeChatInviteModal();\n  });\n\n  const handleAccept = useLastCallback(() => {\n    acceptChatInvite({ hash: hash! });\n\n    showNotification({\n      message: isBroadcast ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n    });\n\n    handleClose();\n  });\n\n  const acceptLangKey = isBroadcast ? 'ProfileJoinChannel' : 'JoinGroup';\n  const requestToJoinLangKey = isBroadcast ? 'MemberRequests.RequestToJoinChannel'\n    : 'MemberRequests.RequestToJoinGroup';\n\n  const customPeer = useMemo(() => {\n    if (!inviteInfo) return undefined;\n\n    return getCustomPeerFromInvite(inviteInfo);\n  }, [inviteInfo]);\n\n  const participants = useMemo(() => {\n    if (!participantIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return participantIds.map((id) => selectUser(global, id)).filter(Boolean);\n  }, [participantIds]);\n\n  useHorizontalScroll(participantsRef, !modal || !participants);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      contentClassName={styles.content}\n      isSlim\n      onClose={handleClose}\n      onEnter={handleAccept}\n    >\n      {customPeer && <Avatar size=\"jumbo\" photo={photo} peer={customPeer} withVideo />}\n      {customPeer && <FullNameTitle className={styles.title} peer={customPeer} />}\n      {about && <p className={styles.about}>{about}</p>}\n      <p className={styles.participantCount}>\n        {lang(isBroadcast ? 'Subscribers' : 'Members', participantsCount, 'i')}\n      </p>\n      {participants && (\n        <div ref={participantsRef} className={buildClassName(styles.participants, 'no-scrollbar')}>\n          {participants.map((participant) => (\n            <PeerBadge className={styles.participant} peer={participant} text={getUserFullName(participant)} />\n          ))}\n        </div>\n      )}\n      <div className={buildClassName('dialog-buttons', styles.buttons)}>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleAccept}>\n          {lang(isRequestNeeded ? requestToJoinLangKey : acceptLangKey)}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ChatInviteModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LFkgLoAk\",\"title\":\"La4sUYaq\",\"description\":\"Bn5kz5br\",\"moreButton\":\"JdN5pGTw\",\"secondary\":\"hbsLlXSH\",\"content\":\"TZE15Pt_\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { TableAboutData } from '../common/TableAboutModal';\n\nimport { selectSponsoredMessage } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport SponsoredMessageContextMenuContainer from '../../middle/message/SponsoredMessageContextMenuContainer';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport TableAboutModal from '../common/TableAboutModal';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  modal: TabState['aboutAdsModal'];\n};\n\ntype StateProps = {\n  message?: ApiSponsoredMessage;\n  minLevelToRestrictAds?: number;\n};\n\nconst AboutAdsModal = ({ message, minLevelToRestrictAds }: OwnProps & StateProps) => {\n  const { closeAboutAdsModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const moreMenuRef = useRef<HTMLButtonElement>(null);\n\n  const isOpen = Boolean(message);\n  const isMonetizationSharing = message?.canReport;\n\n  const renderingIsNewDesign = useCurrentOrPrev(isMonetizationSharing);\n\n  const oldLang = useOldLang();\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{oldLang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n            text={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [oldLang]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleContextMenu, handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(moreMenuRef, !renderingIsNewDesign);\n\n  const handleClose = useLastCallback(() => {\n    closeAboutAdsModal();\n    handleContextMenuClose();\n    handleContextMenuHide();\n  });\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <>\n        <h3 className={styles.title}>{oldLang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {oldLang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n        <Button\n          ref={moreMenuRef}\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          className={styles.moreButton}\n          onClick={handleContextMenu}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      </>\n    );\n\n    const listItemData = [\n      ['lock', oldLang('RevenueSharingAdsInfo1Title'),\n        renderText(oldLang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])],\n      ['revenue-split', oldLang('RevenueSharingAdsInfo2Title'),\n        renderText(oldLang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])],\n      ['nochannel', oldLang('RevenueSharingAdsInfo3Title'),\n        renderText(oldLang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{renderText(oldLang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(oldLang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={oldLang('PromoteUrl')}\n            text={oldLang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, handleContextMenu, minLevelToRestrictAds]);\n\n  if (renderingIsNewDesign) {\n    return (\n      <>\n        <TableAboutModal\n          isOpen={isOpen}\n          listItemData={modalData?.listItemData}\n          headerIconName=\"channel\"\n          withSeparator\n          header={modalData?.header}\n          footer={modalData?.footer}\n          buttonText={oldLang('RevenueSharingAdsUnderstood')}\n          onClose={handleClose}\n        />\n        {contextMenuAnchor && message && (\n          <SponsoredMessageContextMenuContainer\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            triggerRef={moreMenuRef}\n            message={message}\n            shouldSkipAbout\n            onItemClick={handleClose}\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      {regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={handleClose}\n      >\n        {oldLang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const message = modal?.chatId ? selectSponsoredMessage(global, modal.chatId) : undefined;\n    const minLevelToRestrictAds = global.appConfig?.channelRestrictAdsLevelMin;\n\n    return {\n      message,\n      minLevelToRestrictAds,\n    };\n  },\n)(AboutAdsModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"t9iZUzOj\",\"description\":\"mjveZmdr\",\"toncoin\":\"ATkOSqJ7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const blockchainText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnLearnCoinAbout',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationInfoTONLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const monetizationTitle = useMemo(() => {\n    return lang(\n      'MonetizationInfoTONTitle',\n      undefined,\n      {\n        withNodes: true,\n        specialReplacement: { '💎': <Icon className={styles.toncoin} name=\"toncoin\" /> },\n      },\n    );\n  }, [lang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <h3 className={styles.title}>{oldLang('lng_channel_earn_learn_title')}</h3>\n    );\n\n    const listItemData = [\n      ['channel', oldLang('lng_channel_earn_learn_in_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_in_about'), ['simple_markdown'])],\n      ['revenue-split', oldLang('lng_channel_earn_learn_split_subtitle'),\n        renderText(oldLang('Monetization.Intro.Split.Text'), ['simple_markdown'])],\n      ['cash-circle', oldLang('lng_channel_earn_learn_out_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_out_about'), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{monetizationTitle}</h3>\n        <p className={styles.description}>{blockchainText}</p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, monetizationTitle, blockchainText]);\n\n  if (!modalData) {\n    return undefined;\n  }\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      listItemData={modalData.listItemData}\n      headerIconName=\"cash-circle\"\n      withSeparator\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={oldLang('RevenueSharingAdsUnderstood')}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(AboutMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WqeWhMAS\",\"content\":\"oofoCYlu\"};","import React, {\n  memo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Modal from '../ui/Modal';\nimport PasswordForm from './PasswordForm';\n\nimport styles from './VerificationMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['monetizationVerificationModal'];\n};\n\ntype StateProps = {\n  passwordHint?: string;\n};\n\nconst VerificationMonetizationModal = ({\n  modal,\n  passwordHint,\n}: OwnProps & StateProps) => {\n  const {\n    closeMonetizationVerificationModal, clearMonetizationVerificationError, processMonetizationRevenueWithdrawalUrl,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useLastCallback((password: string) => {\n    if (!renderingModal) return;\n    processMonetizationRevenueWithdrawalUrl({\n      peerId: renderingModal.chatId,\n      currentPassword: password,\n    });\n  });\n\n  const handleClearError = useLastCallback(() => {\n    clearMonetizationVerificationError();\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeMonetizationVerificationModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('CheckPasswordTitle')}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      <div className={buildClassName(styles.content, 'settings-content password-form custom-scroll')}>\n        <div className=\"settings-item pt-0\">\n          <PasswordForm\n            shouldShowSubmit\n            placeholder={lang('CheckPasswordPlaceholder')}\n            error={renderingModal?.errorKey && lang.withRegular(renderingModal.errorKey)}\n            description={lang('CheckPasswordDescription')}\n            clearError={handleClearError}\n            isLoading={renderingModal?.isLoading}\n            hint={passwordHint}\n            isPasswordVisible={shouldShowPassword}\n            shouldResetValue={isOpen}\n            onChangePasswordVisibility={setShouldShowPassword}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      twoFaSettings: {\n        hint: passwordHint,\n      },\n    } = global;\n\n    return {\n      passwordHint,\n    };\n  },\n)(VerificationMonetizationModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MKdSUg2P\",\"chatItem\":\"qEIwBtp0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStickerSet, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectIsCurrentUserPremium, selectStickerSet, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './EmojiStatusAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['emojiStatusAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n  stickerSet?: ApiStickerSet;\n  isPremium?: boolean;\n};\n\nconst INTERVAL = 3000;\n\nconst EmojiStatusAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n  stickerSet,\n  isPremium,\n}) => {\n  const {\n    closeEmojiStatusAccessModal,\n    toggleUserEmojiStatusPermission,\n    sendWebAppEvent,\n    openPremiumModal,\n    loadDefaultStatusIcons,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [currentStatusIndex, setCurrentStatusIndex] = useState<number>(0);\n\n  useEffect(() => {\n    if (isOpen && !stickerSet?.stickers) {\n      loadDefaultStatusIcons();\n    }\n  }, [isOpen, stickerSet]);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !stickerSet?.stickers) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: stickerSet.stickers[currentStatusIndex].id,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, stickerSet, currentStatusIndex]);\n\n  const totalCount = stickerSet?.stickers?.length;\n  useInterval(\n    () => {\n      if (!totalCount) return;\n      setCurrentStatusIndex((prevIndex) => (prevIndex + 1) % totalCount);\n    },\n    totalCount ? INTERVAL : undefined,\n  );\n\n  const renderPickerItem = useLastCallback(() => {\n    return (\n      <PeerChip\n        withEmojiStatus\n        className={styles.chatItem}\n        itemClassName={styles.itemName}\n        mockPeer={mockPeerWithStatus}\n      />\n    );\n  });\n\n  const confirmHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      if (isPremium) {\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'allowed',\n            },\n          },\n        });\n        toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: true, isBotAccessEmojiGranted: true });\n      } else {\n        openPremiumModal();\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'cancelled',\n            },\n          },\n        });\n      }\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'emoji_status_access_requested',\n          eventData: {\n            status: 'cancelled',\n          },\n        },\n      });\n    }\n    if (isPremium) {\n      toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: false });\n    }\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('EmojiStatusAccessText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      contentClassName={styles.content}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderPickerItem()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const isPremium = selectIsCurrentUserPremium(global);\n    const stickerSet = global.defaultStatusIconsId ? selectStickerSet(global, global.defaultStatusIconsId) : undefined;\n\n    return {\n      currentUser,\n      stickerSet,\n      isPremium,\n    };\n  },\n)(EmojiStatusAccessModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getGeolocationStatus } from '../../../util/windowEnvironment';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './LocationAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['locationAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst LocationAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n}) => {\n  const {\n    closeLocationAccessModal, toggleUserLocationPermission, sendWebAppEvent,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const confirmHandler = useLastCallback(async () => {\n    const geolocationData = await getGeolocationStatus();\n    const { geolocation } = geolocationData;\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: true,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: true,\n            latitude: geolocation?.latitude,\n            longitude: geolocation?.longitude,\n            altitude: geolocation?.altitude,\n            course: geolocation?.heading,\n            speed: geolocation?.speed,\n            horizontal_accuracy: geolocation?.accuracy,\n            vertical_accuracy: geolocation?.accuracy,\n          },\n        },\n      });\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: false,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: false,\n          },\n        },\n      });\n    }\n  });\n\n  const renderInfo = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return (\n      <div className={styles.avatars}>\n        <Avatar\n          size=\"large\"\n          peer={currentUser}\n        />\n        <Icon name=\"next\" className={styles.arrow} />\n        <Avatar\n          size=\"large\"\n          peer={modal.bot}\n        />\n      </div>\n    );\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('LocationPermissionText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderInfo()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n\n    return {\n      currentUser,\n    };\n  },\n)(LocationAccessModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatars\":\"CGPoDaLo\",\"arrow\":\"pzERgD5x\"};","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"root\":\"njPBcVYr\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 56;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsoredMessage, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsoredMessage({ peerId: chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink\n        text={lang('lng_report_sponsored_reported_link')}\n        url={lang('ReportAd.Help_URL')}\n      />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      className={styles.root}\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"kq9LwNTZ\",\"root\":\"E1bGWeON\",\"content\":\"tNysQgHL\",\"modalTitle\":\"Lj_ezEWU\",\"header\":\"AlMDkK7c\",\"optionText\":\"FU8m6NUU\",\"option\":\"RoxwMzvA\",\"optionButton\":\"Z6skYdvb\",\"sectionTitle\":\"GSfUuTet\",\"description\":\"zwfjNhF9\",\"title\":\"QawchdxB\",\"hasDepth\":\"CV7kzv9H\",\"titleMultiline\":\"OYFbu8fQ\",\"subtitle\":\"OUFckTb7\",\"transition\":\"n2VxPirU\",\"block\":\"KpptZ3Mk\",\"optionInfo\":\"yc3szGcx\",\"reportIcon\":\"kO8JC4gK\"};","import type { ChangeEvent } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport TextArea from '../../ui/TextArea';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportModal.module.scss';\n\nconst MAX_DESCRIPTION = 512;\nconst ADDED_PADDING = 20;\n\nexport type OwnProps = {\n  modal: TabState['reportModal'];\n};\n\nconst ReportModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportMessages, reportStory, closeReportModal, openPreviousReportModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const [text, setText] = useState('');\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    if (!messageIds) return;\n    switch (subject) {\n      case 'message':\n        reportMessages({ chatId: chatId!, messageIds, option });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds[0], peerId: peerId!, option,\n        });\n        break;\n    }\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal?.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    openPreviousReportModal();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeReportModal();\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        {renderingDepth ? (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Back')}\n            onClick={handleBackClick}\n          >\n            <Icon name=\"arrow-left\" />\n          </Button>\n        ) : (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={handleCloseClick}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={buildClassName(styles.title, renderingDepth && styles.hasDepth)}>\n            {renderingSection?.options\n              ? lang(modal?.subject === 'story' ? 'ReportStory' : 'Report') : renderingSection?.title}\n          </h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.options, renderingSection?.subtitle, renderingSection?.title]);\n\n  const handleTextChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  });\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  const closeReportMessageModalHandler = useLastCallback(() => {\n    setText('');\n    closeReportModal();\n  });\n\n  const sendMessageReportHandler = useLastCallback(() => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    switch (subject) {\n      case 'message':\n        reportMessages({\n          chatId: chatId!, messageIds, option: renderingSection?.option, description: text,\n        });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds?.[0], peerId: peerId!, option: renderingSection?.option, description: text,\n        });\n        break;\n    }\n    closeReportMessageModalHandler();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      header={header}\n      onClose={closeReportMessageModalHandler}\n      contentClassName={styles.content}\n      className={buildClassName(styles.root, modal?.subject === 'story' && 'component-theme-dark')}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          {renderingSection?.options\n            ? <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3> : undefined}\n          {renderingSection?.options?.map((option) => (\n            <ListItem\n              narrow\n              nonInteractive\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n          {renderingSection?.option ? (\n            <div className={styles.block}>\n              <AnimatedIconWithPreview\n                tgsUrl={LOCAL_TGS_URLS.Report}\n                size={100}\n                className={styles.reportIcon}\n                nonInteractive\n                forceAlways\n                noLoop={false}\n              />\n              <TextArea\n                id=\"option\"\n                className={styles.optionInfo}\n                label={renderingSection.isOptional ? lang('Report2CommentOptional') : lang('Report2Comment')}\n                onChange={handleTextChange}\n                value={text}\n                maxLength={MAX_DESCRIPTION}\n                maxLengthIndicator={(MAX_DESCRIPTION - text.length).toString()}\n                noReplaceNewlines\n              />\n              <Button\n                size=\"smaller\"\n                onClick={sendMessageReportHandler}\n                disabled={!renderingSection.isOptional ? !text.length : undefined}\n              >{lang('ReportSend')}\n              </Button>\n            </div>\n          ) : undefined}\n        </div>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"_YNfwDqt\",\"root\":\"SeaF_shb\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"singleTitle\":\"qd6OFHiG\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"button\":\"goI3MITH\",\"options\":\"b6847Kh3\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"proceedButtons\":\"L4YzeG91\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPeerTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  getSendersFromSelectedMessages,\n  selectBot,\n  selectCanDeleteSelectedMessages,\n  selectChat,\n  selectChatFullInfo, selectIsChatWithBot,\n  selectSenderFromMessage,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback, unique } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport AvatarList from './AvatarList';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  messageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  onConfirm?: NoneToVoidFunction;\n  canBanUsers?: boolean;\n  isCreator?: boolean;\n  linkedChatId?: string;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isSuperGroup,\n  isSchedule,\n  currentUserId,\n  messageIds,\n  isCreator,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  chatBot,\n  adminMembersById,\n  canBanUsers,\n  linkedChatId,\n}) => {\n  const {\n    closeDeleteMessageModal,\n    deleteMessages,\n    reportChannelSpam,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n    deleteParticipantHistory,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [peerIdsToDeleteAll, setPeerIdsToDeleteAll] = useState<string[] | undefined>(undefined);\n  const [peerIdsToBan, setPeerIdsToBan] = useState<string[] | undefined>(undefined);\n  const [peerIdsToReportSpam, setPeerIdsToReportSpam] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const [shouldDeleteForAll, setShouldDeleteForAll] = useState(true);\n\n  const peerList = useMemo(() => {\n    if (isChannel || !messageIds || !chat) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n    const senderArray = getSendersFromSelectedMessages(global, chat.id, messageIds);\n    return senderArray ? unique(senderArray)\n      .filter((peer) => peer?.id !== chat?.id && peer?.id !== linkedChatId) : MEMO_EMPTY_ARRAY;\n  }, [chat, isChannel, linkedChatId, messageIds]);\n\n  const buildNestedOptionListWithAvatars = useLastCallback(() => {\n    return peerList.map((member) => {\n      return {\n        value: `${member.id}`,\n        label: getPeerTitle(lang, member) || '',\n        leftElement: <Avatar size=\"small\" peer={member} />,\n      };\n    });\n  });\n\n  const peerListToDeleteAll = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== linkedChatId && peer.id !== currentUserId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToReportSpam = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== currentUserId && peer.id !== linkedChatId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToBan = useMemo(() => {\n    const isCurrentUserInList = peerList.some((peer) => peer.id === currentUserId);\n    const shouldReturnEmpty = !canBanUsers || isCurrentUserInList;\n\n    if (shouldReturnEmpty) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return peerList.filter((peer) => {\n      const isAdmin = adminMembersById?.[peer.id];\n      return isCreator || !isAdmin;\n    });\n  }, [peerList, isCreator, currentUserId, canBanUsers, adminMembersById]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return Boolean(peerListToDeleteAll.length || peerListToReportSpam.length || peerListToBan.length);\n  }, [peerListToDeleteAll, peerListToReportSpam, peerListToBan]);\n\n  const shouldShowOption = shouldShowAdditionalOptions\n    && !canDeleteForAll && !isSchedule && isSuperGroup;\n\n  const peerNames = useMemo(() => {\n    if (!peerList || isSchedule) return {};\n    return buildCollectionByCallback(peerList, (peer) => [peer.id, getPeerTitle(lang, peer)]);\n  }, [isSchedule, lang, peerList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'spam' : peerList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, linkedChatId, currentUserId]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'delete_all' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(peerNames)[0]),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, peerNames, linkedChatId, currentUserId]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'ban' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(peerNames)[0])),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, messageIds, peerList, peerNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const filterMessageIdByPeerId = useLastCallback((peerIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    const global = getGlobal();\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(global, chat.id, msgId);\n      return sender && peerIds.includes(sender.id);\n    });\n  });\n\n  const handleReportSpam = useLastCallback((userMessagesMap: Record<string, number[]>) => {\n    Object.entries(userMessagesMap).forEach(([userId, messageIdList]) => {\n      if (messageIdList.length) {\n        reportChannelSpam({\n          participantId: userId,\n          chatId: chat!.id,\n          messageIds: messageIdList,\n        });\n      }\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteAllPeerMessages = useLastCallback((peerIdList: string[]) => {\n    if (!chat) return;\n    peerIdList.forEach((peerId) => {\n      deleteParticipantHistory({ peerId, chatId: chat.id });\n    });\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageList = useLastCallback(() => {\n    if (!chat || !messageIds) return;\n\n    onConfirm?.();\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (shouldShowOption) {\n      if (peerIdsToReportSpam) {\n        const global = getGlobal();\n        const peerIdList = peerIdsToReportSpam.filter((option) => !Number.isNaN(Number(option)));\n        const messageList = messageIds!.reduce<Record<string, number[]>>((acc, msgId) => {\n          const peer = selectSenderFromMessage(global, chat.id, msgId);\n          if (peer && peerIdList.includes(peer.id)) {\n            if (!acc[peer.id]) {\n              acc[peer.id] = [];\n            }\n            acc[peer.id].push(Number(msgId));\n          }\n          return acc;\n        }, {});\n\n        handleReportSpam(messageList);\n      }\n\n      if (peerIdsToDeleteAll) {\n        const peerIdList = peerIdsToDeleteAll.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteAllPeerMessages(peerIdList);\n      }\n\n      if (peerIdsToBan && !havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteMember(peerIdList);\n        const filteredMessageIdList = filterMessageIdByPeerId(peerIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (peerIdsToBan && havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleUpdateChatMemberBannedRights(peerIdList);\n      }\n\n      if (!peerIdsToReportSpam || !peerIdsToDeleteAll || !peerIdsToBan) {\n        deleteMessages({ messageIds, shouldDeleteForAll });\n      }\n    } else {\n      deleteMessages({ messageIds, shouldDeleteForAll });\n    }\n\n    closeDeleteMessageModal();\n    exitMessageSelectMode();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setPeerIdsToReportSpam(undefined);\n      setPeerIdsToDeleteAll(undefined);\n      setPeerIdsToBan(undefined);\n      setShouldDeleteForAll(true);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div\n        className={shouldShowOption && styles.container}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowOption && (\n          <AvatarList\n            size=\"small\"\n            peers={peerList}\n          />\n        )}\n        <h3 className={buildClassName(shouldShowOption ? styles.title : styles.singleTitle)}>\n          {oldLang('Chat.DeleteMessagesConfirmation', messageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={setPeerIdsToReportSpam}\n          selected={peerIdsToReportSpam}\n          nestedCheckbox={messageIds && peerList.length >= 2}\n        />\n        {peerListToDeleteAll?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_DELETE_OPTION}\n            onChange={setPeerIdsToDeleteAll}\n            selected={peerIdsToDeleteAll}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n        {peerListToBan?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={setPeerIdsToBan}\n            selected={peerIdsToBan}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', peerList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageList}\n      className={styles.root}\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {shouldShowOption && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              peerIdsToBan && canBanUsers ? (\n                <ListItem\n                  narrow\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(canDeleteForAll || chatBot || !shouldShowOption) && (\n          <>\n            <p>{messageIds && messageIds.length > 1\n              ? lang('AreYouSureDeleteFewMessages') : lang('AreYouSureDeleteSingleMessage')}\n            </p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{oldLang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{oldLang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        {canDeleteForAll && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={contactName ? renderText(oldLang('DeleteMessagesOptionAlso', contactName))\n              : oldLang('Conversation.DeleteMessagesForEveryone')}\n            checked={shouldDeleteForAll}\n            onCheck={setShouldDeleteForAll}\n          />\n        )}\n        <div className={buildClassName('dialog-buttons',\n          isMediaDropdownOpen ? styles.dialogButtons : styles.proceedButtons)}\n        >\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageList}>\n            {shouldShowOption ? oldLang('DeleteProceedBtn') : lang('Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const messageIds = deleteMessageModal?.messageIds;\n    const chatId = deleteMessageModal?.chatId;\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global, messageIds);\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const linkedChatId = chatFullInfo?.linkedChatId;\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const isSchedule = deleteMessageModal?.isSchedule;\n    const onConfirm = deleteMessageModal?.onConfirm;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const chatBot = Boolean(chat && !isSystemBot(chat.id) && selectBot(global, chat.id));\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && getHasAdminRight(chat, 'banUsers');\n    const isCreator = chat?.isCreator;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && (isChatSuperGroup(chat) || isChannel);\n\n    return {\n      chat,\n      isChannel,\n      isSuperGroup,\n      messageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      canBanUsers,\n      linkedChatId,\n      isSchedule,\n      isCreator,\n      onConfirm,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(useMemo(() => (isActive ? {\n    'Mod+C': handleCopy,\n  } : undefined), [isActive]));\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages, selectCurrentChat,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  chat,\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n    reportMessages,\n    openDeleteMessageModal,\n  } = getActions();\n  const lang = useOldLang();\n\n  useCopySelectedMessages(isActive);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    openDeleteMessageModal({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n      isSchedule,\n    });\n  });\n\n  useEffect(() => {\n    return isActive && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? handleDelete : undefined,\n        onDelete: canDeleteMessages ? handleDelete : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, handleDelete, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const prevSelectedMessagesCount = usePreviousDeprecated(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const openMessageReport = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    reportMessages({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n    });\n    exitMessageSelectMode();\n  });\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <Icon name={icon} />\n      </div>\n    );\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"MessageSelectToolbar-inner\">\n        <Button\n          color=\"translucent\"\n          round\n          onClick={handleExitMessageSelectMode}\n          ariaLabel=\"Exit select mode\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n          {formattedMessagesCount}\n        </span>\n\n        {Boolean(selectedMessagesCount) && (\n          <div className=\"MessageSelectToolbar-actions\">\n            {messageListType !== 'scheduled' && canForwardMessages && (\n              renderButton(\n                'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n              )\n            )}\n            {canReportMessages && (\n              renderButton('flag', lang('Conversation.ReportMessages'), openMessageReport)\n            )}\n            {canDownloadMessages && !hasProtectedMessage && (\n              renderButton('download', lang('lng_media_download'), handleDownload)\n            )}\n            {!hasProtectedMessage && (\n              renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n            )}\n            {canDeleteMessages && (\n              renderButton('delete', lang('EditAdminGroupDeleteMessages'), handleDelete, true)\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const chat = selectCurrentChat(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall || tabState.reportModal\n      || tabState.deleteMessageModal);\n\n    return {\n      chat,\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport Icon from '../common/icons/Icon';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useOldLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <Icon name=\"heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <Icon name=\"heart-outline\" className=\"status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const endHeavyAnimation = beginHeavyAnimation();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      endHeavyAnimation();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PeerChip\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        clickArg={modal?.peerId}\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\nimport type { SearchResultKey } from '../../../../util/keys/searchResultKey';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: SearchResultKey[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Audio\n              key={message.id}\n              theme={theme}\n              message={message}\n              origin={AudioOrigin.Search}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              date={message.date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n              isDownloading={getIsDownloading(activeDownloads, media)}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  withOpenAppButton?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  withOpenAppButton,\n  onClick,\n}) => {\n  const { requestMainWebView } = getActions();\n  const oldLang = useOldLang();\n\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useLastCallback(() => {\n    onClick(chatId);\n  });\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chatId,\n      peerId: chatId,\n      theme,\n    });\n  });\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {withOpenAppButton && user?.hasMainMiniApp && (\n        <Button\n          className=\"ChatBadge miniapp\"\n          pill\n          fluid\n          size=\"tiny\"\n          onClick={handleOpenApp}\n        >\n          {oldLang('BotOpen')}\n        </Button>\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\n\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst BotAppResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  foundIds,\n  recentBotIds,\n}) => {\n  const {\n    searchPopularBotApps,\n    openChatWithInfo,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n    const recentSet = new Set(recentBotIds);\n    const withoutRecent = foundIds.filter((id) => !recentSet.has(id));\n\n    return filterPeersByQuery({ ids: withoutRecent, query: searchQuery, type: 'user' });\n  }, [foundIds, recentBotIds, searchQuery]);\n\n  const handleChatClick = useLastCallback((id: string) => {\n    openChatWithInfo({ id, shouldReplaceHistory: true });\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll\"\n        items={canRenderContents ? filteredFoundIds : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && !filteredFoundIds?.length && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && !searchQuery && Boolean(recentBotIds?.length) && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">\n              {recentBotIds.length > LESS_LIST_ITEMS_AMOUNT && (\n                <Link className=\"Link\" onClick={handleToggleShowMoreMine}>\n                  {lang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n                </Link>\n              )}\n              {lang('SearchAppsMine')}\n            </h3>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_LIST_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n        {canRenderContents && filteredFoundIds?.length && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">{lang('SearchAppsPopular')}</h3>\n            {filteredFoundIds.map((id) => {\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(BotAppResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: OldLangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <Icon name=\"calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectTopic } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const topic = selectTopic(global, chatId, topicId);\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              className=\"clear-recent-chats\"\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel={lang('Clear')}\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <Icon name=\"close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              withOpenAppButton\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageSearchContext } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  isChatChannel,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PeerChip from '../../common/PeerChip';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Transition from '../../ui/Transition';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nimport './ChatResults.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal,\n    setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n  const [searchContext, setSearchContext] = useState<ApiMessageSearchContext>('all');\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n          context: searchContext,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery, searchContext]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  function getSearchContextCaption(context: ApiMessageSearchContext) {\n    if (context === 'users') return lang('PrivateChatsSearchContext');\n    if (context === 'groups') return lang('GroupChatsSearchContext');\n    if (context === 'channels') return lang('ChannelsSearchContext');\n    return lang('AllChatsSearchContext');\n  }\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.chatResultsContextMenu .bubble'));\n  const getTriggerElement = useLastCallback(() => ref.current!.querySelector('.menuTrigger'));\n\n  const handleClickContext = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const itemPlaceholderClass = buildClassName('icon', 'iconPlaceholder');\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"chatResultsContextMenu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          <MenuItem\n            icon={searchContext === 'all' ? 'check' : undefined}\n            customIcon={searchContext !== 'all' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('all')}\n          >\n            {getSearchContextCaption('all')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'users' ? 'check' : undefined}\n            customIcon={searchContext !== 'users' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('users')}\n          >\n            {getSearchContextCaption('users')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'groups' ? 'check' : undefined}\n            customIcon={searchContext !== 'groups' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('groups')}\n          >\n            {getSearchContextCaption('groups')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'channels' ? 'check' : undefined}\n            customIcon={searchContext !== 'channels' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('channels')}\n          >\n            {getSearchContextCaption('channels')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterPeersByQuery({ ids: filteredChatIds, query: searchQuery, type: 'chat' });\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterPeersByQuery({\n      ids: contactIdsWithMe, query: searchQuery, type: 'user',\n    });\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    searchMessagesGlobal({\n      type: isChannelList ? 'channels' : 'text',\n      context: searchContext,\n      shouldResetResultsByType: true,\n      shouldCheckFetchingMessagesStatus: true,\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [searchContext]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(oldLang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const actualFoundIds = foundMessages;\n\n  const nothingFound = searchContext === 'all' && fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !actualFoundIds.length;\n  const isMessagesFetching = fetchingStatus?.messages;\n\n  if (!searchQuery && !searchDate && !isChannelList) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  const shouldRenderMessagesSection = searchContext === 'all' ? Boolean(actualFoundIds.length) : true;\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch--content custom-scroll\"\n      items={actualFoundIds}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={oldLang('ChatList.Search.NoResults')}\n          description={oldLang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={oldLang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PeerChip\n              peerId={id}\n              className=\"left-search-local-suggestion\"\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {oldLang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {oldLang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {oldLang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      <div className=\"menuOwner\" ref={ref}>\n        {renderContextMenu()}\n        {shouldRenderMessagesSection && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n              {!isChannelList && (\n                <Link className=\"Link menuTrigger dropDownLink\" onClick={handleClickContext}>\n                  {lang('SearchContextCaption', {\n                    type: getSearchContextCaption(searchContext),\n                  }, {\n                    withNodes: true,\n                  })}\n\n                  <Transition\n                    name=\"fade\"\n                    shouldCleanup\n                    activeKey={Number(isMessagesFetching)}\n                    className=\"iconContainer\"\n                    slideClassName=\"iconContainerSlide\"\n                  >\n                    {isMessagesFetching && (<Loading />)}\n                    {!isMessagesFetching && <Icon name=\"down\" />}\n                  </Transition>\n                </Link>\n              )}\n              {oldLang('SearchMessages')}\n            </h3>\n            {actualFoundIds.map(renderFoundMessage)}\n          </div>\n        )}\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n      const message = globalMessagesByChatId[chatId]?.byId[messageId];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              key={message.date}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Document\n              document={getMessageDocument(message)!}\n              message={message}\n              withDate\n              datetime={message.date}\n              smaller\n              sender={getSenderName(lang, message, chatsById, usersById)}\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            key={message.id}\n          >\n            <WebLink\n              key={message.id}\n              message={message}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              isProtected={isChatProtected || message.isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content LeftSearch--media\">\n      <InfiniteScroll\n        className={classNames}\n        items={canRenderContents ? foundMessages : undefined}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { RegularLangKey } from '../../../types/language';\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport BotAppResults from './BotAppResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\ntype TabInfo = {\n  type: GlobalSearchContent;\n  key: RegularLangKey;\n};\n\nconst TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabChats' },\n  { type: GlobalSearchContent.ChannelList, key: 'SearchTabChannels' },\n  { type: GlobalSearchContent.BotApps, key: 'SearchTabApps' },\n  { type: GlobalSearchContent.Media, key: 'SearchTabMedia' },\n  { type: GlobalSearchContent.Links, key: 'SearchTabLinks' },\n  { type: GlobalSearchContent.Files, key: 'SearchTabFiles' },\n  { type: GlobalSearchContent.Music, key: 'SearchTabMusic' },\n  { type: GlobalSearchContent.Voice, key: 'SearchTabVoice' },\n];\n\nconst CHAT_TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabMessages' },\n  ...TABS.slice(3), // Skip ChatList, ChannelList and BotApps, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = useMemo(() => {\n    const arr = chatId ? CHAT_TABS : TABS;\n    return arr.map((tab) => ({\n      ...tab,\n      title: lang(tab.key),\n    }));\n  }, [chatId, lang]);\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.BotApps:\n              return (\n                <BotAppResults\n                  key=\"botApps\"\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterPeersByQuery({ ids: chatIds, query: chatFilter, type: 'chat' }),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <PeerPicker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        withDefaultPadding\n        withPeerTypes\n        allowMultiple\n        itemInputType=\"checkbox\"\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './FolderPickerMenu.module.scss';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport { IAnchorPosition } from '../../../types';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { getIsMobile } from '../../../hooks/useAppLayout';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport buildClassName from '../../../util/buildClassName';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  buttonRef: RefObject<HTMLDivElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n  handleContextMenuHide: () => void;\n  contextMenuAnchor?:IAnchorPosition;\n  position?:IAnchorPosition\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst FolderPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  buttonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n  contextMenuAnchor,\n  handleContextMenuHide,\n  position,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n  const FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\n  const LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\n  const REACTION_SELECTOR_WIDTH = 16.375 * REM;\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n\n const shouldUseFullPicker = true;\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [ storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: false,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n  function getTriggerElement(): HTMLElement | null {\n    return document.querySelector('body');\n  }\n  \n  function getRootElement() {\n    return document.querySelector('body');\n  }\n  \n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        ref={menuRef}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        getLayout={getLayout}\n        className={buildClassName(styles.menu, 'ReactionPicker')}\n        anchor={renderingPosition}\n        onClose={onClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        withPortal\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n      >\n        <CustomEmojiPicker\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n          isFolderPicker\n        />\n\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(FolderPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"QiKB9h_W\",\"menuContent\":\"NEDRZV_5\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport { ApiSticker, type ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport Icon from '../../../common/icons/Icon';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport FolderPickerMenu from '../../main/FolderPickerMenu';\nimport { IAnchorPosition } from '../../../../types';\nimport EMOJI_REGEX from \"../../../../lib/twemojiRegex\";\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n  handleSaveFilter: () => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n  \n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n    // eslint-disable-next-line no-null/no-null\n    const iconRef = useRef<HTMLDivElement>(null);\n  const {\n    contextMenuAnchor, handleContextMenu, handleBeforeContextMenu, handleContextMenuClose,\n    handleContextMenuHide, isContextMenuOpen,\n  } = useContextMenuHandlers(iconRef, false);\n\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? CUSTOM_PEER_INCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key)\n      : CUSTOM_PEER_EXCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.type}\n        className=\"settings-folders-list-item mb-1\"\n        narrow\n        inactive\n      >\n        <PrivateChatInfo\n          avatarSize=\"small\"\n          customPeer={chatType}\n        />\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            className=\"settings-folders-list-item\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n            icon=\"down\"\n          >\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n  const handleEmojiClick = useCallback((sticker:ApiSticker) => {\n    // @ts-ignore\n    const isFolderIcon = sticker.stickerSetInfo?.shortName === 'folder_emojis' && Boolean(sticker.emoji);\n    \n    dispatch({\n      type: 'setFolderIcon',\n      payload: {\n        id: sticker.id,\n        newEmoji: sticker.emoji,\n        isFolderIcon:isFolderIcon,\n      },\n    });\n    \n  }, [dispatch]);\n  const [position ,setPosition] = useState<IAnchorPosition | undefined>(undefined);\n  const handleOpenPicker = useLastCallback((e: React.MouseEvent) => {\n    const bound = iconRef.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    handleContextMenu(e);\n    setPosition({\n      x:bound.x,\n      y:bound.y,\n    })\n  })\nfunction removeLastEmojiIfAny(str: string): string {\n  const originalLength = str.length;\n  const trimmed = str.trimEnd(); \n  if (!trimmed) {\n    return str; \n  }\n\n  let lastIndex = -1;\n  let lastMatch = '';\n  EMOJI_REGEX.lastIndex = 0; \n\n  let match;\n    while ((match = EMOJI_REGEX.exec(trimmed)) !== null) {\n    lastIndex = match.index;\n    lastMatch = match[0];\n  }\n\n  \n  if (lastIndex === -1) {\n    return str;\n  }\n\n  \n  if (lastIndex + lastMatch.length === trimmed.length) {\n  \n    const diff = originalLength - trimmed.length;\n\n  \n    let startPos = lastIndex + diff;\n    let endPos = startPos + lastMatch.length;\n\n  \n    if (startPos > 0 && str[startPos - 1] === ' ') {\n      startPos--;\n    }\n\n    return str.slice(0, startPos) + str.slice(endPos);\n  }\n\n  \n  return str;\n}\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIconWithPreview\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n        <FolderPickerMenu\n                buttonRef={iconRef}\n                isOpen={isContextMenuOpen}\n                onEmojiStatusSelect={(sticker) => handleEmojiClick(sticker)}\n                onClose={handleContextMenuClose}\n                handleContextMenuHide={handleContextMenuHide}\n                contextMenuAnchor={contextMenuAnchor}\n                position={position}\n                \n              />\n           \n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={removeLastEmojiIfAny(state.folder.title.text)}\n            onChange={(e) => dispatch({ type: 'setTitle', payload: e.currentTarget.value })}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n            withEmojiPicker={true} \n            onEmojiClick={handleOpenPicker}\n            buttonRef={iconRef}\n            customEmoji={state.folder.customEmoji || state.folder.emoticon}\n            isCustomEmoji={!!state.folder.customEmoji}\n            \n          />\n  \n      \n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary\"\n            icon=\"add\"\n            narrow\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item\"\n              icon=\"link\"\n              narrow\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePreviousDeprecated(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: lang('FilterAllChats'),\n            entities: [],\n          },\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n        noTitleAnimations: folder.noTitleAnimations,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIconWithPreview\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"settings-button with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <Icon name=\"add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {renderTextWithEntities({\n                        text: folder.title.text,\n                        entities: folder.title.entities,\n                        noCustomEmojiPlayback: folder.noTitleAnimations,\n                      })}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                    {isBlocked && <Icon name=\"lock-badge\" className=\"settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <Icon name=\"link\" className=\"mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                  </span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Icon from '../../../common/icons/Icon';\nimport LinkField from '../../../common/LinkField';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  folder?: ApiChatFolder;\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  folder,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (folder?.includedChatIds || []).concat(folder?.pinnedChatIds || []);\n  }, [folder?.includedChatIds, folder?.pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        {folder && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('FolderLinkTitleDescription', {\n              folder: renderTextWithEntities({\n                text: folder.title.text,\n                entities: folder.title.entities,\n                noCustomEmojiPlayback: folder.noTitleAnimations,\n              }),\n              chats: lang('FolderLinkTitleDescriptionChats', { count: chatsCount }, { pluralValue: chatsCount }),\n            }, {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n          </p>\n        )}\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? oldLang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-picker\">\n        <PeerPicker\n          itemIds={itemIds}\n          lockedUnselectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      folder,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n          handleSaveFilter={handleSaveFilter}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n};\n\nfunction PrivacyLockedOption({ label }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={styles.contactsAndPremiumOptionTitle}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_and_premium_option-title\":\"TGUdGos3\",\"contactsAndPremiumOptionTitle\":\"TGUdGos3\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { selectIsCurrentUserPremium, selectNewNoncontactPeersRequirePremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  shouldNewNonContactPeersRequirePremium,\n  isCurrentUserPremium,\n  onReset,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const lang = useOldLang();\n\n  const canChange = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChange ? (\n          lang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption label={lang('PrivacyMessagesContactsAndPremium')} />\n        ),\n        hidden: !canChange,\n      },\n    ];\n  }, [lang, canChange]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({ shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium' });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={shouldNewNonContactPeersRequirePremium ? 'contacts_and_premium' : 'everybody'}\n        />\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Privacy.Messages.SectionFooter')}\n        </p>\n      </div>\n      {!canChange && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p className=\"settings-item-description-larger\">{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', {\n      limit: lang('FileSizeMB', { count: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] }),\n    });\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettingsContacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsPrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsGroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsChannels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadFilesTitle'),\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive, prevLanguage]) => {\n    if (prevIsActive === isActive && prevLanguage?.find((option) => option === language)) return;\n    const [selected] = partition(displayedOptionList, (option) => doNotTranslate.includes(option.value));\n    setDisplayedOptions([...selected.map((option) => option.value)]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, displayedOptionList]);\n\n  const handleChange = useLastCallback((newSelectedIds: string[]) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      doNotTranslate: newSelectedIds,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValues={displayedOptions}\n          onSelectedValuesChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable\n          allowMultiple\n          withDefaultPadding\n          itemInputType=\"checkbox\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePreviousDeprecated(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <div className=\"settings-input\">\n            <UsernameInput\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n          </div>\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON, IS_SNAP_EFFECT_SUPPORTED, IS_WAVE_TRANSFORM_SUPPORTED } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption, requestWave } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const snapButtonRef = useRef<HTMLDivElement>(null);\n  const [isSnapButtonAnimating, setIsSnapButtonAnimating] = useState(false);\n\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  const handleRequestWave = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    requestWave({ startX: e.clientX, startY: e.clientY });\n  });\n\n  const handleRequestConfetti = useLastCallback(() => {\n    requestConfetti({ withStars: true });\n  });\n\n  const handleSnap = useLastCallback(() => {\n    const button = snapButtonRef.current;\n    if (!button) return;\n\n    if (animateSnap(button)) {\n      setIsSnapButtonAnimating(true);\n      // Manual reset for debug\n      setTimeout(() => {\n        setIsSnapButtonAnimating(false);\n      }, 1500);\n    }\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          onClick={handleRequestConfetti}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n        <ListItem\n          onClick={handleRequestWave}\n          icon=\"story-expired\"\n          disabled={!IS_WAVE_TRANSFORM_SUPPORTED}\n        >\n          <div className=\"title\">Start wave</div>\n        </ListItem>\n        <ListItem\n          ref={snapButtonRef}\n          onClick={handleSnap}\n          icon=\"spoiler\"\n          disabled={!IS_SNAP_EFFECT_SUPPORTED}\n          style={isSnapButtonAnimating ? 'visibility: hidden' : ''}\n        >\n          <div className=\"title\">Vaporize this button</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const timeFormatOptions: IRadioOption[] = [{\n    label: lang('SettingsTimeFormat12'),\n    value: '12h',\n  }, {\n    label: lang('SettingsTimeFormat24'),\n    value: '24h',\n  }];\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChatAppearanceLight'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChatAppearanceDark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChatAppearanceSystem'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('SettingsSendEnter'), subLabel: lang('SettingsSendEnterDescription') },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'SettingsSendCmdenter' : 'SettingsSendCtrlenter'),\n      subLabel: lang('SettingsSendPlusEnterDescription'),\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Settings')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('SettingsTray')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsTimeFormat')}\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={timeFormatOptions}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SettingsKeyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransitionDeprecated(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransitionDeprecated(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{oldLang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{oldLang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{oldLang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{oldLang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{oldLang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{oldLang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{oldLang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{oldLang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{oldLang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{oldLang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{oldLang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{oldLang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{oldLang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{oldLang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{oldLang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{oldLang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{oldLang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{oldLang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyGifts:\n        return <h3>{lang('PrivacyGifts')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{oldLang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{oldLang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{oldLang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{oldLang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{oldLang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return <h3>{oldLang('AlwaysShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return <h3>{oldLang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{oldLang('AlwaysAllow')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{oldLang('NeverAllow')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('MenuAnimations')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{oldLang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{oldLang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{oldLang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{oldLang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{oldLang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{oldLang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{oldLang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{oldLang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{oldLang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{oldLang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{oldLang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{oldLang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{oldLang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{oldLang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{oldLang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{oldLang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {oldLang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {oldLang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {oldLang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={oldLang('lng_settings_information')}\n            >\n              <Icon name=\"edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{oldLang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={oldLang('lng_sure_logout')}\n        confirmLabel={oldLang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiLanguage } from '../../../api/types';\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  languages?: ApiLanguage[];\n} & Pick<ISettings, | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n    });\n  });\n\n  const options = useMemo(() => {\n    if (!languages) return undefined;\n    const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n    const shortLangCode = currentLangCode.substr(0, 2);\n\n    return languages.map(({ langCode, nativeName, name }) => ({\n      value: langCode,\n      label: nativeName,\n      subLabel: name,\n      isLoading: langCode === selectedLanguage && isLoading,\n    } satisfies ItemPickerOption)).sort((a) => {\n      return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n    });\n  }, [isLoading, languages, selectedLanguage]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              narrow\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        {options ? (\n          <ItemPicker\n            items={options}\n            selectedValue={selectedLanguage}\n            forceRenderAllItems\n            onSelectedValueChange={handleChange}\n            itemInputType=\"radio\"\n            className=\"settings-picker\"\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n    const languages = global.settings.languages;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStarsAmount } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport { formatStarsAmount } from '../../../global/helpers/payments';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: ApiStarsAmount;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openGiftRecipientPicker,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu self-profile\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"settings\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('TelegramGeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('MenuAnimations')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.languageInfo.nativeName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('MenuStickers')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"gold\" size=\"big\" />}\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openStarsBalanceModal({})}\n        >\n          {lang('MenuStars')}\n          {Boolean(starsBalance) && (\n            <span className=\"settings-item__current-value\">\n              {formatStarsAmount(lang, starsBalance)}\n            </span>\n          )}\n        </ListItem>\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openGiftRecipientPicker()}\n          >\n            {lang('MenuSendGift')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          narrow\n          onClick={openSupportDialog}\n        >\n          {lang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {lang('MenuTelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {lang('MenuPrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={lang('OK')}\n        title={lang('AskAQuestion')}\n        textParts={lang('MenuAskText', undefined, { withNodes: true, renderTextFilters: ['br'] })}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('NotificationsWeb')}\n        </h4>\n        <Checkbox\n          label={lang('NotificationsWeb')}\n          subLabel={lang(hasWebNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label={lang('NotificationsOffline')}\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          subLabel={areOfflineNotificationsSupported\n            ? lang(hasPushNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')\n            : lang('SettingsOfflineNotificationUnsupported')}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label={lang('NotificationsSound')}\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          subLabel={lang(hasPrivateChatsNotifications\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          subLabel={lang(hasPrivateChatsMessagePreview\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\nimport type { RegularLangKey } from '../../../types/language';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED, IS_SNAP_EFFECT_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [RegularLangKey, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: RegularLangKey;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderMedium',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderCustom',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['SettingsPerformanceInterfaceAnimations', [\n    { key: 'pageTransitions', label: 'SettingsPerformancePageTransitions' },\n    { key: 'messageSendingAnimations', label: 'SettingsPerformanceSending' },\n    { key: 'mediaViewerAnimations', label: 'SettingsPerformanceMediaViewer' },\n    { key: 'messageComposerAnimations', label: 'SettingsPerformanceComposer' },\n    { key: 'contextMenuAnimations', label: 'SettingsPerformanceContextAnimation' },\n    { key: 'contextMenuBlur', label: 'SettingsPerformanceContextBlur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'SettingsPerformanceRightColumn' },\n    { key: 'snapEffect', label: 'SettingsPerformanceThanos' },\n  ]],\n  ['SettingsPerformanceStickers', [\n    { key: 'animatedEmoji', label: 'SettingsPerformanceAnimatedEmoji' },\n    { key: 'loopAnimatedStickers', label: 'SettingsPerformanceLoopStickers' },\n    { key: 'reactionEffects', label: 'SettingsPerformanceReactionEffects' },\n    { key: 'stickerEffects', label: 'SettingsPerformanceStickerEffects' },\n  ]],\n  ['SettingsPerformanceMediaAutoplay', [\n    { key: 'autoplayGifs', label: 'SettingsPerformanceAutoplayGif' },\n    { key: 'autoplayVideos', label: 'SettingsPerformanceAutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n\n  const animationLevelOptions = useMemo(() => {\n    const options = animationLevelState === ANIMATION_LEVEL_CUSTOM\n      ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n      : ANIMATION_LEVEL_OPTIONS;\n\n    return options.map((option) => lang(option));\n  }, [animationLevelState, lang]);\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderTitle')}\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderSubtitle')}\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => {\n                    if (key === 'snapEffect' && !IS_SNAP_EFFECT_SUPPORTED) return undefined;\n                    return (\n                      <Checkbox\n                        key={key}\n                        name={key}\n                        checked={performanceSettings[key]}\n                        label={lang(label)}\n                        disabled={disabled}\n                        onChange={handlePropertyChange}\n                      />\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    if (!setting) return oldLang('Loading');\n\n    const { visibility, shouldAllowPremium, botsPrivacy } = setting;\n\n    const isAllowBots = botsPrivacy === 'allow';\n    const isVisibilityEverybody = visibility === 'everybody';\n    const shouldShowBotsString = isAllowBots && !isVisibilityEverybody;\n\n    const blockCount = setting.blockChatIds.length + setting.blockUserIds.length;\n    const allowCount = setting.allowChatIds.length + setting.allowUserIds.length;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount && !isVisibilityEverybody) total.push(`+${allowCount}`);\n\n    const botPrivacyString = shouldShowBotsString ? lang('PrivacyValueBots') : '';\n    const totalString = lang.conjunction(total);\n\n    const exceptionString = [botPrivacyString, totalString].filter(Boolean).join(' ');\n    if (shouldShowBotsString && !isVisibilityEverybody) return exceptionString;\n\n    if (shouldAllowPremium) {\n      return oldLang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${oldLang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${oldLang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${oldLang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {oldLang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-item\">\n              <span className=\"title\">{oldLang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {oldLang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {oldLang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {oldLang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{oldLang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGifts)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{lang('PrivacyGifts')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.gifts)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldNewNonContactPeersRequirePremium\n                ? oldLang('PrivacyMessagesContactsAndPremium')\n                : oldLang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={oldLang('lng_settings_sensitive_disable_filtering')}\n            subLabel={oldLang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={oldLang('ArchiveAndMute')}\n            subLabel={oldLang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={oldLang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle, shouldNewNonContactPeersRequirePremium,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterPeersByQuery({ ids: availableContactIds, query: search, type: 'user' })\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <Icon name=\"add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../api/types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyGifts:\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return 'gifts';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../api/types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        narrow\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          narrow\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiPrivacySettings, BotsPrivacyType } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PContacts')} />\n        ) : (\n          oldLang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PNobody')} />\n        ) : (\n          oldLang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [oldLang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsInfo');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? oldLang('PrivacyPhoneInfo') : oldLang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return oldLang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return oldLang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return oldLang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return oldLang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return oldLang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return oldLang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return oldLang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return oldLang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return oldLang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen]);\n\n  const prepareSubtitle = useLastCallback(\n    (userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean, botsPrivacy?: BotsPrivacyType) => {\n      const userIdsCount = userIds?.length || 0;\n      const chatIdsCount = chatIds?.length || 0;\n      const isAllowBots = botsPrivacy === 'allow';\n      const hasPeers = userIdsCount || chatIdsCount;\n\n      if (!hasPeers && !isAllowBots) {\n        return shouldAllowPremium ? oldLang('PrivacyPremium') : oldLang('EditAdminAddUsers');\n      } else if (shouldAllowPremium) {\n        return oldLang('ContactsAndPremium');\n      }\n\n      const userCountString = userIdsCount > 0 ? oldLang('Users', userIdsCount) : undefined;\n      const chatCountString = chatIdsCount > 0 ? oldLang('Chats', chatIdsCount) : undefined;\n\n      const botPrivacyString = isAllowBots ? lang('PrivacyValueBots') : '';\n      const peersString = lang.conjunction([userCountString, chatCountString].filter(Boolean));\n\n      return [botPrivacyString, peersString].filter(Boolean).join(' ');\n    },\n  );\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(\n      privacy?.allowUserIds,\n      privacy?.allowChatIds,\n      privacy?.shouldAllowPremium,\n      privacy?.botsPrivacy,\n    );\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyGifts:\n        primaryPrivacy = privacy.gifts;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  withMiniAppsCategory?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  withMiniAppsCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const customPeerBots : UniqueCustomPeer = useMemo(() => {\n    return {\n      isCustomPeer: true,\n      type: 'bots',\n      title: lang('PrivacyValueBots'),\n      avatarIcon: 'bots',\n      isAvatarSquare: true,\n      peerColorId: 6,\n    };\n  }, [lang]);\n\n  const miniAppsCategory = useMemo(() => {\n    return [customPeerBots];\n  }, [customPeerBots]);\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n    if (settings.shouldAllowPremium) { return [CUSTOM_PEER_PREMIUM.type]; }\n    if (settings.botsPrivacy === 'allow' && isAllowList) { return [customPeerBots.type]; }\n    return [];\n  }, [settings, isAllowList, customPeerBots]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return chatId !== currentUserId && chatId !== SERVICE_NOTIFICATIONS_USER_ID && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterPeersByQuery({ ids: chatIds, query: searchQuery });\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...chatIds,\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, searchQuery, currentUserId]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n      botsPrivacy: (!withMiniAppsCategory) ? 'none'\n        : (newSelectedCategoryTypes.includes(customPeerBots.type) ? 'allow' : 'disallow'),\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [\n    isAllowList,\n    withMiniAppsCategory,\n    newSelectedCategoryTypes,\n    newSelectedContactIds,\n    onScreenSelect,\n    screen,\n    customPeerBots,\n  ]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function getCustomCategory() {\n    if (withPremiumCategory) return PREMIUM_CATEGORY;\n    if (withMiniAppsCategory && isAllowList) return miniAppsCategory;\n    return undefined;\n  }\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <PeerPicker\n        categories={getCustomCategory()}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? oldLang('AlwaysAllowPlaceholder') : oldLang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        itemInputType=\"checkbox\"\n        withDefaultPadding\n        withStatus\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? oldLang('AlwaysAllow') : oldLang('NeverAllow')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return privacy.gifts;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { type: 'emoji', emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n        withIcon\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji, selectTabState } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n  recoveryEmail: string;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n  recoveryEmail,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepAuth.ConfirmEmailDescription', recoveryEmail)}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const tabState = selectTabState(global);\n  const recoveryEmail = tabState.recoveryEmail;\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n    recoveryEmail,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('RecoveryEmailSubtitle')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  errorKey,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          placeholder={oldLang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={oldLang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_GIFTS_SCREENS = [\n  SettingsScreens.PrivacyGiftsAllowedContacts,\n  SettingsScreens.PrivacyGiftsDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGifts]: PRIVACY_GIFTS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyGifts:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            withMiniAppsCategory={currentScreen === SettingsScreens.PrivacyGiftsAllowedContacts}\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { sortUserIds } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterPeersByQuery({ ids: contactIds, query: filter, type: 'user' });\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <Icon name=\"add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { isUserBot } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds\n      ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n          withDefaultPadding\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <Icon name=\"arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport Icon from '../common/icons/Icon';\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransitionDeprecated(!isForumPanelOpen);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransitionDeprecated(\n    isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY,\n  );\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatFolderModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID)\n      .map((folderId) => {\n        const folder = foldersById ? foldersById[folderId] : undefined;\n        const label = folder ? renderTextWithEntities({\n          text: folder.title.text,\n          entities: folder.title.entities,\n          noCustomEmojiPlayback: folder.noTitleAnimations,\n        }) : '';\n        return {\n          label,\n          value: String(folderId),\n        };\n      }) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className={buildClassName(styles.root, 'delete')}\n      contentClassName={styles.modalContent}\n      title={lang('FilterAddTo')}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <CheckboxGroup\n          options={folders}\n          selected={selectedFolderIds}\n          onChange={setSelectedFolderIds}\n        />\n      </div>\n      <div className={styles.footer}>\n        <div className=\"dialog-buttons\">\n          <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n            {lang('FilterAddTo')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EG5lPWY1\",\"root\":\"_fJBBCCE\",\"main\":\"heYMHiUt\",\"footer\":\"_jtqAaUU\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { IS_SAFARI } from '../../../../util/windowEnvironment';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) {\n            copyHtmlToClipboard(\n              clipboardText.join(''),\n              getMessageTextWithSpoilers(message, statefulContent)!,\n            );\n          }\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  getUserFullName,\n  groupStatetefulContent,\n  isUserId,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n  userFullName,\n  canGift,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers, openGiftModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const areReactionsPossible = message.areReactionsPossible;\n  const withReactions = (canShowReactionList && !noReactions) || areReactionsPossible;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const shouldShowGiftButton = isUserId(message.chatId)\n    && canGift && (isPremiumGift || isGiftCode || isStarGift || isStarGiftUnique);\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: message.chatId });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatetefulContent({ poll, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowGiftButton\n          && (\n            <MenuItem icon=\"gift\" onClick={handleGiftClick}>\n              {message?.isOutgoing ? lang('SendAnotherGift')\n                : lang('Conversation.ContextMenuSendGiftTo', userFullName)}\n            </MenuItem>\n          )}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type {\n  ActiveDownloads,\n  IAlbum,\n  IAnchorPosition,\n  MessageListType,\n  ThreadId,\n} from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  getUserFullName,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectCanForwardMessage,\n  selectCanGift,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst selection = window.getSelection();\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  onClose,\n  onCloseAnimationEnd,\n  userFullName,\n  canGift,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [canQuoteSelection, setCanQuoteSelection] = useState(false);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    setCanQuoteSelection(\n      selectionText.text.trim().length > 0\n      && message.content.text!.text!.includes(selectionText.text),\n    );\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    openDeleteMessageModal({\n      chatId: message.chatId,\n      messageIds,\n      isSchedule: messageListType === 'scheduled',\n    });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = canQuoteSelection && selectionRange ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({ fromChatId: message.chatId, messageId: message.id, quoteText });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className=\"ContextMenuContainer\">\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={canQuoteSelection}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n        userFullName={userFullName}\n        canGift={canGift}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const user = selectUser(global, message.chatId);\n    const userFullName = user && getUserFullName(user);\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const canForward = selectCanForwardMessage(global, message);\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const chatBot = chat && selectBot(global, chat.id);\n    const isBot = Boolean(chatBot);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isBot\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n     && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    const canGift = selectCanGift(global, message.chatId);\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n      userFullName,\n      canGift,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePreviousDeprecated(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePreviousDeprecated(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isSystemBot,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanGift,\n  selectCanManage,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsRightColumnShown,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canViewMonetization?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  botPrivacyPolicyUrl?: string;\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canDeleteChat?: boolean;\n  canReportChat?: boolean;\n  canGift?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  botPrivacyPolicyUrl,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canReportChat,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canDeleteChat,\n  canGift,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openMonetizationStatistics,\n    openBoostStatistics,\n    openGiftModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    openUrl,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransitionDeprecated(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    reportMessages({ chatId, messageIds: [] });\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: Number(threadId) });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleMonetizationClick = useLastCallback(() => {\n    openMonetizationStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(disableScrolling, []);\n\n  const lang = useOldLang();\n\n  const botButtons = useMemo(() => {\n    const commandButtons = botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n\n    const hasPrivacyCommand = botCommands?.some(({ command }) => command === 'privacy');\n\n    const privacyButton = isBot && (\n      <MenuItem\n        icon=\"privacy-policy\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          if (hasPrivacyCommand && !botPrivacyPolicyUrl) {\n            sendBotCommand({ command: '/privacy' });\n          } else {\n            openUrl({ url: botPrivacyPolicyUrl || lang('BotDefaultPrivacyPolicy') });\n          }\n          closeMenu();\n        }}\n      >\n        {lang('BotPrivacyPolicy')}\n      </MenuItem>\n    );\n\n    return [...commandButtons || [], privacyButton].filter(Boolean);\n  }, [botCommands, lang, botPrivacyPolicyUrl, isBot]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return lang('Delete');\n    }\n\n    if (isPrivate) {\n      return lang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return lang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, lang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {isChannel && canViewMonetization && (\n            <MenuItem\n              icon=\"cash-circle\"\n              onClick={handleMonetizationClick}\n            >\n              {lang('lng_channel_earn_title')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGift && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftClick}\n            >\n              {lang('ProfileSendAGift')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n    const canReportChat = isMainThread && !user && (isChatChannel(chat) || isChatGroup(chat));\n\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGift = selectCanGift(global, chatId);\n\n    const topic = selectTopic(global, chatId, threadId);\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canDeleteChat: getCanDeleteChat(chat),\n      canReportChat,\n      canGift,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      botPrivacyPolicyUrl: chatBot ? userFullInfo?.botInfo?.privacyPolicyUrl : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n    };\n  },\n)(HeaderMenuContainer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vv5ppXel\",\"active\":\"FVgqrSSK\",\"info\":\"DboxqiZd\",\"topRow\":\"Ymu2m1PR\",\"meta\":\"A2rsvUBm\",\"subtitle\":\"qUzmwaIn\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { getMessageSenderName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport MessageSummary from '../../common/MessageSummary';\n\nimport styles from './MiddleSearchResult.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  message: ApiMessage;\n  senderPeer?: ApiPeer;\n  messageChat?: ApiChat;\n  shouldShowChat?: boolean;\n  query?: string;\n  className?: string;\n  onClick: (message: ApiMessage) => void;\n};\n\nconst TRUNCATE_LENGTH = 200;\n\nconst MiddleSearchResult = ({\n  isActive,\n  message,\n  senderPeer,\n  messageChat,\n  shouldShowChat,\n  query,\n  className,\n  onClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n  const peer = shouldShowChat ? messageChat : senderPeer;\n\n  const senderName = shouldShowChat ? getMessageSenderName(lang, message.chatId, senderPeer) : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(message);\n  });\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={buildClassName(styles.root, isActive && styles.active, className)}\n      onClick={handleClick}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={peer}\n        text={hiddenForwardTitle}\n        size=\"medium\"\n      />\n      <div className={styles.info}>\n        <div className={styles.topRow}>\n          {(peer && <FullNameTitle peer={peer} withEmojiStatus />) || hiddenForwardTitle}\n          <LastMessageMeta className={styles.meta} message={message} />\n        </div>\n        <div className={styles.subtitle} dir=\"auto\">\n          {senderName && (\n            <>\n              <span className=\"sender-name\">{renderText(senderName)}</span>\n              <span className=\"colon\">:</span>\n            </>\n          )}\n          <MessageSummary message={message} highlight={query} truncateLength={TRUNCATE_LENGTH} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MiddleSearchResult);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FTMljUuX\",\"header\":\"OvmjSMwA\",\"active\":\"DEIUzXQd\",\"avatar\":\"mp1PmoMq\",\"input\":\"z2K8Q7ib\",\"mobile\":\"u0fb78AA\",\"focused\":\"dqF8dYNx\",\"withDropdown\":\"AqhBggrp\",\"adaptSearchBorders\":\"Q9RZQaTu\",\"dropdown\":\"MFGvbICO\",\"dropdownHidden\":\"Alee0CKy\",\"results\":\"RtfTOE72\",\"placeholder\":\"O1HoZFge\",\"separator\":\"_Yy43QLl\",\"savedTags\":\"BcvAfv1E\",\"wrap\":\"JkESCST6\",\"searchTags\":\"rO3pH3LI\",\"savedSearchTag\":\"qA4gov4D\",\"hash\":\"q5NOmUAM\",\"searchTypes\":\"rVYZG__K\",\"searchType\":\"nE1Xwoo7\",\"selectedType\":\"i29dP8iT\",\"footer\":\"jyS1l9yn\",\"keyboard-visible\":\"ao05jKHW\",\"keyboardVisible\":\"ao05jKHW\",\"counter\":\"NmmL_cO3\",\"mobileNavigation\":\"dLO1hlHU\",\"navigationButton\":\"Z4vLAlsu\",\"navigationDisabled\":\"IqA7R2xO\",\"jumpIn\":\"n9kXbTu6\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../../api/types';\nimport type {\n  CustomPeer, MiddleSearchParams, MiddleSearchType, ThreadId,\n} from '../../../types';\n\nimport { ANONYMOUS_USER_ID } from '../../../config';\nimport { requestMeasure, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getIsSavedDialog, getReactionKey, isSameReaction, isSystemBot,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { getSearchResultKey, parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport { useClickOutside } from '../../../hooks/events/useOutsideClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport SavedTagButton from '../message/reactions/SavedTagButton';\nimport MiddleSearchResult from './MiddleSearchResult';\n\nimport styles from './MiddleSearch.module.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  requestedQuery?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  savedTag?: ApiReaction;\n  totalCount?: number;\n  lastSearchQuery?: string;\n  foundIds?: SearchResultKey[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n  isSavedMessages?: boolean;\n  fetchingQuery?: string;\n  isHashtagQuery?: boolean;\n  searchType?: MiddleSearchType;\n  currentUserId?: string;\n};\n\nconst CHANNELS_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'channel-filled',\n  titleKey: 'SearchPublicPosts',\n};\nconst FOCUSED_SEARCH_TRIGGER_OFFSET = 5;\nconst HIDE_TIMEOUT = 200;\nconst RESULT_ITEM_CLASS_NAME = 'MiddleSearchResult';\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MiddleSearch: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  requestedQuery,\n  savedTags,\n  savedTag,\n  totalCount,\n  lastSearchQuery,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n  isSavedMessages,\n  fetchingQuery,\n  isHashtagQuery,\n  searchType = 'chat',\n  currentUserId,\n}) => {\n  const {\n    updateMiddleSearch,\n    resetMiddleSearch,\n    performMiddleSearch,\n    focusMessage,\n    closeMiddleSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldCancelSearchRef = useRef(false);\n\n  const { isMobile } = useAppLayout();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [query, setQuery] = useState(requestedQuery || '');\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const canFocusNewer = foundIds && focusedIndex > 0;\n  const canFocusOlder = foundIds && focusedIndex < foundIds.length - 1;\n\n  const [isFullyHidden, setIsFullyHidden] = useState(!isActive);\n  const hiddenTimerRef = useRef<number>();\n  const maybeLongPressActiveRef = useRef(true);\n\n  const [isFocused, markFocused, markBlurred] = useFlag();\n  const [isViewAsList, setIsViewAsList] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    if (maybeLongPressActiveRef.current) return;\n    // Ignore clicks inside modals\n    if ((event.target as HTMLElement).closest('.Modal')) return;\n    markBlurred();\n  });\n  useClickOutside([ref], handleClickOutside);\n\n  const hasResultsContainer = Boolean((query && foundIds) || isHashtagQuery);\n  const isOnlyHash = isHashtagQuery && !query;\n  const areResultsEmpty = Boolean(query && foundIds && !foundIds.length && !isLoading && !isOnlyHash);\n  const hasResultsPlaceholder = areResultsEmpty || isOnlyHash;\n  const isNonFocusedDropdownForced = searchType === 'myChats' || searchType === 'channels';\n  const hasResultsDropdown = isActive && (isViewAsList || !isMobile) && (isFocused || isNonFocusedDropdownForced)\n    && Boolean(\n      hasResultsContainer || hasResultsPlaceholder || savedTags,\n    );\n\n  const hasQueryData = Boolean((query && !isOnlyHash) || savedTag);\n  const hasNavigationButtons = searchType === 'chat' && Boolean(foundIds?.length);\n\n  const handleClose = useLastCallback(() => {\n    closeMiddleSearch();\n  });\n\n  const focusInput = useLastCallback(() => {\n    requestMeasure(() => {\n      inputRef.current?.focus();\n    });\n  });\n\n  const blurInput = useLastCallback(() => {\n    inputRef.current?.blur();\n  });\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Reset focus on query result\n  useEffect(() => {\n    setFocusedIndex(-1);\n  }, [lastSearchQuery]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n      setIsViewAsList(true);\n      setFocusedIndex(0);\n      setQuery('');\n      hiddenTimerRef.current = window.setTimeout(() => setIsFullyHidden(true), HIDE_TIMEOUT);\n    } else {\n      setIsFullyHidden(false);\n      clearTimeout(hiddenTimerRef.current);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!requestedQuery || !chat?.id) return;\n    setQuery(requestedQuery);\n    updateMiddleSearch({ chatId: chat.id, threadId, update: { requestedQuery: undefined } });\n    setIsLoading(true);\n\n    requestNextMutation(() => {\n      const input = inputRef.current;\n      if (!input) return;\n      focusEditableElement(input, true, true);\n      markFocused();\n    });\n  }, [chat?.id, requestedQuery, threadId]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (isActive !== prevIsActive && !query && lastSearchQuery) {\n      setQuery(lastSearchQuery); // Restore query when returning back\n    }\n  }, [isActive, lastSearchQuery, query]);\n\n  useEffectWithPrevDeps(([prevIsCalendarOpen]) => {\n    if (!isActive || prevIsCalendarOpen === isHistoryCalendarOpen) return;\n    if (isHistoryCalendarOpen) {\n      blurInput();\n      markBlurred();\n    } else {\n      focusInput();\n    }\n  }, [isHistoryCalendarOpen, isActive]);\n\n  const handleReset = useLastCallback(() => {\n    if (!query?.length && !savedTag) {\n      handleClose();\n      return;\n    }\n\n    setQuery('');\n    setIsLoading(false);\n    resetMiddleSearch();\n    focusInput();\n  });\n\n  useEffect(() => (isActive ? captureEscKeyListener(handleReset) : undefined), [isActive, handleClose]);\n\n  const savedTagsArray = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasSavedTags = Boolean(savedTagsArray?.length);\n  const areSavedTagsDisabled = hasSavedTags && !isCurrentUserPremium;\n\n  useEffect(() => {\n    if (isSavedMessages && isActive) loadSavedReactionTags();\n  }, [isSavedMessages, isActive]);\n\n  const handleSearch = useLastCallback(() => {\n    const chatId = chat?.id;\n    if (!chatId) {\n      return;\n    }\n\n    runDebouncedForSearch(() => {\n      if (shouldCancelSearchRef.current) return;\n      performMiddleSearch({ chatId, threadId, query });\n    });\n  });\n\n  const handleQueryChange = useLastCallback((newQuery: string) => {\n    shouldCancelSearchRef.current = false;\n\n    if (newQuery.startsWith('#') && !isHashtagQuery) {\n      updateMiddleSearch({ chatId: chat!.id, threadId, update: { isHashtag: true } });\n      setQuery(newQuery.slice(1));\n      handleSearch();\n      return;\n    }\n\n    setQuery(newQuery);\n\n    if (!newQuery) {\n      setIsLoading(false);\n      resetMiddleSearch();\n      shouldCancelSearchRef.current = true;\n    }\n  });\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    setIsLoading(Boolean(fetchingQuery));\n  }, [fetchingQuery]);\n\n  useEffect(() => {\n    if (!foundIds?.length) return;\n    const isClose = foundIds.length - focusedIndex < FOCUSED_SEARCH_TRIGGER_OFFSET;\n    if (isClose) {\n      handleSearch();\n    }\n  }, [focusedIndex, foundIds?.length]);\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    maybeLongPressActiveRef.current = true;\n\n    function focus() {\n      inputRef.current?.focus();\n      markFocused();\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    function removeListeners() {\n      window.removeEventListener('touchend', focus);\n      window.removeEventListener('mouseup', focus);\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    window.addEventListener('touchend', focus);\n    window.addEventListener('mouseup', focus);\n\n    window.addEventListener('touchstart', removeListeners);\n    window.addEventListener('mousedown', removeListeners);\n\n    return () => {\n      removeListeners();\n      window.removeEventListener('touchstart', removeListeners);\n      window.removeEventListener('mousedown', removeListeners);\n    };\n  }, [isActive]);\n\n  useHistoryBack({\n    isActive,\n    onBack: handleClose,\n  });\n\n  const [viewportIds, getMore, viewportOffset = 0] = useInfiniteScroll(handleSearch, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !savedTag) || !viewportIds?.length) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n\n    return viewportIds.map((searchResultKey) => {\n      const [chatId, id] = parseSearchResultKey(searchResultKey);\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return undefined;\n      }\n\n      const originalSender = (isSavedMessages || isSystemBot(chatId) || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n      const messageChat = selectChat(global, message.chatId);\n\n      const senderPeer = originalSender || messageSender;\n\n      return {\n        searchResultKey,\n        message,\n        messageChat,\n        senderPeer,\n      };\n    }).filter(Boolean);\n  }, [query, savedTag, viewportIds, isSavedMessages]);\n\n  const handleMessageClick = useLastCallback((message: ApiMessage) => {\n    const searchResultKey = getSearchResultKey(message);\n    const index = foundIds?.indexOf(searchResultKey) || 0;\n    const realIndex = index + viewportOffset;\n    setFocusedIndex(realIndex);\n\n    if (searchType === 'chat') {\n      setIsViewAsList(false);\n    }\n\n    focusMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: !isHashtagQuery ? threadId : undefined,\n    });\n\n    markBlurred();\n  });\n\n  const handleTriggerViewStyle = useLastCallback(() => {\n    setIsViewAsList((prev) => !prev);\n    markFocused();\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, hasResultsContainer, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      handleMessageClick(foundResult.message);\n      setFocusedIndex(index + viewportOffset);\n    }\n  }, `.${RESULT_ITEM_CLASS_NAME}`, true);\n\n  const updateSearchParams = useLastCallback((update: Partial<MiddleSearchParams>) => {\n    updateMiddleSearch({ chatId: chat!.id, threadId, update });\n\n    handleSearch();\n  });\n\n  const activateSearchTag = useLastCallback((tag: ApiReaction) => {\n    if (areSavedTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    updateSearchParams({ savedTag: tag });\n  });\n\n  const removeSearchSavedTag = useLastCallback(() => {\n    updateSearchParams({ savedTag: undefined });\n  });\n\n  const handleDeleteTag = useLastCallback(() => {\n    if (isHashtagQuery) {\n      updateSearchParams({ isHashtag: false });\n      return;\n    }\n\n    if (savedTag) {\n      removeSearchSavedTag();\n    }\n  });\n\n  const handleChangeSearchType = useLastCallback((type: MiddleSearchType) => {\n    updateSearchParams({ type });\n    setIsViewAsList(true);\n  });\n\n  const handleFocusOlder = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleFocusNewer = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  function renderTypeTag(type: MiddleSearchType, isForTag?: boolean) {\n    const isSelected = !isForTag && searchType === type;\n    switch (type) {\n      case 'chat':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={chat?.id}\n            title={oldLang('SearchThisChat')}\n            clickArg=\"chat\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'myChats':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={currentUserId}\n            forceShowSelf\n            title={oldLang('SearchMyMessages')}\n            clickArg=\"myChats\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'channels':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            customPeer={CHANNELS_PEER}\n            title={oldLang('SearchPublicPosts')}\n            clickArg=\"channels\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function renderDropdown() {\n    return (\n      <div className={buildClassName(styles.dropdown, !hasResultsDropdown && styles.dropdownHidden)}>\n        {!isMobile && <div className={styles.separator} />}\n        {hasSavedTags && !isHashtagQuery && (\n          <div\n            className={buildClassName(\n              styles.savedTags,\n              !isMobile && styles.wrap,\n              'no-scrollbar',\n            )}\n          >\n            {savedTagsArray.map((tag) => {\n              const isChosen = isSameReaction(tag.reaction, savedTag);\n              return (\n                <SavedTagButton\n                  containerId=\"local-search\"\n                  key={getReactionKey(tag.reaction)}\n                  reaction={tag.reaction}\n                  tag={tag}\n                  withCount\n                  isDisabled={areSavedTagsDisabled}\n                  isChosen={isChosen}\n                  onClick={isChosen ? removeSearchSavedTag : activateSearchTag}\n                />\n              );\n            })}\n          </div>\n        )}\n        {isHashtagQuery && (\n          <div\n            className={buildClassName(styles.searchTypes, 'no-scrollbar')}\n          >\n            {renderTypeTag('chat')}\n            {renderTypeTag('myChats')}\n            {renderTypeTag('channels')}\n          </div>\n        )}\n        {hasResultsContainer && (\n          <InfiniteScroll\n            ref={containerRef}\n            className={buildClassName(styles.results, 'custom-scroll')}\n            items={viewportResults}\n            preloadBackwards={0}\n            onLoadMore={getMore}\n            onKeyDown={handleKeyDown}\n          >\n            {areResultsEmpty && (\n              <span key=\"nothing\" className={styles.placeholder}>\n                {oldLang('NoResultFoundFor', query)}\n              </span>\n            )}\n            {isOnlyHash && (\n              <span key=\"enterhash\" className={styles.placeholder}>\n                {oldLang('HashtagSearchPlaceholder')}\n              </span>\n            )}\n            {viewportResults?.map(({\n              message, senderPeer, messageChat, searchResultKey,\n            }, i) => (\n              <MiddleSearchResult\n                key={searchResultKey}\n                teactOrderKey={-message.date}\n                className={RESULT_ITEM_CLASS_NAME}\n                query={query}\n                message={message}\n                senderPeer={senderPeer}\n                messageChat={messageChat}\n                shouldShowChat={isHashtagQuery}\n                isActive={focusedIndex - viewportOffset === i}\n                onClick={handleMessageClick}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      id=\"MiddleSearch\"\n      className={buildClassName(\n        styles.root,\n        isActive && styles.active,\n        !isActive && isFullyHidden && 'visually-hidden', // `display: none` would prevent focus on iOS\n        isFocused && styles.focused,\n        isMobile && styles.mobile,\n      )}\n      ref={ref}\n    >\n      <div className={styles.header}>\n        {!isMobile && (\n          <Avatar\n            className={styles.avatar}\n            peer={chat}\n            size=\"medium\"\n            isSavedMessages={isSavedMessages}\n          />\n        )}\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          className={buildClassName(\n            styles.input,\n            hasResultsDropdown && styles.withDropdown,\n            hasResultsDropdown && !isMobile && styles.adaptSearchBorders,\n          )}\n          canClose={!isMobile}\n          isLoading={isLoading}\n          resultsItemSelector={`.${styles.results} .${RESULT_ITEM_CLASS_NAME}`}\n          hasUpButton={hasNavigationButtons && !isMobile}\n          hasDownButton={hasNavigationButtons && !isMobile}\n          placeholder={isHashtagQuery ? oldLang('SearchHashtagsHint') : oldLang('Search')}\n          teactExperimentControlled\n          onChange={handleQueryChange}\n          onStartBackspace={handleDeleteTag}\n          onReset={handleReset}\n          withBackIcon={isMobile}\n          onFocus={markFocused}\n          focused={isFocused}\n          onUpClick={canFocusOlder ? handleFocusOlder : undefined}\n          onDownClick={canFocusNewer ? handleFocusNewer : undefined}\n        >\n          <div className={styles.searchTags}>\n            {savedTag && (\n              <SavedTagButton\n                containerId=\"local-search-tags\"\n                className={styles.savedSearchTag}\n                reaction={savedTag}\n                tag={savedTags![getReactionKey(savedTag)]}\n                onClick={removeSearchSavedTag}\n              />\n            )}\n            {isHashtagQuery && <div className={styles.hash}>#</div>}\n          </div>\n          {!isMobile && renderDropdown()}\n        </SearchInput>\n        {!isMobile && (\n          <div className={styles.icons}>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel={oldLang('JumpToDate')}\n            >\n              <Icon name=\"calendar\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {isMobile && renderDropdown()}\n      {isMobile && (\n        <div className={styles.footer}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n            ariaLabel={oldLang('JumpToDate')}\n          >\n            <Icon name=\"calendar\" />\n          </Button>\n          <div className={styles.counter}>\n            {hasQueryData && (\n              foundIds?.length ? (\n                oldLang('Of', [Math.max(focusedIndex + 1, 1), totalCount])\n              ) : foundIds && !foundIds.length && (\n                oldLang('NoResult')\n              )\n            )}\n          </div>\n          {searchType === 'chat' && Boolean(foundIds?.length) && (\n            <Button\n              className={styles.viewStyle}\n              size=\"smaller\"\n              isText\n              fluid\n              noForcedUpperCase\n              onClick={handleTriggerViewStyle}\n            >\n              {isViewAsList ? oldLang('SearchAsChat') : oldLang('SearchAsList')}\n            </Button>\n          )}\n          {hasNavigationButtons && !hasResultsDropdown && (\n            <div className={styles.mobileNavigation}>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusOlder && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusOlder}\n                nonInteractive={!canFocusOlder}\n                ariaLabel={lang('AriaSearchOlderResult')}\n              >\n                <Icon name=\"up\" />\n              </Button>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusNewer && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusNewer}\n                nonInteractive={!canFocusNewer}\n                ariaLabel={lang('AriaSearchNewerResult')}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const {\n      requestedQuery, savedTag, results, fetchingQuery, isHashtag, type,\n    } = selectCurrentMiddleSearch(global) || {};\n    const { totalCount, foundIds, query: lastSearchQuery } = results || {};\n\n    const currentUserId = global.currentUserId;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      requestedQuery,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isSavedMessages,\n      fetchingQuery,\n      isHashtagQuery: isHashtag,\n      currentUserId,\n      searchType: type,\n      lastSearchQuery,\n    };\n  },\n)(MiddleSearch));\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nexport function useClickOutside(\n  refs: React.RefObject<HTMLElement>[], callback: (event: MouseEvent) => void,\n) {\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    const clickedOutside = refs.every((ref) => {\n      return ref.current && !ref.current.contains(event.target as Node);\n    });\n\n    if (clickedOutside) callback(event);\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <Icon name=\"recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <Icon name=\"favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n  ApiReactionWithPaid,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/reactions/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n  onReactionSelect: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  isWithPaidReaction?: boolean;\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  isWithPaidReaction,\n  message,\n  reactionsLimit,\n  onReactionSelect,\n  onReactionContext,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      const reactions = currentReactions.map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactions.unshift({ type: 'paid' });\n      }\n      return reactions;\n    }\n\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      const reactionsToSort: ApiReactionWithPaid[] = (availableReactions || []).map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactionsToSort.unshift({ type: 'paid' });\n      }\n      return sortReactions(reactionsToSort, topReactions);\n    }\n\n    const reactionsToSort: ApiReactionWithPaid[] = enabledReactions.allowed;\n    if (isWithPaidReaction) {\n      reactionsToSort.unshift({ type: 'paid' });\n    }\n\n    return sortReactions(reactionsToSort, topReactions);\n  }, [\n    availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions, isWithPaidReaction,\n  ]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                onContextMenu={onReactionContext}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions, isPaidReactionAvailable } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n      isWithPaidReaction: isPaidReactionAvailable,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiReaction,\n  ApiReactionWithPaid,\n  ApiSticker,\n  ApiStory,\n  ApiStorySkipped,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectIsContextMenuTranslucent,\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer, addLocalPaidReaction, openPaidReactionModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction: ApiReaction = sticker.isCustomEmoji\n      ? { type: 'custom', documentId: sticker.id }\n      : { type: 'emoji', emoticon: sticker.emoji! };\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    if (reaction.type === 'paid') {\n      addLocalPaidReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, count: 1,\n      });\n    } else {\n      toggleReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeReactionPicker();\n  });\n\n  const handleReactionContextMenu = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (reaction.type !== 'paid') return;\n\n    openPaidReactionModal({\n      chatId: renderedChatId!,\n      messageId: renderedMessageId!,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReactionWithPaid | ApiSticker) => {\n    if ('type' in item && item.type === 'paid') return; // Not supported for stories\n\n    const reaction = 'id' in item ? { type: 'custom', documentId: item.id } as const : item;\n\n    const sticker = 'type' in item && item.type === 'custom' ? getGlobal().customEmojis.byId[item.documentId]\n      : 'id' in item ? item : undefined;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('type' in item && item.type === 'emoji') {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({});\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      anchor={renderingPosition}\n      positionY={story && 'bottom'}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n            onReactionContext={handleReactionContextMenu}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              onReactionContext={handleReactionContextMenu}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <Icon\n                name=\"delete\"\n                className={buildClassName(styles.actionItem, styles.deleteFile)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <Icon\n            name={attachment.shouldSendAsSpoiler ? 'spoiler-disable' : 'spoiler'}\n            className={styles.actionItem}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            // eslint-disable-next-line react/jsx-no-bind\n            <Icon name=\"delete\" className={styles.actionItem} onClick={() => onDelete(index)} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","import isFullyVisible from './visibility/isFullyVisible';\nimport animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll({\n      container,\n      element: allElements[index],\n      position,\n      margin: SCROLL_MARGIN,\n    });\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePreviousDeprecated(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"dropTarget\":\"AT_d9l0W\",\"dropOutlineContainer\":\"d9O65j_I\",\"dropOutline\":\"jzCBDWMw\",\"outline\":\"xjNY3Z8u\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  canScheduleUntilOnline?: boolean;\n  onSendWhenOnline?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  canScheduleUntilOnline,\n  onSendWhenOnline,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePreviousDeprecated(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {lang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {lang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {lang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {lang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <svg className={styles.dropOutlineContainer}>\n          <rect className={styles.dropOutline} x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n        </svg>\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? lang('Next') : editingMessage ? lang('Save') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                  onSendWhenOnline={onSendWhenOnline}\n                  canScheduleUntilOnline={canScheduleUntilOnline}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          className=\"dialog-checkbox\"\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransitionDeprecated(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { IconName } from '../../../types/icons';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, IconName> = {\n  recent: 'recent',\n  people: 'smile',\n  nature: 'animals',\n  foods: 'eats',\n  activity: 'sport',\n  places: 'car',\n  objects: 'lamp',\n  symbols: 'language',\n  flags: 'flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll({\n      container: containerRef.current!,\n      element: categoryEl,\n      position: 'start',\n      margin: FOCUS_MARGIN,\n      maxDistance: SMOOTH_SCROLL_DISTANCE,\n    });\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <Icon name={icon} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <Icon name=\"close\" className=\"gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <Icon name=\"search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <Icon name=\"delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...(isAttachmentModal ? menuPositionOptions : {\n        positionX: 'left',\n        positionY: 'bottom',\n      })}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n  quote?: boolean;\n}\ninterface IFormatAnalysis {\n  formats: ISelectedTextFormats;\n  hasNestedFormats: boolean;\n  hasConflictingFormats: boolean;\n}\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n  BLOCKQUOTE: 'quote'\n  \n};\nconst CONFLICTING_FORMATS = ['monospace', 'strikethrough'];\nconst fragmentEl = document.createElement('div');\n\nfunction analyzeFormatting(element: HTMLElement | null): IFormatAnalysis {\n  const formats: ISelectedTextFormats = {};\n  let hasNestedFormats = false;\n  let hasConflictingFormats = false;\n\n  \n  const selection = window.getSelection();\n  if (selection && selection.rangeCount > 0) {\n    const range = selection.getRangeAt(0);\n    \n    \n    let container = range.commonAncestorContainer;\n    if (container.nodeType === Node.TEXT_NODE) {\n      container = container.parentElement!;\n    }\n\n    \n    let currentElement: HTMLElement | null = container as HTMLElement;\n    while (currentElement && currentElement.id !== EDITABLE_INPUT_ID) {\n      const tagName = currentElement.tagName.toUpperCase();\n      \n      const format = TEXT_FORMAT_BY_TAG_NAME[tagName];\n      \n      if (format) {\n        formats[format] = true;\n      }\n      \n  \n      if (tagName === 'SPAN' && currentElement.classList.contains('spoiler')) {\n        formats.spoiler = true;\n      }\n\n      currentElement = currentElement.parentElement;\n    }\n\n   \n    const fragment = range.cloneContents();\n    const formatElements = Array.from(fragment.querySelectorAll('b,strong,i,em,u,del,code,span.spoiler,blockquote'));\n    \n\n    formatElements.forEach((el) => {\n      const tagName = el.tagName.toUpperCase();\n      const format = TEXT_FORMAT_BY_TAG_NAME[tagName];\n      \n      if (format) {\n        formats[format] = true;\n      }\n      \n      if (tagName === 'SPAN' && el.classList.contains('spoiler')) {\n        formats.spoiler = true;\n      }\n    });\n\n    // Check for nested formats\n    hasNestedFormats = formatElements.length > 1 || Object.keys(formats).length > 1;\n\n    // Check for conflicting formats\n    hasConflictingFormats = CONFLICTING_FORMATS.some((format) => \n      formats[format as keyof ISelectedTextFormats] && Object.keys(formats).length > 1\n    );\n  }\n\n  // console.log(\"Selection range:\", selection?.getRangeAt(0));\n  // console.log(\"Formats found:\", formats);\n  // console.log(\"Has nested formats:\", hasNestedFormats);\n  // console.log(\"Has conflicting formats:\", hasConflictingFormats);\n\n  return {\n    formats,\n    hasNestedFormats,\n    hasConflictingFormats,\n  };\n}\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n  const [formatAnalysis, setFormatAnalysis] = useState<IFormatAnalysis>({\n    formats: {},\n    hasNestedFormats: false,\n    hasConflictingFormats: false,\n  });\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const parentElement = selectedRange.commonAncestorContainer.nodeType === Node.TEXT_NODE\n      ? selectedRange.commonAncestorContainer.parentElement\n      : selectedRange.commonAncestorContainer as HTMLElement;\n\n    const analysis = analyzeFormatting(parentElement);\n    setFormatAnalysis(analysis);\n    setSelectedTextFormats(analysis.formats);\n  }, [isOpen, selectedRange]);\n\n  const setAndPreserveSelection = useLastCallback((range: Range) => {\n    setSelectedRange(range);\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  });\n  \n  const applyFormatPreservingOthers = useLastCallback((\n    command: string, \n    tag?: string,\n  ) => {\n    if (!selectedRange) return;\n  \n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount) return;\n  \n    const range = selection.getRangeAt(0);\n    if (range.collapsed) return;\n  \n    const analysis = analyzeFormatting(range.commonAncestorContainer as HTMLElement);\n    const isFormatActive = analysis.formats[command as keyof ISelectedTextFormats];\n\n   \n    const createFormattedHtml = (text: string): string => {\n      switch (command) {\n        case 'monospace':\n          return `<code class=\"text-entity-code\" data-entity-type=\"${ApiMessageEntityTypes.Code}\" dir=\"auto\">${text}</code>`;\n        case 'strikethrough':\n          return `<del data-entity-type=\"${ApiMessageEntityTypes.Strike}\">${text}</del>`;\n        case 'spoiler':\n          return `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`;\n        case 'quote':\n          return `<blockquote data-entity-type=\"${ApiMessageEntityTypes.Blockquote}\">${text}</blockquote>`;\n        default:\n          return text;\n      }\n    };\n  \n    if (['monospace', 'strikethrough', 'spoiler', 'quote'].includes(command)) {\n      if (isFormatActive && tag) {\n        let element = range.commonAncestorContainer as HTMLElement;\n        if (element.nodeType === Node.TEXT_NODE) {\n          element = element.parentElement!;\n        }\n        \n        while (element && element.tagName !== tag.toUpperCase()) {\n          element = element.parentElement!;\n        }\n  \n        if (!element || !element.textContent) {\n          return;\n        }\n\n   \n        const elementRange = document.createRange();\n        elementRange.selectNodeContents(element);\n        \n        const isPartialSelection = (\n          range.startContainer !== elementRange.startContainer ||\n          range.endContainer !== elementRange.endContainer ||\n          range.startOffset !== elementRange.startOffset ||\n          range.endOffset !== elementRange.endOffset\n        );\n\n        if (isPartialSelection) {\n       \n          const parentElement = element.parentElement;\n          \n          const beforeText = element.textContent.slice(0, range.startOffset);\n          const selectedText = range.toString();\n          const afterText = element.textContent.slice(range.endOffset);\n\n    \n          let newHtml = '';\n          if (beforeText) {\n            newHtml += createFormattedHtml(beforeText);\n          }\n          newHtml += selectedText;\n          if (afterText) {\n            newHtml += createFormattedHtml(afterText);\n          }\n\n        \n          element.insertAdjacentHTML('beforebegin', newHtml);\n          element.remove();\n\n          // REstores selection\n          if (parentElement) {\n            const newRange = document.createRange();\n            const textNodes = Array.from(parentElement.childNodes);\n            const selectedNode = textNodes.find(node => \n              node.nodeType === Node.TEXT_NODE && node.textContent === selectedText\n            );\n\n            if (selectedNode) {\n              newRange.selectNodeContents(selectedNode);\n              selection.removeAllRanges();\n              selection.addRange(newRange);\n            }\n          }\n        } else {\n\n          // If selected whole element then delete all formating text\n          const textContent = element.textContent;\n          const textNode = document.createTextNode(textContent);\n          element.replaceWith(textNode);\n\n          const newRange = document.createRange();\n          newRange.setStart(textNode, 0);\n          newRange.setEnd(textNode, textContent.length);\n          selection.removeAllRanges();\n          selection.addRange(newRange);\n        }\n  \n        setFormatAnalysis((prevAnalysis) => ({\n          ...prevAnalysis,\n          formats: {\n            ...prevAnalysis.formats,\n            [command]: false\n          }\n        }));\n      } else {\n        \n        const text = range.toString();\n        const htmlToInsert = createFormattedHtml(text);\n  \n        \n        document.execCommand('insertHTML', false, htmlToInsert);\n\n      \n        const newSelection = window.getSelection();\n        if (newSelection && newSelection.rangeCount > 0) {\n          const newRange = newSelection.getRangeAt(0);\n          let insertedElement = newRange.commonAncestorContainer as HTMLElement;\n          if (insertedElement.nodeType === Node.TEXT_NODE) {\n            insertedElement = insertedElement.parentElement!;\n          }\n\n          const elementRange = document.createRange();\n          elementRange.selectNodeContents(insertedElement);\n          selection.removeAllRanges();\n          selection.addRange(elementRange);\n        }\n      }\n      \n      const newSelection = window.getSelection();\n      if (newSelection && newSelection.rangeCount > 0) {\n        const newRange = newSelection.getRangeAt(0);\n        const newAnalysis = analyzeFormatting(newRange.commonAncestorContainer as HTMLElement);\n        setFormatAnalysis(newAnalysis);\n      }\n    } \n    // Simple formats logic\n    else {\n      \n      if (isFormatActive && tag) {\n        document.execCommand('removeFormat');\n        \n        Object.entries(analysis.formats).forEach(([format, isActive]) => {\n          if (isActive && format !== command) {\n            switch(format) {\n              case 'bold':\n                document.execCommand('bold');\n                break;\n              case 'italic':\n                document.execCommand('italic');\n                break;\n              case 'underline':\n                document.execCommand('underline');\n                break;\n            }\n          }\n        });\n      } else {\n        switch(command) {\n          case 'bold':\n            document.execCommand('bold');\n            break;\n          case 'italic':\n            document.execCommand('italic');\n            break;\n          case 'underline':\n            document.execCommand('underline');\n            break;\n        }\n      }\n  \n      const newAnalysis = analyzeFormatting(range.commonAncestorContainer as HTMLElement);\n      setFormatAnalysis(newAnalysis);\n    }\n  });\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n   \n    if (formatAnalysis.formats[key]) {\n      return 'active';\n    }\n  \n    \n    if (CONFLICTING_FORMATS.includes(key)) {\n      const hasConflictingFormat = CONFLICTING_FORMATS.some(\n        (format) => format !== key && formatAnalysis.formats[format as keyof ISelectedTextFormats]\n      );\n      if (hasConflictingFormat) {\n        return 'disabled';\n      }\n    }\n  \n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    applyFormatPreservingOthers('spoiler', 'span');\n\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    applyFormatPreservingOthers('bold', 'b');\n  });\n  \n  const handleItalicText = useLastCallback(() => {\n    applyFormatPreservingOthers('italic', 'i');\n\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    applyFormatPreservingOthers('underline', 'u');\n\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    applyFormatPreservingOthers('strikethrough', 'del');\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    applyFormatPreservingOthers('monospace', 'code');\n  });\n\n  const handleQuoteText = useLastCallback(() => {\n    applyFormatPreservingOthers('quote', 'blockquote');\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <Icon name=\"eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <Icon name=\"bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <Icon name=\"italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <Icon name=\"underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <Icon name=\"strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <Icon name=\"monospace\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Quote text\"\n          className={getFormatButtonClassName('quote')}\n          onClick={handleQuoteText}\n        >\n          <Icon name=\"quote-text\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <Icon name=\"link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <Icon name=\"check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/visibility/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, url, description, webThumbnail,\n  } = inlineResult;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePreviousDeprecated(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <Icon name=\"lock-badge\" className=\"send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && lang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: OldLangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: OldLangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePreviousDeprecated<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage, ApiPoll } from '../../api/types';\n\nimport {\n  selectChat, selectChatMessage, selectPollFromMessage, selectTabState,\n} from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n  poll?: ApiPoll;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  poll,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !poll || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = poll;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${poll.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n    const poll = message && selectPollFromMessage(global, message);\n\n    return {\n      chat,\n      message,\n      poll,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport {\n  selectChat, selectIsCurrentUserPremium, selectTabState, selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.chatId && editTopicPanel?.topicId\n      ? selectTopic(global, editTopicPanel.chatId, editTopicPanel.topicId) : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"channel-title\"\n              label={lang('EnterChannelName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"channel-about\"\n              label={lang('DescriptionPlaceholder')}\n              onChange={handleAboutChange}\n              value={about}\n              maxLength={CHANNEL_MAX_DESCRIPTION}\n              maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n}) => {\n  const { toggleSignatures } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const areSignaturesEnabled = Boolean(chat?.areSignaturesShown);\n  const areProfilesEnabled = Boolean(chat?.areProfilesShown);\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || (chat && getHasAdminRight(chat, 'addAdmins')));\n  const canToggleSignatures = isChannel && getHasAdminRight(chat!, 'postMessages');\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    const [owner, admins] = partition(Object.values(adminMembersById), (member) => member.isOwner);\n\n    return [...owner, ...admins];\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useLastCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  });\n\n  const handleToggleSignatures = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled,\n      areSignaturesEnabled: !areSignaturesEnabled,\n    });\n  });\n\n  const handleToggleProfiles = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled: !areProfilesEnabled,\n      areSignaturesEnabled,\n    });\n  });\n\n  const handleAddAdminClick = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  });\n\n  const getMemberStatus = useLastCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  });\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\" dir=\"auto\">\n            {lang(isChannel\n              ? 'Channel.Management.AddModeratorHelp'\n              : 'Group.Management.AddModeratorHelp')}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <Icon name=\"add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n\n        {canToggleSignatures && (\n          <div className=\"section\">\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={areSignaturesEnabled}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n            {areSignaturesEnabled && (\n              <>\n                <div className=\"ListItem narrow\">\n                  <Checkbox\n                    checked={areProfilesEnabled}\n                    label={lang('ChannelSignMessagesWithProfile')}\n                    onChange={handleToggleProfiles}\n                  />\n                </div>\n                <p className=\"section-info section-info_push\">\n                  {lang('ChannelSignProfilesInfo')}\n                </p>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    return filterPeersByQuery({ ids: availableMemberIds, query: search, type: 'user' });\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <Icon name=\"add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isJoinToSend}\n                onCheck={handleJoinToSendCheck}\n                label={lang('ChannelSettingsJoinToSend')}\n              />\n            </div>\n            {isJoinToSend && (\n              <div className=\"ListItem narrow\">\n                <Checkbox\n                  checked={isJoinRequest}\n                  onCheck={handleJoinRequestCheck}\n                  label={lang('ChannelSettingsJoinRequest')}\n                />\n              </div>\n            )}\n            <p className=\"section-info section-info_push\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"group-title\"\n              label={lang('GroupName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === GROUP_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"group-about\"\n              label={lang('DescriptionPlaceholder')}\n              maxLength={GROUP_MAX_DESCRIPTION}\n              maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n              onChange={handleAboutChange}\n              value={about}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                subLabel={\n                  chatFullInfo.isPreHistoryHidden ? lang('ChatHistoryHiddenInfo2') : lang('ChatHistoryVisibleInfo')\n                }\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && !isChannel && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 48;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 48;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"section-help hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"section-help hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"section-help hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"section-help\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"section-help\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"section-help\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"section-help\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: oldLang('LinkCopied'),\n    });\n  }, [oldLang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = oldLang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = oldLang('PeopleJoined', usage);\n    } else {\n      text = oldLang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${oldLang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${oldLang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${oldLang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = expireDate - getServerTime();\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += oldLang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += oldLang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${oldLang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: oldLang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: oldLang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: oldLang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: oldLang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"section-help\">{isChannel ? oldLang('PrimaryLinkHelpChannel') : oldLang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <div className=\"section\">\n            <LinkField\n              className=\"settings-input\"\n              link={primaryInviteLink}\n              withShare\n              onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n              title={chat?.usernames ? oldLang('PublicLink') : oldLang('lng_create_permanent_link_title')}\n            />\n          </div>\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {oldLang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"section-help hint\" key=\"links-hint\">{oldLang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"section-help\" key=\"title\">{oldLang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{oldLang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={oldLang('DeleteAllRevokedLinks')}\n        text={oldLang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={oldLang('RevokeLink')}\n        text={oldLang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={oldLang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={oldLang('DeleteLink')}\n        text={oldLang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"section-help\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info section-info_push\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section section-with-fab\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  withIcon\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"user-first-name\"\n              label={lang('UserInfo.FirstNamePlaceholder')}\n              onChange={handleFirstNameChange}\n              value={firstName}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              id=\"user-last-name\"\n              label={lang('UserInfo.LastNamePlaceholder')}\n              onChange={handleLastNameChange}\n              value={lastName}\n            />\n          </div>\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"section-help\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { RegularLangFnParameters } from '../../util/localization';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Partial<Record<string, RegularLangFnParameters>>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\",\"list\":\"l_wfiFG0\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice,\n  ApiLabeledPrice,\n  ApiPaymentCredentials,\n  ApiWebDocument,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { IconName } from '../../types/icons';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  title: string;\n  description: string;\n  photo?: ApiWebDocument;\n  invoice: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: ApiLabeledPrice[];\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  title,\n  description,\n  photo,\n  invoice,\n  shippingPrices,\n  checkoutInfo,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const lang = useOldLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const ref = useMediaTransition<HTMLImageElement>(photoUrl);\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(tipAmount!, invoice.currency, lang.code)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(tip, invoice.currency, lang.code, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = lang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, lang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && (\n          <img\n            ref={ref}\n            className={styles.checkoutPicture}\n            src={photoUrl}\n            draggable={false}\n            width={photo!.dimensions?.width}\n            height={photo!.dimensions?.height}\n            alt=\"\"\n          />\n        )}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {description && (\n            <div className={styles.checkoutDescription}>\n              {renderText(description, ['br', 'links', 'emoji'])}\n            </div>\n          )}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {invoice.prices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, invoice.currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang.code, item.label, item.amount, invoice.currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang.code, lang('Checkout.TotalAmount'), totalPrice, invoice.currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: lang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: lang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: lang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: lang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: lang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: lang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  langCode: string | undefined, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(value, currency, langCode)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      className={styles.list}\n      narrow\n      multiline={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { RegularLangFnParameters } from '../../util/localization';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  errorKey?: RegularLangFnParameters;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  errorKey,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={errorKey && lang.withRegular(errorKey)}\n        hint={passwordHint}\n        description={oldLang('PaymentConfirmationMessage', cardName)}\n        placeholder={oldLang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    errorKey: payment.error?.messageKey,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.form?.type === 'regular' ? payment.form.savedCredentials : undefined,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{oldLang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber && lang.withRegular(formErrors.cardNumber)}\n        />\n        {needCardholderName && (\n          <InputText\n            label={oldLang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder && lang.withRegular(formErrors.cardholder)}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry && lang.withRegular(formErrors.expiry)}\n          />\n          <InputText\n            label={oldLang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv && lang.withRegular(formErrors.cvv)}\n            teactExperimentControlled\n          />\n        </section>\n        {needCountry || needZip ? (\n          <h5>{oldLang('PaymentBillingAddress')}</h5>\n        ) : undefined}\n        <section className=\"inline-inputs\">\n          {needCountry && (\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.billingCountry}\n              hasArrow={Boolean(true)}\n              id=\"billing-country\"\n              error={formErrors.billingCountry && lang.withRegular(formErrors.billingCountry)}\n              tabIndex={0}\n              ref={selectCountryRef}\n            >\n              {\n                countryList.map(({ defaultName, name }) => (\n                  <option\n                    value={defaultName}\n                    className=\"county-item\"\n                    selected={defaultName === state.billingCountry}\n                  >\n                    {defaultName || name}\n                  </option>\n                ))\n              }\n            </Select>\n          )}\n          {needZip && (\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handleBillingPostCodeChange}\n              value={state.billingZip}\n              inputMode=\"text\"\n              tabIndex={0}\n              maxLength={12}\n              error={formErrors.billingZip && lang.withRegular(formErrors.billingZip)}\n            />\n          )}\n        </section>\n        <div className=\"checkbox\">\n          <Checkbox\n            label={oldLang('PaymentCardSavePaymentInformation')}\n            checked={canSaveCredentials ? state.saveCredentials : false}\n            tabIndex={0}\n            subLabel={oldLang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n            onChange={handleChangeSaveCredentials}\n            disabled={!canSaveCredentials}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(amount, currency, lang.code),\n    value,\n  }))), [shippingOptions, currency, lang.code]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{lang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{oldLang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={oldLang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1 && lang.withRegular(formErrors.streetLine1)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2 && lang.withRegular(formErrors.streetLine2)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city && lang.withRegular(formErrors.city)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state && lang.withRegular(formErrors.state)}\n            />\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2 && lang.withRegular(formErrors.countryIso2)}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode && lang.withRegular(formErrors.postCode)}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{oldLang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={oldLang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName && lang.withRegular(formErrors.fullName)}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={oldLang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email && lang.withRegular(formErrors.email)}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={oldLang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone && lang.withRegular(formErrors.phone)}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={oldLang('PaymentShippingSave')}\n          subLabel={oldLang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountry, ApiInvoice, ApiLabeledPrice, ApiPaymentCredentials, ApiPaymentFormRegular,\n} from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  step?: PaymentStep;\n  chat?: ApiChat;\n  nativeProvider?: string;\n  invoice?: ApiInvoice;\n  form?: ApiPaymentFormRegular;\n  error?: TabState['payment']['error'];\n  prices?: ApiLabeledPrice[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  shippingOptions?: ShippingOption[];\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  form,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePreviousDeprecated(step, true);\n  const prevRequestId = usePreviousDeprecated(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.messageKey,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (form?.savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = form.savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [form, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.descriptionKey ? lang.withRegular(error.descriptionKey) : lang('ErrorUnspecified')}</h4>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            title={form!.title}\n            description={form!.description}\n            photo={form!.photo}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice!}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!form!.isPasswordMissing && form!.canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            needEmail={Boolean(invoice?.isEmailRequested || invoice?.isEmailSentToProvider)}\n            needPhone={Boolean(invoice?.isPhoneRequested || invoice?.isPhoneSentToProvider)}\n            needName={Boolean(invoice?.isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={invoice!.currency}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (form?.savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (invoice?.isEmailRequested && !email)\n          || (invoice?.isPhoneRequested && !phone)\n          || (invoice?.isNameRequested && !fullName);\n\n        if ((invoice?.isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (invoice?.isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return oldLang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return oldLang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return oldLang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return oldLang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return oldLang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return oldLang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return oldLang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, oldLang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? oldLang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, invoice!.currency, oldLang.code))\n    : lang('PaymentInfoDone');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <Icon name={step === PaymentStep.Checkout ? 'close' : 'arrow-left'} />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            className=\"button-text\"\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      form,\n      step,\n      shippingOptions,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n    } = selectTabState(global).payment;\n\n    const { invoice, nativeParams, nativeProvider } = form || {};\n    const countryList = global.countryList.general;\n\n    let providerName = form?.nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const bot = form?.botId ? selectUser(global, form.botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      nativeProvider: providerName,\n      isProviderError,\n      form,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: ApiLabeledPrice[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiReceiptRegular, ApiShippingAddress } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  receipt?: ApiReceiptRegular;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  receipt,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const prevReceipt = usePrevious(receipt);\n  const renderingReceipt = receipt || prevReceipt;\n\n  const checkoutInfo = useMemo(() => {\n    if (!renderingReceipt) return undefined;\n    return getCheckoutInfo(renderingReceipt.credentialsTitle, renderingReceipt.info, renderingReceipt.shippingMethod);\n  }, [renderingReceipt]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      {renderingReceipt && (\n        <>\n          <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            <Button\n              className=\"close-button\"\n              color=\"translucent\"\n              round\n              size=\"smaller\"\n              onClick={closeModal}\n              ariaLabel=\"Close\"\n            >\n              <Icon name=\"close\" />\n            </Button>\n            <h3> {lang('PaymentReceipt')} </h3>\n          </div>\n          <div className=\"receipt-content custom-scroll\">\n            <Checkout\n              shippingPrices={renderingReceipt.shippingPrices}\n              totalPrice={renderingReceipt.totalAmount}\n              tipAmount={renderingReceipt.tipAmount}\n              invoice={renderingReceipt.invoice}\n              checkoutInfo={checkoutInfo}\n              title={renderingReceipt.title}\n              description={renderingReceipt.description}\n              photo={renderingReceipt.photo}\n            />\n          </div>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n\n    return {\n      receipt,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?: {\n    phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id) || MEMO_EMPTY_ARRAY, [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <PeerPicker\n            className={styles.userPicker}\n            itemIds={userIds}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            allowMultiple\n            withStatus\n            itemInputType=\"checkbox\"\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport Modal from '../ui/Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n};\n\nconst WebAppsCloseConfirmationModal: FC<OwnProps> = ({\n  isOpen,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { closeWebAppsCloseConfirmationModal, closeWebAppModal } = getActions();\n\n  const [shouldSkipInFuture, setShouldSkipInFuture] = useState(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const onClose = useCallback(() => {\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const confirmHandler = useCallback(() => {\n    closeWebAppModal({ shouldSkipConfirmation: true });\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      title={lang('CloseMiniApps')}\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <p>{lang('AreYouSureCloseMiniApps')}</p>\n      <Checkbox\n        className=\"dialog-checkbox\"\n        label={lang('DoNotAskAgain')}\n        checked={shouldSkipInFuture}\n        onCheck={setShouldSkipInFuture}\n      />\n      <div\n        className=\"dialog-buttons mt-2\"\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color=\"danger\"\n        >\n          {oldLang('Confirm')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {oldLang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(WebAppsCloseConfirmationModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hyRfEyRz\",\"top\":\"p_Ny8jqJ\",\"badge\":\"QRrryqp4\",\"text\":\"I5jdPgFL\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiWebDocument } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Avatar, { type AvatarSize } from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer?: ApiPeer | CustomPeer;\n  avatarWebPhoto?: ApiWebDocument;\n  avatarSize?: AvatarSize;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  badgeIconClassName?: string;\n  textClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer: avatarPeer,\n  avatarWebPhoto,\n  avatarSize,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  badgeIconClassName,\n  textClassName,\n  onClick,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size={avatarSize} peer={avatarPeer} webPhoto={avatarWebPhoto} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)}>\n            {badgeIcon && <Icon name={badgeIcon} className={badgeIconClassName} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={buildClassName(styles.text, textClassName)}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasButton = Boolean(confirmButtonText || onConfirm);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasButton && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"listItemIcon\":\"hQbEPsTU\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  contentClassName?: string;\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName?: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  hasBackdrop?: boolean;\n  withSeparator?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  hasBackdrop,\n  withSeparator,\n  onClose,\n  onButtonClick,\n  contentClassName,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName(styles.root, contentClassName)}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      onClose={onClose}\n    >\n      {headerIconName && <div className={styles.topIcon}><Icon name={headerIconName} /></div>}\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n              iconClassName={styles.listItemIcon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      {withSeparator && <Separator className={styles.separator} />}\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"noFooter\":\"cSamlkt9\",\"cell\":\"Cnh5ENvm\",\"fullWidth\":\"UssCZwgy\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string; withEmojiStatus?: boolean };\n\nexport type TableData = [TeactNode | undefined, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  modalHeader?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  hasBackdrop?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  modalHeader,\n  footer,\n  buttonText,\n  className,\n  hasBackdrop,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      isSlim\n      header={modalHeader}\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            {label && <div className={buildClassName(styles.cell, styles.title)}>{label}</div>}\n            <div className={buildClassName(styles.cell, styles.value, !label && styles.fullWidth)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PeerChip\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  withEmojiStatus={value.withEmojiStatus}\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button\n          className={!footer ? styles.noFooter : undefined}\n          size=\"smaller\"\n          onClick={onButtonClick || onClose}\n        >{buttonText}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(option.amount, option.currency, oldLang.code)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption)) && perUserStarCount && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n"],"names":["getViewableMedia","params","type","media","mediaIndex","isSingle","length","avatar","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","webPageDocument","isDocumentMedia","undefined","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","getNodes","index","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","id","PreviewMedia","SharedMedia","SearchResult","MiddleHeaderAvatar","SuggestedAvatar","StarsTransaction","SponsoredMessage","MESSAGE_CONTENT_SELECTOR","ScheduledInline","Inline","container","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","useMemo","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","Boolean","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","memo","ReportAvatarModal","isOpen","peerId","onClose","onCloseAnimationEnd","reportProfilePhoto","getActions","selectedReason","setSelectedReason","useState","description","setDescription","handleReport","useLastCallback","chatId","reason","handleSelectReason","value","handleDescriptionChange","e","target","lang","useOldLang","REPORT_OPTIONS","label","title","React","Modal","onEnter","className","RadioGroup","name","options","onChange","selected","InputText","Button","color","isText","onClick","getZoomChange","setZoomChange","useZoomChange","useUnmountCleanup","DeleteProfilePhotoModal","profileId","onConfirm","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","useCallback","isUserId","withGlobal","global","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarOwner","avatarPhoto","chat","selectCurrentChat","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActionsSlow","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","MediaViewerActions","canReportAvatar","onReportAvatar","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","originMessage","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","onTrigger","round","ariaLabel","Icon","renderDeleteModal","openDeleteModalHandler","messageIds","isSchedule","menuItems","isForwardingAllowed","content","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","map","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","MediaViewerFooter","text","buttonText","isForVideo","handleSponsoredClick","isForceMobileVersion","isMultiline","setIsMultiline","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","onButtonClick","classNames","buildClassName","stopPropagation","dir","isRectangular","getCurrentTime","setCurrentTime","useCurrentTimeSignal","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","connector","request","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","SeekLine","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","VideoPlayerControls","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","ripple","RangeSlider","bold","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","VideoPlayer","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","isSponsoredMessage","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","sponsoredMessage","textMessage","MediaViewerContent","withAnimation","isMoving","onFooterClick","toggleControlsOnMove","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","MediaViewerSlides","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","closest","calculateOffsetBoundaries","offsetTop","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","dragOffsetX","dragOffsetY","cancelDrag","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","includes","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","isRtl","toFixed","element","selector","matches","messageSender","selectSender","owner","SenderInfo","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","subtitle","isFallbackAvatar","fallbackPhoto","isPersonalAvatar","personalPhoto","date","formattedDate","formatMediaDateTime","count","currentIndex","countText","parts","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getPeerTitle","Avatar","peer","renderText","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","selectPeerPhotos","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectSponsoredMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","MediaViewer","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","clickSponsoredMessage","openUrl","animationKey","senderId","prevSenderId","usePreviousDeprecated","headerAnimation","isGhostAnimation","isReportAvatarModalOpen","openReportAvatarModal","closeReportAvatarModal","currentItem","getMediaViewerItem","info","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","beginHeavyAnimation","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","imageEl","messageListElement","getOffsetToContainer","scrollTop","offsetHeight","isMessageImageFullyVisible","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","isFromMedia","isMedia","handleForward","fromChatId","captureEscKeyListener","stopCurrentAudio","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromProfilePhotos","fromSponsoredMessage","fromSponsoredMessageIndex","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","StealthModeModal","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterPeersByQuery","ids","query","PeerPicker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","withDefaultPadding","forceShowSelf","onSelectedIdsChange","onFilterChange","allowMultiple","withStatus","itemInputType","usersById","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","getHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","footer","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","header","closeButton","headerTitle","renderHeaderContent","slideClassName","scrollLockEl","IGNORED_KEYS","Down","ArrowDown","Up","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","scrollHeight","preventDefaultForScrollKeys","HTMLElement","tagName","toLowerCase","getAttribute","isTextBox","disableScrolling","el","_excludedClosestSelector","passive","onkeydown","enableScrolling","sender","fromPeerId","EmbeddedStoryForward","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","MessageText","messageOrStory","withTranslucentThumbs","StoryFooter","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","appConfig","user","selectUser","selectChat","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","reportModal","giftInfoModal","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransitionDeprecated","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","useLongPress","onStart","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","active","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","StoryView","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","Array","_","i","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","reportStory","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","openMessageReport","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StorySettings","TOPIC_ICON_SIZE","ITEM_CLASS_NAME","ChatOrUserPicker","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","selectTopicsById","selectTopics","forumTopicsById","useSelector","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","searchTitle","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","renderChatItem","isSelf","isApiPeerChat","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","getSubtitle","PickerItem","FullNameTitle","isSavedMessages","avatarElement","PEER_PICKER_ITEM_HEIGHT_PX","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","Loading","topicId","TopicIcon","letterClassName","itemSelector","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","RecipientPicker","API_CHAT_TYPES","onSelectRecipient","setSearch","priorityIds","isDeletedUser","chatFullInfo","selectChatFullInfo","sorted","sortChatIds","filterChatIdsByType","renderingIds","isForwarding","isManyMessages","isStory","ForwardRecipientPicker","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","toChatId","getUserFirstOrLastName","getChatTitle","DraftRecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","AttachBotRecipientPicker","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","Dialogs","dismissDialog","sendMessage","isModalOpen","dialog","contactRequest","handleConfirm","contact","pick","messageList","getReadableErrorText","Notifications","notifications","notification","Notification","SafeLinkModal","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","OpenMapModal","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","UrlAuthModal","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","CalendarModal","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","hours","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","HistoryCalendar","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","timestamp","phoneCodeList","countryList","phoneCodes","NewContactModal","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","ResizeHandleType","resizeHandleSelectorsMap","Top","Bottom","topLeft","TopLeft","topRight","TopRight","bottomLeft","BottomLeft","bottomRight","BottomRight","resizeHandleSelectors","resizeTimeout","FULLSCREEN_POSITION","webApps","selectActiveWebApp","modalState","openedWebApps","isMinimizedState","activeTabBot","MinimizedWebAppModal","changeWebAppModalState","closeWebAppModal","oldLang","useLang","openedWebAppsValues","openedTabsCount","activeTabBotId","app","handleCloseClick","handleExpandClick","state","activeTabName","botName","pluralValue","renderTitle","isPopularApp","requestMainWebView","theme","extractCurrentThemeParams","activeUserCount","botActiveUsers","badgeText","formatIntegerCompact","PeerBadge","avatarContainer","textClassName","badgeClassName","userCountBadge","badgeIconClassName","userBadgeIcon","badgeIcon","runThrottled","cb","globalSearch","popularBotApps","fetchingStatus","botApps","recentBotIds","topBotApps","MoreAppsTabContent","shouldShowMoreMine","setShouldShowMoreMine","searchPopularBotApps","handleToggleShowMoreMine","prev","filteredFoundIds","LoadMoreDirection","Backwards","handleSearchInputReset","noFastList","preloadBackwards","onReset","sectionTitle","showMoreLink","sectionContent","WebAppGridItem","FULLSCREEN_BUTTONS_AREA_HEIGHT","MAIN_BUTTON_ANIMATION_TIME","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","activeWebApp","activeWebAppKey","selectWebApp","activeBotId","attachBot","attachMenu","bots","userFullInfo","selectUserFullInfo","botAppSettings","botInfo","appSettings","selectTheme","isPaymentModalOpen","regularPaymentStatus","payment","starsPaymentStatus","inputInvoice","starsInputInvoice","starsPayment","botAppPermissions","selectBotAppPermissions","paymentStatus","WebAppModalTabContent","webApp","registerSendEventCallback","registerReloadFrameCallback","isTransforming","isMultiTabSupported","onContextMenuButtonClick","modalHeight","closeActiveWebApp","sendWebViewData","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","updateWebApp","resetPaymentStatus","openChatWithInfo","openEmojiStatusAccessModal","openLocationAccessModal","mainButton","setMainButton","secondaryButton","setSecondaryButton","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequestingWriteAccess","setIsRequestingWriteAccess","requestedFileDownload","setRequestedFileDownload","bottomBarColor","setBottomBarColor","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","headerButtonRef","headerButtonCaptionRef","exitFullScreenCallback","fullscreenElementRef","activeWebAppName","appName","isBackButtonVisible","placeholderPath","isCloseModalOpen","isRemoveModalOpen","webAppKey","getWebAppKey","isAvailable","IS_GEOLOCATION_SUPPORTED","isAccessRequested","geolocation","isAccessGranted","updateCurrentWebApp","updatedPartialWebApp","update","themeParams","secondary_bg_color","themeBackgroundColor","bg_color","backgroundColorFromEvent","setBackgroundColorFromEvent","backgroundColorFromSettings","backgroundColor","backgroundDarkColor","themeHeaderColor","headerColorFromEvent","setHeaderColorFromEvent","headerColorFromSettings","headerColor","headerDarkColor","frameRef","isSimple","reloadFrame","sendEvent","sendFullScreenChanged","sendViewport","sendSafeArea","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","closeWebApp","openSuggestedStatusModal","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","eventType","eventData","is_fullscreen","forceReloadFrame","once","isNonStable","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","skipClosingConfirmation","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","custom_emoji_id","BigInt","customEmojiId","plannedEvents","getIsWebAppsFullscreenSupported","exitIfFullscreenCallback","TME_LINK_PREFIX","path_full","shouldIgnoreCache","force_request","is_visible","isSettingsButtonVisible","validateHexColor","color_key","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","shouldConfirmClosing","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","handleRejectFileDownload","fileUrl","handleCheckDownloadFile","file_name","access_requested","access_granted","geolocationData","getGeolocationStatus","accessRequested","accessGranted","latitude","longitude","altitude","course","heading","speed","horizontal_accuracy","accuracy","vertical_accuracy","handleRequestLocation","isMainButtonVisible","isSecondaryButtonVisible","handleHideCloseModal","handleConfirmCloseModal","handleHideRemoveModal","handleMainButtonClick","handleSecondaryButtonClick","buttonId","button_id","handleAppPopupModalClose","sendThemeCallback","setFullscreenCallback","checkIfFullscreen","sendFullScreenChangedCallback","visibilityChangedCallBack","prevModalState","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleAcceptPhone","shouldCloseActive","handleAcceptWriteAccess","handleDownloadFile","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","secondaryButtonCurrentPosition","secondaryButtonCurrentColor","secondaryButtonCurrentTextColor","secondaryButtonCurrentIsActive","secondaryButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideMainButton","setShouldHideMainButton","shouldHideSecondaryButton","setShouldHideSecondaryButton","shouldShowMainButton","setShouldShowMainButton","shouldShowSecondaryButton","setShouldShowSecondaryButton","shouldShowAppNameInFullscreen","setShouldShowAppNameInFullscreen","backButtonTextWidth","setBackButtonTextWidth","isVerticalLayout","rowsCount","hideDirection","mainButtonChangeTimeout","mainButtonFastTimeout","secondaryButtonChangeTimeout","secondaryButtonFastTimeout","appNameDisplayTimeout","frameStyle","handleBackClick","handleCollapseClick","handleShowContextMenu","backIconClass","closeIcon","stateBack","backButtonCaption","hasHeaderElement","hidden","multiTab","headerPanel","headerButton","backIconContainer","buttonCaptionContainer","headerSplitButton","collapseIcon","moreIcon","loadingPlaceholder","hide","viewBox","defaultPlaceholderGrid","placeholderSquare","renderDefaultPlaceholder","withButton","sandbox","allow","allowFullScreen","buttonsContainer","leftToRight","rightToLeft","topToBottom","bottomToTop","hideHorizontal","oneRow","twoRows","visible","mainButtonSpinner","hasCloseButton","webAppPopup","withoutTitle","filename","withNodes","withMarkdown","MINIMIZED_STATE_SIZE","DEFAULT_MAXIMIZED_STATE_SIZE","MAXIMIZED_STATE_MINIMUM_SIZE","cachedPosition","miniAppsCachedPosition","cachedSize","miniAppsCachedSize","WebAppModal","prolongWebView","openWebAppTab","openMoreAppsTab","closeMoreAppsTab","updateMiniAppCachedPosition","updateMiniAppCachedSize","getMaximizedStateSize","setMaximizedStateSize","getSize","openedOrderedKeys","sessionKeys","isMoreAppsTabActive","tabs","isMaximizedState","isFullScreen","supportMultiTabMode","menuRef","getTriggerElement","getRootElement","getMenuElement","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isDraggingEnabled","setIsDraggingEnabled","headerElement","containerElement","isDragging","draggableStyle","dragHandleElementRef","isDragEnabled","originalSize","minimumSize","elementCurrentPosition","setElementCurrentPosition","elementCurrentSize","setElementCurrentSize","getElementPositionOnStartTransform","setElementPositionOnStartTransform","getElementSizeOnStartTransform","setElementSizeOnStartTransform","getTransformStartPoint","setTransformStartPoint","elementPositionOnStartTransform","transformStartPoint","dragHandleElement","isInitiated","setIsInitiated","wasElementShown","setWasElementShown","startDragging","stopDragging","startResizing","stopResizing","isWindowsResizing","startWindowResizing","stopWindowResizing","hitResizeHandle","setHitResizeHandle","getVisibleArea","innerWidth","innerHeight","updateCurrentPosition","getActualPosition","getCenteredPosition","visibleArea","centeredPosition","handleStartDrag","handleStartResize","targetElement","resizeHandle","RESIZE_HANDLE_SELECTOR","getResizeHandleFromTarget","handleDragRelease","handleResizeRelease","ensurePositionInVisibleArea","visibleAreaWidth","visibleAreaHeight","componentWidth","componentHeight","newX","newY","adjustPositionWithinBounds","newPosition","ensureSizeInVisibleArea","sizeForCheck","newSize","originalWidth","originalHeight","adjustSizeWithinBounds","handleWindowResize","handleDrag","sizeOnStartTransform","pageVisibleX","pageVisibleY","maxX","maxY","newBounds","cleanups","resizeHandler","cursorStyle","actualPosition","useDraggable","getMinimumSize","currentSize","currentWidth","currentHeight","queryId","openTabsCount","useInterval","replyInfo","sendEventCallback","reloadFrameCallback","callback","handleSettingsButtonClick","handleRefreshClick","handleModalClose","handleCloseMoreAppsTab","handleTabClose","handleToggleClick","handleFullscreenClick","handleOpenMoreAppsTabClick","handleTabClick","tab","openBotChat","renderMenuItems","isAttachBot","renderMoreMenu","anchor","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","renderTabCurveBorder","fill","buildResizeHandleClass","handleClassName","RESIZE_HANDLE_CLASS_NAME","useHorizontalScroll","dialogRef","dialogStyle","dialogContent","isLowStackPriority","shortName","renderActiveTab","noBackdropClose","BotTrustModal","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","AttachBotInstallModal","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","DeleteFolderDialog","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","PremiumFeatureItem","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","SliderDots","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","isLast","isPreLast","isFirst","isPreFirst","isInvisible","PremiumLimitsCompare","leftValue","rightValue","floatingBadgeIcon","rightStyle","COLOR_START","COLOR_END","PremiumLimitPreview","colorStepProgress","lerp","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","PremiumFeaturePreviewStickers","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","AVATAR_SIZES","giant","PremiumFeaturePreviewVideo","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","LIMITS_DESCRIPTIONS","PremiumFeatureModal","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","amount","months","currency","perMonthPrice","formatCurrency","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumFeaturePreviewStories","videoSections","videos","PREMIUM_BOTTOM_VIDEOS","PremiumSubscriptionOption","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","documentId","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","PremiumMainModal","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","monthOption","subscribeButtonText","CustomEmoji","isBig","PremiumLogo","template","first","second","emoji","thumbCustomEmojiId","link","getHeaderText","statusText","entities","statusEntities","renderFooterText","ItemPicker","notFoundText","noScrollRestore","isViewOnly","itemClassName","forceRenderAllItems","onDisabledClick","optionalProps","lockedSelectedValues","lockedUnselectedValues","timeoutId","selectedValues","selectedValue","lockedSelectedValuesSet","Set","lockedUnselectedValuesSet","sortedItemValuesList","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","has","concat","handleItemClick","newSelectedValues","splice","onSelectedValuesChange","onSelectedValueChange","viewportValuesList","handleFilterChange","renderItem","itemOption","subLabel","isItemLoading","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","inputElement","Radio","onlyInput","pickerList","padded","noResults","CountryPickerModal","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","defaultName","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","main","picker","GiveawayChannelPickerModal","giveawayChatId","initialSelectedIds","onSelectedIdsConfirmed","pendingChannelId","setPendingChannelId","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","channelIds","isChatSuperGroup","displayedChannelIds","foundChannelIds","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","confirmPrivateLinkChannelSelection","handleModalConfirm","PickerModal","shouldAdaptToSearch","withFixedHeight","confirmButtonText","GiveawayTypeOption","isLink","onClickAction","userNames","selectedMemberIds","displayText","members","adminMembersById","GiveawayUserPickerModal","memberIds","statusesById","adminIdsSet","sortUserIds","displayedMemberIds","filteredUserIds","isUserBot","handleSelectedMemberIdsChange","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","gifts","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","isStarsGiftEnabled","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","starsGiftOptions","starOptions","GiveawayModal","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","launchPrepaidStarsGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isUserPickerModalOpen","openUserPickerModal","closeUserPickerModal","isChannelPickerModalOpen","openChannelPickerModal","closeChannelPickerModal","TYPE_OPTIONS","GiftStar","customExpireDate","setCustomExpireDate","selectedRandomUserCount","setSelectedRandomUserCount","selectedGiveawayOption","setGiveawayOption","selectedStarOption","setSelectedStarOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedMonthOption","setSelectedMonthOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","dataStarsPrepaidGiveaway","setDataStarsPrepaidGiveaway","isPremiumGiveaway","isStarsGiveaway","selectedUserCount","boostQuantity","boostStarsQuantity","yearlyBoosts","SUBSCRIBER_OPTIONS","monthQuantity","isStarsPrepaidGiveaway","isPremiumPrepaidGiveaway","selectedGift","gift","selectedStarsGift","stars","filteredGifts","basicGift","userCountOptions","winner","winnerCountOptions","winners","quantity","handlePremiumClick","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleRandomUserCountChange","newValue","handleWinnerCountChange","handlePrizeDescriptionChange","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSelectedUserIdsChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","handleStarClick","renderGiveawayOptionList","filteredChannelIds","deleteParticipantsHandler","iconClassName","subLabelClassName","formatDateTimeToString","boosts","RangeSliderWithMarks","rangeCount","marks","StarTopupOptionList","selectedStarCount","match","Link","isPrimary","renderPremiumFeaturesLink","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","PremiumLimitReachedModal","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","stickerSetEl","isClose","animateScroll","maxDistance","StickerSetCover","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerMediaHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","StickerButton","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","clickArg","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","withSparkles","setEmojiStatus","isFree","hasEffect","isCustomEmoji","shouldLoad","isIntesectingForShowing","handleBeforeContextMenu","shouldRenderContextMenu","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","until","shouldShowCloseButton","isFolderEmoji","emojiToIconMap","contextMenuItems","preventMessageInputBlurWithBubbling","Sparkles","preset","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","noVideoOnMobile","withSharedAnimation","noFastClick","ReactionEmoji","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","LOCAL_TGS_URLS","StarReaction","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","collectibleStatuses","collectibleEmojiStatuses","statuses","StickerSet","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onReactionContext","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isStatusCollectible","COLLECTIBLE_STATUS_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","collectibleEmojiIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","isHqEmoji","canvasRef","HEADER_BUTTON_WIDTH","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","isWithPaidReaction","isPaidReactionAvailable","defaultTagReactions","CustomEmojiPicker","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","isFolderPicker","handleContentScroll","shouldHideTopBorder","pickTruthy","collectibleStatusEmojis","collectibleStatusEmojiIds","prefix","canLoadAndPlay","areAddedLoaded","allSets","defaultSets","createFolderEmojiSet","TOP_SYMBOL_SET_ID","topReactionsSlice","unshift","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","defaultStatusIconsPack","uniqueByField","defaultTopicIconsPack","userSetIds","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","newLeft","handleEmojiSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","FOLDER_SYMBOL_SET_ID","isFaded","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","StatusPickerMenu","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CUSTOM_EMOJI_SIZE","SuggestedStatusModal","closeSuggestedStatusModal","sendWebAppEvent","renderingModal","mockPeerWithStatus","formatShortDuration","handleSetStatus","expires","referrerWebAppKey","hasAbsoluteCloseButton","loopLimit","PeerChip","mockPeer","withEmojiStatus","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","BoostModal","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","chatMessage","GiftCodeModal","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","tableData","isFromGiveaway","TableInfoModal","ChatlistAlready","invite","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","isNew","alreadyPeerIds","newChatsCount","noCustomEmojiPlayback","noTitleAnimations","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","Badge","buttonBadge","isAlternateColor","ChatlistDelete","suggestedPeerIds","leaveChatlist","ChatlistNew","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","ChatlistInviteModal","renderingInfo","renderingFolderTitle","folderTabNumber","folderTitle","foldersWrapper","folders","badgeCount","isBadgeActive","ChatInviteModal","acceptChatInvite","closeChatInviteModal","participantsRef","prevModal","usePrevious","hash","inviteInfo","about","isBroadcast","participantIds","participantsCount","isRequestNeeded","handleAccept","acceptLangKey","requestToJoinLangKey","customPeer","getCustomPeerFromInvite","participants","withVideo","participantCount","participant","minLevelToRestrictAds","channelRestrictAdsLevelMin","AboutAdsModal","closeAboutAdsModal","moreMenuRef","isMonetizationSharing","canReport","renderingIsNewDesign","regularAdContent","SafeLink","listItemData","TableAboutModal","headerIconName","withSeparator","SponsoredMessageContextMenuContainer","triggerRef","shouldSkipAbout","onItemClick","AboutMonetizationModal","blockchainText","monetizationTitle","specialReplacement","twoFaSettings","hint","passwordHint","VerificationMonetizationModal","closeMonetizationVerificationModal","clearMonetizationVerificationError","processMonetizationRevenueWithdrawalUrl","shouldShowPassword","setShouldShowPassword","password","currentPassword","handleClearError","PasswordForm","shouldShowSubmit","errorKey","withRegular","clearError","isPasswordVisible","shouldResetValue","onChangePasswordVisibility","EmojiStatusAccessModal","closeEmojiStatusAccessModal","toggleUserEmojiStatusPermission","loadDefaultStatusIcons","currentStatusIndex","setCurrentStatusIndex","totalCount","prevIndex","renderPickerItem","chatItem","itemName","isBotAccessEmojiGranted","onCloseHandler","renderStatusText","LocationAccessModal","closeLocationAccessModal","toggleUserLocationPermission","renderInfo","ReportAdModal","reportSponsoredMessage","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","randomId","renderingSection","renderingDepth","sectionDepth","sections","bottomText","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","ReportModal","reportMessages","closeReportModal","openPreviousReportModal","setText","subject","handleTextChange","closeReportMessageModalHandler","sendMessageReportHandler","Report","TextArea","isOptional","maxLengthIndicator","noReplaceNewlines","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","PermissionCheckboxList","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","selectCanDeleteSelectedMessages","isSuperGroup","contactName","getPrivateChatUserId","chatBot","isSystemBot","selectBot","canBanUsers","getHasAdminRight","isCreator","isChatWithBot","selectIsChatWithBot","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","DeleteMessageModal","closeDeleteMessageModal","deleteMessages","reportChannelSpam","deleteChatMember","deleteScheduledMessages","exitMessageSelectMode","updateChatMemberBannedRights","deleteParticipantHistory","defaultBannedRights","peerIdsToDeleteAll","setPeerIdsToDeleteAll","peerIdsToBan","setPeerIdsToBan","peerIdsToReportSpam","setPeerIdsToReportSpam","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","shouldDeleteForAll","setShouldDeleteForAll","peerList","senderArray","getSendersFromSelectedMessages","buildNestedOptionListWithAvatars","member","peerListToDeleteAll","peerListToReportSpam","peerListToBan","isCurrentUserInList","isAdmin","shouldShowOption","peerNames","buildCollectionByCallback","ACTION_SPAM_OPTION","nestedOptions","opt","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByPeerId","selectedMessageIdList","msgId","selectSenderFromMessage","handleReportSpam","userMessagesMap","messageIdList","participantId","handleDeleteMessages","filteredMessageIdList","handleDeleteAllPeerMessages","peerIdList","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageList","isNaN","CheckboxGroup","nestedCheckbox","isPrivateChat","canPinForAll","PinMessageModal","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","UnpinAllMessagesModal","pinnedMessagesCount","onUnpin","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","selectedMessageIds","selectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","MessageSelectToolbar","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","handleCopy","useHotkeys","useCopySelectedMessages","handleExitMessageSelectMode","handleDelete","onBackspace","onEsc","prevSelectedMessagesCount","formattedMessagesCount","renderButton","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","PrivacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","userName","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","onSuccess","handleOpenPremium","ReadTime","LastSeen","Separator","reactorModal","reactors","ReactorListModal","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","flatMap","peerReactions","reactor","seenByUser","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","EmojiInteractionAnimation","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","endHeavyAnimation","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","ChatLanguageModal","requestMessageTranslation","closeChatLanguageModal","setSettingOption","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","CollectibleInfoModal","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","copyTextToClipboard","formattedCollectible","purchaseDate","formatCurrencyAsString","cryptoCurrency","cryptoAmount","Mention","chip","createMapStateToProps","props","currentType","isVoice","byChatId","globalMessagesByChatId","messages","searchChatId","shouldWarnAboutSvg","byKey","AudioResults","searchMessagesGlobal","openAudioPlayer","foundMessages","parseSearchResultKey","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","LeftSearchResultChat","withUsername","withOpenAppButton","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","handleOpenApp","useSelectWithEnter","storyViewerOrigin","hasMainMiniApp","MuteChatModal","ChatFolderModal","BotAppResults","recentSet","withoutRecent","handleChatClick","shouldReplaceHistory","privateChatUserId","privateChatUser","ChatMessage","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","DateSuggest","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","selectTopic","LeftSearchResultTopic","foundTopicIds","ChatMessageResults","dateSearchQuery","onSearchDateSelect","openThread","handleTopicClick","nothingFound","topUserIds","topPeers","recentlyFoundChatIds","RecentContacts","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","ChatResults","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","searchContext","setSearchContext","context","handlePickerItemClick","getSearchContextCaption","handleClickContext","itemPlaceholderClass","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","shouldResetResultsByType","shouldCheckFetchingMessagesStatus","handleClickShowMoreLocal","handleClickShowMoreGlobal","actualFoundIds","isMessagesFetching","shouldRenderMessagesSection","noScrollRestoreOnTop","customIcon","shouldCleanup","CURRENT_TYPE","FileResults","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","LinkResults","WebLink","onMessageClick","MediaResults","handleSelectMedia","isMediaGrid","isMessageList","Media","TABS","GlobalSearchContent","ChannelList","BotApps","Links","Files","Music","Voice","CHAT_TABS","currentContent","LeftSearch","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","handleSearchDateSelect","TabList","onSwitchTab","renderCount","INITIAL_STATE","email","twoFaReducer","payload","maxChats","selectCurrentLimit","SettingsFoldersChatFilters","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","chatIds","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","withPeerTypes","onSelectedCategoriesChange","FolderPickerMenu","REACTION_SELECTOR_WIDTH","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","SettingsFoldersEdit","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","iconRef","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","typeKey","renderChatType","handleEmojiClick","isFolderIcon","newEmoji","setPosition","handleOpenPicker","bound","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","str","originalLength","trimmed","trimEnd","lastIndex","lastMatch","EMOJI_REGEX","exec","startPos","endPos","removeLastEmojiIfAny","withEmojiPicker","onEmojiClick","emoticon","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","SettingsFoldersMain","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","isStatic","allowSelection","shareFolderScreen","SettingsShareChatlist","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","pinnedChatIds","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","AnimatedIcon","FoldersShare","withShare","onRevoke","lockedUnselectedIds","SettingsFolders","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsPasswordForm","shouldDisablePasswordManager","expectedPassword","validationError","setValidationError","newPassword","PasswordMonkey","SettingsPasscodeCongratulations","fullReset","STICKER_SIZE_PASSCODE","Congratulations","SettingsPasscodeEnabled","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","SettingsPasscodeStart","passcode","SettingsPasscode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeForm","PasscodeEnabled","premiumSection","handleOpenPremiumModal","StarIcon","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","canLimitNewMessagesWithoutPremium","canChange","PrivacyLockedOption","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","SettingsActiveSession","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","iconDevice","dateActive","box","appVersion","ip","region","getLocation","note","actionHeader","actionName","SettingsActiveSessions","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","SettingsActiveWebsite","terminateWebAuthorization","renderingBot","browser","SettingsActiveWebsites","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","StickerSetCard","handleCardClick","CHAT_HEIGHT_PX","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","canPlayAnimatedEmojis","SettingsCustomEmoji","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","SettingsDataStorage","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","SettingsDoNotTranslate","language","displayedOptions","setDisplayedOptions","displayedOptionList","currentLanguageOption","otherOptionList","prevLanguage","ManageUsernames","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","UsernameInput","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","SettingsEditProfile","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","SettingsExperimental","requestWave","snapButtonRef","isSnapButtonAnimating","setIsSnapButtonAnimating","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","handleRequestWave","startX","startY","handleRequestConfetti","handleSnap","animateSnap","Experimental","IS_WAVE_TRANSFORM_SUPPORTED","IS_SNAP_EFFECT_SUPPORTED","IS_ELECTRON","shouldUseSystemTheme","SettingsGeneral","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","timeFormatOptions","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","WallpaperTile","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","background","isBlurred","themes","loadedWallpapers","SettingsGeneralBackground","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","patternColor","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","SettingsHeader","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyGifts","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneNumberAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyGiftsAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyGiftsDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","canTranslate","canTranslateChats","languages","SettingsLanguage","loadLanguages","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","starsBalance","balance","sessionCount","SettingsMain","openSupportChat","openGiftRecipientPicker","openStarsBalanceModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","languageInfo","formatStarsAmount","FAQ_URL","PRIVACY_URL","renderTextFilters","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","SettingsNotifications","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","SettingsPrivacy","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","botsPrivacy","isVisibilityEverybody","shouldShowBotsString","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","conjunction","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","BlockUserModal","setUserSearchQuery","filteredContactIds","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","SettingsPrivacyBlockedUsers","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","selectShouldHideReadMarks","SettingsPrivacyLastSeen","canShowHideReadTime","handleChangeShouldHideReadMarks","SettingsPrivacyPublicProfilePhoto","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","headerText","prepareSubtitle","userIdsCount","chatIdsCount","isAllowBots","userCountString","chatCountString","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","SettingsPrivacyVisibility","secondaryScreen","PREMIUM_CATEGORY","CUSTOM_PEER_PREMIUM","getCurrentPrivacySettings","SettingsPrivacyVisibilityExceptionList","isAllowList","withPremiumCategory","withMiniAppsCategory","setPrivacySettings","customPeerBots","isCustomPeer","avatarIcon","isAvatarSquare","peerColorId","miniAppsCategory","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","SERVICE_NOTIFICATIONS_USER_ID","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","SettingsQuickReaction","setDefaultReaction","withIcon","addedSetIds","SettingsStickers","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","SettingsTwoFaCongratulations","STICKER_SIZE_TWO_FA","recoveryEmail","animatedEmoji","selectAnimatedEmoji","codeLength","waitingEmailCodeLength","SettingsTwoFaEmailCode","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","SettingsTwoFaEnabled","SettingsTwoFaSkippableForm","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","SettingsTwoFaStart","SettingsTwoFa","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaPassword","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_GIFTS_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","Settings","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsGeneralBackgroundColor","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","userStatusesById","ContactList","openNewContactDialog","isSearching","NewChatStep1","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","NewChatStep2","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","NewChat","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","ArchivedChats","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","div","ALLOWED_QUOTE_ENTITIES","ApiMessageEntityTypes","Bold","Italic","Underline","Strike","Spoiler","getSelectionAsFormattedText","range","html","clonedSelection","cloneContents","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","currentElement","parentElement","tag","entityType","wrapHtmlWithMarkupTags","innerHTML","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","useModuleLoader","Bundles","Extra","getCopyLabel","hasSelection","editDate","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","readDate","handleOpenModal","MessageContextMenu","isReactionPickerOpen","poll","enabledReactions","reactionsLimit","targetHref","canSendNow","canReschedule","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canFaveSticker","canUnfaveSticker","canCopy","canSelect","canSaveGif","canRevote","canClosePoll","canShowOriginal","canSelectLanguage","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","hasCustomEmoji","isInSavedMessages","onReply","onOpenThread","onEdit","onPin","onFaveSticker","onUnfaveSticker","onSend","onReschedule","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","onCopyMessages","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","userFullName","canGift","openCustomEmojiSets","openGiftModal","scrollableRef","noReactions","areReactionsPossible","withReactions","isPremiumGift","isGiftCode","isStarGift","isStarGiftUnique","shouldShowGiftButton","areItemsHidden","hideItems","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","handleAfterCopy","handleGiftClick","forUserId","customEmojiSet","handleOpenCustomEmojiSets","copyOptions","statefulContent","afterEffect","getMessageText","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","selection","getSelection","Promise","resolve","mediaLoader","copyImageToClipboard","anchorNode","parentNode","selectionParentNode","selectedMessageElement","checkMessageHasSelection","getMessageIdsForSelectedText","execCommand","clipboardText","shouldRenderAsHtml","copyHtmlToClipboard","getMessageTextWithSpoilers","getMessageCopyOptions","groupStatetefulContent","extraHeightAudioPlayer","middleColumn","middleColumnComputedStyle","extraHeightPinned","extraPaddingX","extraTopPadding","extraMarginTop","menuElMinWidth","handleOpenMessageReactionPicker","withMaxHeight","ReactionSelector","allAvailableReactions","currentReactions","onShowMore","isOutgoing","messagesCount","withPreventDefaultOnMouseDown","MenuSeparator","inline","withWrap","ReadTimeMenuItem","LastEditTimeMenuItem","detectedLanguage","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","noOptions","canReplyGlobally","selectCanForwardMessage","isOwn","isOwnMessage","isBot","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isScheduled","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendText","isUserRightBanned","canReplyInChat","isMessageLocal","hasTtl","hasMessageTtl","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","canCopyNumber","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","translationRequestLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","selectPollFromMessage","storyData","selectCanGift","isForbidden","hasFullInfo","canScheduleUntilOnline","selectCanScheduleUntilOnline","isMessageTranslated","selectIsReactionPickerOpen","ContextMenuContainer","album","updateDraftReplyInfo","setEditingId","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","loadSeenBy","openSeenByModal","openReactorListModal","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","loadOutboxReadDate","copyMessageLink","addLocalPaidReaction","openPaidReactionModal","useShowTransition","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","canQuoteSelection","setCanQuoteSelection","requestCalendar","calendar","useSchedule","uniqueReactors","PREVIEW_AVATAR_COUNT","msg","downloadableMedia","selectionRange","getRangeAt","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","startOffset","endOffset","closeMenu","closePinModal","handleReply","quoteText","replyToMsgId","replyToPeerId","handleOpenThread","handleEdit","handlePin","handleUnpin","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","shouldIncludeGrouped","handleCopyNumber","handleSaveGif","gif","handleToggleReaction","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","scheduledMaxDate","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","canSendStickers","shouldSchedule","selectShouldSchedule","StickerSetModal","prevStickerSet","renderingStickerSet","isAdded","isScheduleRequested","isPreloadedGlobally","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","CustomEmojiSetsModal","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","currentChatId","currentThreadId","canReportChat","canCreateTopic","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","commands","botPrivacyPolicyUrl","privacyPolicyUrl","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","HeaderMenuContainer","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewMonetization","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openMonetizationStatistics","openBoostStatistics","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleMonetizationClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","commandButtons","cmd","hasPrivacyCommand","deleteTitle","DeleteChatModal","isSavedDialog","MiddleSearchResult","senderPeer","messageChat","shouldShowChat","hiddenForwardTitle","hiddenUserName","senderName","getMessageSenderName","topRow","LastMessageMeta","meta","MessageSummary","truncateLength","CHANNELS_PEER","titleKey","RESULT_ITEM_CLASS_NAME","runDebouncedForSearch","requestedQuery","savedTag","fetchingQuery","isHashtag","selectCurrentMiddleSearch","lastSearchQuery","savedTags","savedReactionTags","isHistoryCalendarOpen","isHashtagQuery","searchType","MiddleSearch","updateMiddleSearch","resetMiddleSearch","performMiddleSearch","closeMiddleSearch","openHistoryCalendar","loadSavedReactionTags","shouldCancelSearchRef","focusedIndex","setFocusedIndex","canFocusNewer","canFocusOlder","isFullyHidden","setIsFullyHidden","hiddenTimerRef","maybeLongPressActiveRef","isFocused","markFocused","markBlurred","isViewAsList","setIsViewAsList","refs","handleClickOutside","useClickOutside","hasResultsContainer","isOnlyHash","areResultsEmpty","hasResultsDropdown","hasQueryData","hasNavigationButtons","focusInput","blurInput","blur","visualViewport","mainEl","pageTop","requestNextMutation","prevIsCalendarOpen","savedTagsArray","hasSavedTags","areSavedTagsDisabled","handleQueryChange","newQuery","removeListeners","fastRaf","viewportResults","searchResultKey","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","handleMessageClick","getSearchResultKey","handleTriggerViewStyle","foundResult","updateSearchParams","activateSearchTag","removeSearchSavedTag","handleDeleteTag","handleChangeSearchType","handleFocusOlder","newFocusIndex","handleFocusNewer","renderTypeTag","isForTag","selectedType","renderDropdown","dropdown","dropdownHidden","separator","wrap","isChosen","SavedTagButton","withCount","searchTypes","teactOrderKey","focused","mobile","withDropdown","adaptSearchBorders","canClose","resultsItemSelector","hasUpButton","hasDownButton","onStartBackspace","withBackIcon","onUpClick","onDownClick","searchTags","savedSearchTag","icons","getDayStartAt","counter","viewStyle","noForcedUpperCase","mobileNavigation","navigationButton","navigationDisabled","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","StickerPicker","isForEffects","loadRecentStickers","addRecentSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","ReactionPickerLimited","isTouchScreen","shouldUseCurrentReactions","reactionsToSort","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","pickerMaxHeight","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","ReactionPicker","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","handleToggleCustomReaction","handleReactionContextMenu","handleStoryReactionSelect","actionText","customEmojiMessage","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","BLUR_CANVAS_SIZE","AttachmentModalItem","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","isFullyVisible","isHorizontal","viewportY1","viewportY2","y2","findInViewport","selectorOrElements","shouldContainBottom","allElements","visibleIndexes","isFound","setTooltipItemVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","MentionTooltip","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","AttachmentModal","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","svgRef","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","isInAlbum","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","svg","baseVal","leftChars","leftCharsBeforeLimit","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","isBottomDividerShown","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","rx","uniqueId","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","PollModal","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","addNewOption","newOptions","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","EmojiButton","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","EmojiCategory","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","EmojiPicker","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","GifButton","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","GifPicker","canSendGifs","onGifSelect","loadSavedGifs","debounceMs","shouldUnsave","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","SymbolMenuFooter","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","SymbolMenu","isMessageComposer","menuPositionOptions","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","mobileClassName","onMouseEnter","ChatCommand","withAvatar","freezeWhenClosed","ChatCommandTooltip","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","BotCommandMenu","botCommand","StickerTooltip","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","showItems","handleOpenMessageEffectsPicker","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","BLOCKQUOTE","CONFLICTING_FORMATS","fragmentEl","analyzeFormatting","formats","hasNestedFormats","hasConflictingFormats","EDITABLE_INPUT_ID","toUpperCase","format","spoiler","fragment","formatElements","TextFormatter","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","formatAnalysis","setFormatAnalysis","useVirtualBackdrop","analysis","removeAllRanges","addRange","applyFormatPreservingOthers","isFormatActive","createFormattedHtml","Code","Blockquote","elementRange","createRange","selectNodeContents","startContainer","endContainer","beforeText","selectedText","afterText","newHtml","insertAdjacentHTML","newRange","selectedNode","childNodes","node","textNode","createTextNode","setStart","setEnd","prevAnalysis","htmlToInsert","newSelection","insertedElement","newAnalysis","restoreSelection","getSelectedText","shouldDropCustomEmoji","replaceChildren","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","handleSpoilerText","handleBoldText","handleItalicText","handleUnderlineText","handleStrikethroughText","handleMonospaceText","handleQuoteText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","m","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","CustomEmojiButton","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","BaseResult","thumbnailDataUrl","getWebDocumentHash","decoding","ArticleResult","inlineResult","webThumbnail","GifResult","_gif","MediaResult","isForGallery","thumbnailBlobUrl","StickerResult","STICKER_SIZE_INLINE_BOT_RESULT","InlineBotTooltip","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","SendAsMenu","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","StickerSetResult","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","StickerSearch","loadFeaturedStickers","selectCurrentGifSearch","canPostInChat","GifSearch","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","StatisticsRecentMessage","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","messagesById","storiesById","selectPeerStories","Statistics","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentStory","StatisticsMessagePublicForward","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","PollAnswerResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","renderViewMoreButton","PollResults","resultsByOption","buildCollectionByKey","ICON_SIZE","createTopicPanel","CreateTopic","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","noLoopLimit","editTopicPanel","EditTopic","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","ManageBot","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","canChangeInfo","canInvite","exportedInvites","ManageChannel","updateChat","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","formatInteger","joinRequests","ManageChatAdministrators","onChatMemberSelect","toggleSignatures","areSignaturesEnabled","areSignaturesShown","areProfilesEnabled","areProfilesShown","canAddNewAdmins","canToggleSignatures","adminMembers","admins","isOwner","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleToggleSignatures","handleToggleProfiles","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","ManageChatPrivacyType","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","RemoveGroupUserModal","loadMoreMembers","usersId","availableMemberIds","canDeleteMembers","removedMembers","ManageChatRemovedUsers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","forDiscussionIds","linkedChat","ManageDiscussion","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","ManageGroup","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","adminRights","ManageGroupAdminRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","addAdmins","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","ManageGroupMembers","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","ManageGroupPermissions","updateChatDefaultBannedRights","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","ManageGroupUserPermissions","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","ManageGroupUserPermissionsCreate","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","ManageInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","n","importers","requesters","ManageInviteInfo","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","ManageInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","JoinRequest","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","ManageJoinRequests","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","ManageReactions","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","isCenteredLayout","notPersonalPhoto","ManageUser","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","Management","GroupRecentActions","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","Checkout","invoice","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","useMediaTransition","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","prices","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","ConfirmPayment","noRedirect","onPaymentFormSubmit","messageKey","form","PasswordConfirm","onPasswordChange","clearPaymentError","cardName","onInputChange","useFocusAfterAnimation","animationDuration","CardInput","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","ExpiryInput","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","Select","hasArrow","SavedPaymentCredentials","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","nativeParams","nativeProvider","providerName","isProviderError","smartGlocalToken","stripeId","passwordValidUntil","validUntil","PaymentModal","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","setStep","nextStep","field","savedInfo","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","shippingOption","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","shouldFillRequestedData","isEmailRequested","isPhoneRequested","isNameRequested","isShippingAddressRequested","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","isPasswordMissing","isEmailSentToProvider","isPhoneSentToProvider","renderModalContent","descriptionKey","renderError","optionId","receipt","ReceiptModal","prevReceipt","renderingReceipt","fullAddress","credentialsTitle","totalAmount","InviteViaLinkModal","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedSubtitle","OneTimeMediaModal","closeOneTimeMediaModal","handlePlayVoice","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","WebAppsCloseConfirmationModal","closeWebAppsCloseConfirmationModal","shouldSkipInFuture","setShouldSkipInFuture","shouldSkipConfirmation","handleSelectWithEnter","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek","avatarPeer","avatarWebPhoto","clickable","webPhoto","badge","modalProps","hasButton","hasBackdrop","absoluteCloseButtonColor","headerAvatarPeer","starsNeeded","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","renderingOptions","canExtend","maxOption","forceShowAll","currentStackedStarsCount","canExtendOptions","isExtended","starsCount","isWide","isOdd","isActiveOption","perUserStarCount","perUserStars","wideOption","optionTop","stackedStars","stackedStar","optionBottom","moreOptions"],"sourceRoot":""}